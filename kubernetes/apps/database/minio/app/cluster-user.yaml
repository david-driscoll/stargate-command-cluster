---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: cluster-user
spec:
  refreshPolicy: Periodic
  refreshInterval: "2m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: ${NAMESPACE}
  target:
    name: cluster-user
    creationPolicy: Owner
    deletionPolicy: Delete
    template:
      metadata:
        labels:
          cnpg.io/reload: "true"
        annotations:
          reloader.stakater.com/auto: "true"
          reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
      data:
        CONSOLE_ACCESS_KEY: "${CLUSTER_CNAME}"
        CONSOLE_SECRET_KEY: "{{ .password }}"
        credentials: |
          [default]
          aws_access_key_id = ${CLUSTER_CNAME}
          aws_secret_access_key = {{ .password }}
        config: |
          [default]
          region=home
        S3_PROVIDER: Minio
        S3_ENDPOINT: https://s3.${CLUSTER_DOMAIN}
        AWS_ACCESS_KEY_ID: "${CLUSTER_CNAME}"
        AWS_SECRET_ACCESS_KEY: "{{ .password }}"
        username: "${CLUSTER_CNAME}"
        credential: "{{ .password }}"
        password: "{{ .password }}"
        endpoint: "https://s3.${CLUSTER_DOMAIN}"
        region: "homelab"
  dataFrom:
    - extract:
        key: "cluster-user-password"

---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &name "cluster-user-password"
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  refreshPolicy: CreatedOnce
  target:
    name: *name
    creationPolicy: Owner
    deletionPolicy: Retain
    template:
      data:
        password: "{{ .password }}"
  dataFrom:
    - sourceRef:
        generatorRef:
          apiVersion: generators.external-secrets.io/v1alpha1
          kind: Password
          name: "${APP}-password-generator"
