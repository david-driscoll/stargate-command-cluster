---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &name authentik-postgres
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  refreshPolicy: Periodic
  refreshInterval: 10m
  secretStoreRef:
    kind: ClusterSecretStore
    name: database
  target:
    name: *name
    creationPolicy: Owner
    deletionPolicy: Delete
    template:
      metadata:
        labels:
          cnpg.io/reload: "true"
        annotations:
          reloader.stakater.com/auto: "true"
      data:
        username: "authentik"
        password: "{{ .password }}"
        host: "postgres-rw.database.svc.cluster.local"
        port: "5432"
        database: "postgres"
        pgpass: "postgres-rw.database.svc.cluster.local:5432:postgres:authentik:{{ .password }}"
        jdbc-uri: "jdbc:postgresql://postgres-rw.database.svc.cluster.local:5432/postgres?password={{ .password }}&user=authentik"
        uri: "postgresql://authentik:{{ .password }}@postgres-rw.database.svc.cluster.local:5432/postgres"
  dataFrom:
    - extract:
        key: "authentik-postgres-password"

---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/postgresql.cnpg.io/database_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Database
metadata:
  name: &app authentik
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  cluster:
    name: postgres
  name: authentik
  owner: authentik
  ensure: present
  allowConnections: true
  databaseReclaimPolicy: retain
  schemas:
    - ensure: present
      name: public
      owner: authentik
    - ensure: present
      name: authentik
      owner: authentik
