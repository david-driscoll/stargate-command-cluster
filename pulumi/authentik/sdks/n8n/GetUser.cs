// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.N8n
{
    public static class GetUser
    {
        public static Task<GetUserResult> InvokeAsync(GetUserArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserResult>("n8n:index/getUser:getUser", args ?? new GetUserArgs(), options.WithDefaults(), Utilities.PackageParameterization());

        public static Output<GetUserResult> Invoke(GetUserInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserResult>("n8n:index/getUser:getUser", args ?? new GetUserInvokeArgs(), options.WithDefaults());

        public static Output<GetUserResult> Invoke(GetUserInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserResult>("n8n:index/getUser:getUser", args ?? new GetUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserArgs : global::Pulumi.InvokeArgs
    {
        [Input("email")]
        public string? Email { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        public GetUserArgs()
        {
        }
        public static new GetUserArgs Empty => new GetUserArgs();
    }

    public sealed class GetUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("email")]
        public Input<string>? Email { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        public GetUserInvokeArgs()
        {
        }
        public static new GetUserInvokeArgs Empty => new GetUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserResult
    {
        public readonly string CreatedAt;
        public readonly string Email;
        public readonly string FirstName;
        public readonly string Id;
        public readonly bool IsOwner;
        public readonly bool IsPending;
        public readonly string LastName;
        public readonly string Role;
        public readonly Outputs.GetUserSettingsResult Settings;
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetUserResult(
            string createdAt,

            string email,

            string firstName,

            string id,

            bool isOwner,

            bool isPending,

            string lastName,

            string role,

            Outputs.GetUserSettingsResult settings,

            string updatedAt)
        {
            CreatedAt = createdAt;
            Email = email;
            FirstName = firstName;
            Id = id;
            IsOwner = isOwner;
            IsPending = isPending;
            LastName = lastName;
            Role = role;
            Settings = settings;
            UpdatedAt = updatedAt;
        }
    }
}
