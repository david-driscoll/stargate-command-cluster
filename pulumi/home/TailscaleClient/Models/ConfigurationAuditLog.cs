// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Tailscale.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ConfigurationAuditLog : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The type of change attempted against the `target`.</summary>
        public global::Tailscale.Client.Models.ConfigurationAuditLog_action? Action { get; set; }
        /// <summary>Additional information about the event, such as a client-provided reason, if it exists.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ActionDetails { get; set; }
#nullable restore
#else
        public string ActionDetails { get; set; }
#endif
        /// <summary>The person who caused the action related to this event.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Tailscale.Client.Models.ConfigurationAuditLog_actor? Actor { get; set; }
#nullable restore
#else
        public global::Tailscale.Client.Models.ConfigurationAuditLog_actor Actor { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Timestamp recording the time that the audit log rate limiter enqueued the record to be logged at a future time, in RFC 3339 format.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeferredAt { get; set; }
#nullable restore
#else
        public string DeferredAt { get; set; }
#endif
        /// <summary>Provided when the configuration change failed to be completed. It is a user-presentable reason for the failure.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Error { get; set; }
#nullable restore
#else
        public string Error { get; set; }
#endif
        /// <summary>Identifier assigned to one or more audit log events, all of which are the result of a single operation.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EventGroupID { get; set; }
#nullable restore
#else
        public string EventGroupID { get; set; }
#endif
        /// <summary>Timestamp of the audit log event, in RFC 3339 format.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EventTime { get; set; }
#nullable restore
#else
        public string EventTime { get; set; }
#endif
        /// <summary>The value of `target.property` after the event.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Tailscale.Client.Models.ConfigurationAuditLog.ConfigurationAuditLog_new? New { get; set; }
#nullable restore
#else
        public global::Tailscale.Client.Models.ConfigurationAuditLog.ConfigurationAuditLog_new New { get; set; }
#endif
        /// <summary>The value of `target.property`` prior to the event.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Tailscale.Client.Models.ConfigurationAuditLog.ConfigurationAuditLog_old? Old { get; set; }
#nullable restore
#else
        public global::Tailscale.Client.Models.ConfigurationAuditLog.ConfigurationAuditLog_old Old { get; set; }
#endif
        /// <summary>The initiator of the action that generated the event, typically an API or user interface, like the Tailscale admin panel.</summary>
        public global::Tailscale.Client.Models.ConfigurationAuditLog_origin? Origin { get; set; }
        /// <summary>The object of this event&apos;s action.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Tailscale.Client.Models.ConfigurationAuditLog_target? Target { get; set; }
#nullable restore
#else
        public global::Tailscale.Client.Models.ConfigurationAuditLog_target Target { get; set; }
#endif
        /// <summary>The type of log (always &quot;CONFIG&quot;).</summary>
        public global::Tailscale.Client.Models.ConfigurationAuditLog_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Tailscale.Client.Models.ConfigurationAuditLog"/> and sets the default values.
        /// </summary>
        public ConfigurationAuditLog()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>DoUpdate <see cref="global::Tailscale.Client.Models.ConfigurationAuditLog"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Tailscale.Client.Models.ConfigurationAuditLog CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Tailscale.Client.Models.ConfigurationAuditLog();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>DoUpdate IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "action", n => { Action = n.GetEnumValue<global::Tailscale.Client.Models.ConfigurationAuditLog_action>(); } },
                { "actionDetails", n => { ActionDetails = n.GetStringValue(); } },
                { "actor", n => { Actor = n.GetObjectValue<global::Tailscale.Client.Models.ConfigurationAuditLog_actor>(global::Tailscale.Client.Models.ConfigurationAuditLog_actor.CreateFromDiscriminatorValue); } },
                { "deferredAt", n => { DeferredAt = n.GetStringValue(); } },
                { "error", n => { Error = n.GetStringValue(); } },
                { "eventGroupID", n => { EventGroupID = n.GetStringValue(); } },
                { "eventTime", n => { EventTime = n.GetStringValue(); } },
                { "new", n => { New = n.GetObjectValue<global::Tailscale.Client.Models.ConfigurationAuditLog.ConfigurationAuditLog_new>(global::Tailscale.Client.Models.ConfigurationAuditLog.ConfigurationAuditLog_new.CreateFromDiscriminatorValue); } },
                { "old", n => { Old = n.GetObjectValue<global::Tailscale.Client.Models.ConfigurationAuditLog.ConfigurationAuditLog_old>(global::Tailscale.Client.Models.ConfigurationAuditLog.ConfigurationAuditLog_old.CreateFromDiscriminatorValue); } },
                { "origin", n => { Origin = n.GetEnumValue<global::Tailscale.Client.Models.ConfigurationAuditLog_origin>(); } },
                { "target", n => { Target = n.GetObjectValue<global::Tailscale.Client.Models.ConfigurationAuditLog_target>(global::Tailscale.Client.Models.ConfigurationAuditLog_target.CreateFromDiscriminatorValue); } },
                { "type", n => { Type = n.GetEnumValue<global::Tailscale.Client.Models.ConfigurationAuditLog_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Tailscale.Client.Models.ConfigurationAuditLog_action>("action", Action);
            writer.WriteStringValue("actionDetails", ActionDetails);
            writer.WriteObjectValue<global::Tailscale.Client.Models.ConfigurationAuditLog_actor>("actor", Actor);
            writer.WriteStringValue("deferredAt", DeferredAt);
            writer.WriteStringValue("error", Error);
            writer.WriteStringValue("eventGroupID", EventGroupID);
            writer.WriteStringValue("eventTime", EventTime);
            writer.WriteObjectValue<global::Tailscale.Client.Models.ConfigurationAuditLog.ConfigurationAuditLog_new>("new", New);
            writer.WriteObjectValue<global::Tailscale.Client.Models.ConfigurationAuditLog.ConfigurationAuditLog_old>("old", Old);
            writer.WriteEnumValue<global::Tailscale.Client.Models.ConfigurationAuditLog_origin>("origin", Origin);
            writer.WriteObjectValue<global::Tailscale.Client.Models.ConfigurationAuditLog_target>("target", Target);
            writer.WriteEnumValue<global::Tailscale.Client.Models.ConfigurationAuditLog_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="bool"/>, <see cref="double"/>, <see cref="global::Tailscale.Client.Models.ConfigurationAuditLog_newMember1"/>, <see cref="global::Tailscale.Client.Models.ConfigurationAuditLog_newMember2"/>, <see cref="int"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ConfigurationAuditLog_new : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="bool"/></summary>
            public bool? Boolean { get; set; }
            /// <summary>Composed type representation for type <see cref="global::Tailscale.Client.Models.ConfigurationAuditLog_newMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Tailscale.Client.Models.ConfigurationAuditLog_newMember1? ConfigurationAuditLogNewMember1 { get; set; }
#nullable restore
#else
            public global::Tailscale.Client.Models.ConfigurationAuditLog_newMember1 ConfigurationAuditLogNewMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Tailscale.Client.Models.ConfigurationAuditLog_newMember2"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Tailscale.Client.Models.ConfigurationAuditLog_newMember2? ConfigurationAuditLogNewMember2 { get; set; }
#nullable restore
#else
            public global::Tailscale.Client.Models.ConfigurationAuditLog_newMember2 ConfigurationAuditLogNewMember2 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="double"/></summary>
            public double? Double { get; set; }
            /// <summary>Composed type representation for type <see cref="int"/></summary>
            public int? Integer { get; set; }
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>DoUpdate <see cref="global::Tailscale.Client.Models.ConfigurationAuditLog.ConfigurationAuditLog_new"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Tailscale.Client.Models.ConfigurationAuditLog.ConfigurationAuditLog_new CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Tailscale.Client.Models.ConfigurationAuditLog.ConfigurationAuditLog_new();
                if(parseNode.GetBoolValue() is bool booleanValue)
                {
                    result.Boolean = booleanValue;
                }
                else if(parseNode.GetDoubleValue() is double doubleValue)
                {
                    result.Double = doubleValue;
                }
                else if(parseNode.GetIntValue() is int integerValue)
                {
                    result.Integer = integerValue;
                }
                else if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.ConfigurationAuditLogNewMember1 = new global::Tailscale.Client.Models.ConfigurationAuditLog_newMember1();
                    result.ConfigurationAuditLogNewMember2 = new global::Tailscale.Client.Models.ConfigurationAuditLog_newMember2();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>DoUpdate IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(ConfigurationAuditLogNewMember1 != null || ConfigurationAuditLogNewMember2 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(ConfigurationAuditLogNewMember1, ConfigurationAuditLogNewMember2);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Boolean != null)
                {
                    writer.WriteBoolValue(null, Boolean);
                }
                else if(Double != null)
                {
                    writer.WriteDoubleValue(null, Double);
                }
                else if(Integer != null)
                {
                    writer.WriteIntValue(null, Integer);
                }
                else if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Tailscale.Client.Models.ConfigurationAuditLog_newMember1>(null, ConfigurationAuditLogNewMember1, ConfigurationAuditLogNewMember2);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="bool"/>, <see cref="double"/>, <see cref="global::Tailscale.Client.Models.ConfigurationAuditLog_oldMember1"/>, <see cref="global::Tailscale.Client.Models.ConfigurationAuditLog_oldMember2"/>, <see cref="int"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ConfigurationAuditLog_old : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="bool"/></summary>
            public bool? Boolean { get; set; }
            /// <summary>Composed type representation for type <see cref="global::Tailscale.Client.Models.ConfigurationAuditLog_oldMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Tailscale.Client.Models.ConfigurationAuditLog_oldMember1? ConfigurationAuditLogOldMember1 { get; set; }
#nullable restore
#else
            public global::Tailscale.Client.Models.ConfigurationAuditLog_oldMember1 ConfigurationAuditLogOldMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Tailscale.Client.Models.ConfigurationAuditLog_oldMember2"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Tailscale.Client.Models.ConfigurationAuditLog_oldMember2? ConfigurationAuditLogOldMember2 { get; set; }
#nullable restore
#else
            public global::Tailscale.Client.Models.ConfigurationAuditLog_oldMember2 ConfigurationAuditLogOldMember2 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="double"/></summary>
            public double? Double { get; set; }
            /// <summary>Composed type representation for type <see cref="int"/></summary>
            public int? Integer { get; set; }
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>DoUpdate <see cref="global::Tailscale.Client.Models.ConfigurationAuditLog.ConfigurationAuditLog_old"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Tailscale.Client.Models.ConfigurationAuditLog.ConfigurationAuditLog_old CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Tailscale.Client.Models.ConfigurationAuditLog.ConfigurationAuditLog_old();
                if(parseNode.GetBoolValue() is bool booleanValue)
                {
                    result.Boolean = booleanValue;
                }
                else if(parseNode.GetDoubleValue() is double doubleValue)
                {
                    result.Double = doubleValue;
                }
                else if(parseNode.GetIntValue() is int integerValue)
                {
                    result.Integer = integerValue;
                }
                else if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.ConfigurationAuditLogOldMember1 = new global::Tailscale.Client.Models.ConfigurationAuditLog_oldMember1();
                    result.ConfigurationAuditLogOldMember2 = new global::Tailscale.Client.Models.ConfigurationAuditLog_oldMember2();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>DoUpdate IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(ConfigurationAuditLogOldMember1 != null || ConfigurationAuditLogOldMember2 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(ConfigurationAuditLogOldMember1, ConfigurationAuditLogOldMember2);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Boolean != null)
                {
                    writer.WriteBoolValue(null, Boolean);
                }
                else if(Double != null)
                {
                    writer.WriteDoubleValue(null, Double);
                }
                else if(Integer != null)
                {
                    writer.WriteIntValue(null, Integer);
                }
                else if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Tailscale.Client.Models.ConfigurationAuditLog_oldMember1>(null, ConfigurationAuditLogOldMember1, ConfigurationAuditLogOldMember2);
                }
            }
        }
    }
}
#pragma warning restore CS0618
