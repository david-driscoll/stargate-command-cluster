// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Proxmox.Inputs
{

    public sealed class VmQemuDiskArgs : global::Pulumi.ResourceArgs
    {
        [Input("aio")]
        public Input<string>? Aio { get; set; }

        [Input("backup")]
        public Input<bool>? Backup { get; set; }

        [Input("cache")]
        public Input<string>? Cache { get; set; }

        [Input("discard")]
        public Input<string>? Discard { get; set; }

        [Input("file")]
        public Input<string>? File { get; set; }

        [Input("format")]
        public Input<string>? Format { get; set; }

        [Input("iops")]
        public Input<double>? Iops { get; set; }

        [Input("iopsMax")]
        public Input<double>? IopsMax { get; set; }

        [Input("iopsMaxLength")]
        public Input<double>? IopsMaxLength { get; set; }

        [Input("iopsRd")]
        public Input<double>? IopsRd { get; set; }

        [Input("iopsRdMax")]
        public Input<double>? IopsRdMax { get; set; }

        [Input("iopsRdMaxLength")]
        public Input<double>? IopsRdMaxLength { get; set; }

        [Input("iopsWr")]
        public Input<double>? IopsWr { get; set; }

        [Input("iopsWrMax")]
        public Input<double>? IopsWrMax { get; set; }

        [Input("iopsWrMaxLength")]
        public Input<double>? IopsWrMaxLength { get; set; }

        [Input("iothread")]
        public Input<double>? Iothread { get; set; }

        [Input("mbps")]
        public Input<double>? Mbps { get; set; }

        [Input("mbpsRd")]
        public Input<double>? MbpsRd { get; set; }

        [Input("mbpsRdMax")]
        public Input<double>? MbpsRdMax { get; set; }

        [Input("mbpsWr")]
        public Input<double>? MbpsWr { get; set; }

        [Input("mbpsWrMax")]
        public Input<double>? MbpsWrMax { get; set; }

        [Input("media")]
        public Input<string>? Media { get; set; }

        [Input("replicate")]
        public Input<double>? Replicate { get; set; }

        [Input("size", required: true)]
        public Input<string> Size { get; set; } = null!;

        [Input("slot")]
        public Input<double>? Slot { get; set; }

        [Input("ssd")]
        public Input<double>? Ssd { get; set; }

        [Input("storage", required: true)]
        public Input<string> Storage { get; set; } = null!;

        [Input("storageType")]
        public Input<string>? StorageType { get; set; }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("volume")]
        public Input<string>? Volume { get; set; }

        public VmQemuDiskArgs()
        {
        }
        public static new VmQemuDiskArgs Empty => new VmQemuDiskArgs();
    }
}
