---
# For configuration options and examples, please see:
# https://gethomepage.dev/latest/configs/settings
config:
  settings:
    title: Spike's Library
    # background: /images/background.jpg
    cardBlur: md
    # background:
      # image: /images/spike-background.jpg
      # blur: sm # sm, "", md, xl... see https://tailwindcss.com/docs/backdrop-blur
      # saturate: 40 # 0, 50, 100... see https://tailwindcss.com/docs/backdrop-saturate
      # brightness: 60 # 0, 50, 75... see https://tailwindcss.com/docs/backdrop-brightness
      # opacity: 60 # 0-100

    theme: dark
    color: slate

    headerStyle: clean

    providers:
      openweathermap: "{{HOMEPAGE_VAR_OPENWEATHERMAP_KEY}}"

    layout:
      Request:
        style: column
        rows: 2
        columns: 2
      Media:
        style: row
        columns: 2
        rows: 2

  bookmarks:
    - Developer: []
  services:
    - Request: []
    - Media: []
    - Calendar:
      - Calendar:
          widget:
            type: calendar
            firstDayInWeek: sunday # optional - defaults to monday
            view: monthly # optional - possible values monthly, agenda
            maxEvents: 10 # optional - defaults to 10
            showTime: true # optional - show time for event happening today - defaults to false
            integrations: # optional
              - type: sonarr # active widget type that is currently enabled on homepage - possible values: radarr, sonarr, lidarr, readarr, ical
                service_group: Media Management # group name where widget exists
                service_name: Sonarr # service name for that widget
                color: teal # optional - defaults to pre-defined color for the service (teal for sonarr)
                params: # optional - additional params for the service
                  unmonitored: true # optional - defaults to false, used with *arr stack
              - type: radarr # active widget type that is currently enabled on homepage - possible values: radarr, sonarr, lidarr, readarr, ical
                service_group: Media Management # group name where widget exists
                service_name: Radarr # service name for that widget
                color: yellow # optional - defaults to pre-defined color for the service (teal for sonarr)
                params: # optional - additional params for the service
                  unmonitored: true # optional - defaults to false, used with *arr stack
      - Agenda:
          widget:
            type: calendar
            view: agenda
            maxEvents: 10 # optional - defaults to 10
            showTime: true # optional - show time for event happening today - defaults to false
            previousDays: 3 # optional - shows events since three days ago - defaults to 0
            integrations: # optional
              - type: sonarr # active widget type that is currently enabled on homepage - possible values: radarr, sonarr, lidarr, readarr, ical
                service_group: Media Management # group name where widget exists
                service_name: Sonarr # service name for that widget
                color: teal # optional - defaults to pre-defined color for the service (teal for sonarr)
                params: # optional - additional params for the service
                  unmonitored: true # optional - defaults to false, used with *arr stack
              - type: radarr # active widget type that is currently enabled on homepage - possible values: radarr, sonarr, lidarr, readarr, ical
                service_group: Media Management # group name where widget exists
                service_name: Radarr # service name for that widget
                color: yellow # optional - defaults to pre-defined color for the service (teal for sonarr)
                params: # optional - additional params for the service
                  unmonitored: true # optional - defaults to false, used with *arr stack
    - Media Management: []
    - Appliances:
      - Home Assistant:
          href: https://home.${ROOT_DOMAIN}
          icon: home-assistant.svg
          widget:
            url: https://home.${ROOT_DOMAIN}
            type: homeassistant
            key: "{{HOMEPAGE_VAR_HA_APIKEY}}"
      - Unifi OS:
          href: https://unifi.${ROOT_DOMAIN}
          icon: unifi.svg
          widget:
            type: unifi
            url: https://unifi.${ROOT_DOMAIN}
            # fields: ["uptime", "wan", "lan", "wlan"] # ["uptime", "wan", "lan", "lan_users", "lan_devices", "wlan", "wlan_users", "wlan_devices"]
            username: "{{HOMEPAGE_VAR_UNIFI_USERNAME}}"
            password: "{{HOMEPAGE_VAR_UNIFI_PASSWORD}}"
      - AdGuard Home:
          href: https://adguard-home.${ROOT_DOMAIN}
          icon: adguard-home.svg
          widget:
            url: https://adguard-home.${ROOT_DOMAIN}
            type: adguard
            fields: ["queries", "blocked", "filtered", "latency"]
            username: "{{HOMEPAGE_VAR_HA_USERNAME}}"
            password: "{{HOMEPAGE_VAR_HA_PASSWORD}}"
      - TrueNas:
          href: https://truenas.${ROOT_DOMAIN}
          icon: truenas.svg
          widget:
            type: truenas
            url: https://truenas.${ROOT_DOMAIN}
            key: "{{HOMEPAGE_VAR_TRUENAS_KEY}}"
            enablePools: true
      - Kubernetes:
          href: https://kubeui.eris.${ROOT_DOMAIN}
          icon: kubernetes.svg
      - KubeApps:
          href: https://kubeapps.eris.${ROOT_DOMAIN}
          icon: app.svg
      - Capacitor:
          href: https://capacitor.driscoll.tech/
    # - Tunnels:
    #   - Eris:
    #       icon: cloudflare.svg
    #       widget:
    #         type: cloudflared
    #         accountid: "{{HOMEPAGE_VAR_CLOUDFLARE_ACCOUNTID}}"
    #         tunnelid: "{{HOMEPAGE_VAR_CLOUDFLARE_ERIS_TUNNEL_ID}}"
    #         key: "{{HOMEPAGE_VAR_CLOUDFLARE_TUNNEL_APIKEY}}"
    #   - Chrysalis:
    #       icon: cloudflare.svg
    #       widget:
    #         type: cloudflared
    #         accountid: "{{HOMEPAGE_VAR_CLOUDFLARE_ACCOUNTID}}"
    #         tunnelid: "{{HOMEPAGE_VAR_CLOUDFLARE_CHRYSALIS_TUNNEL_ID}}"
    #         key: "{{HOMEPAGE_VAR_CLOUDFLARE_TUNNEL_APIKEY}}"
      # - Eris:
      #     icon: tailscale.svg
      #     widget:
      #       type: tailscale
      #       key: "{{HOMEPAGE_VAR_TAILSCALE_ACCESS_TOKEN}}"
      #       deviceid: nG5fpez3en11CNTRL
      # - Chrysalis:
      #     icon: tailscale.svg
      #     widget:
      #       type: tailscale
      #       key: "{{HOMEPAGE_VAR_TAILSCALE_ACCESS_TOKEN}}"
      #       deviceid: nxv7m95CNTRL


  widgets:
    - unifi_console:
        url: https://unifi.${ROOT_DOMAIN}
        username: "{{HOMEPAGE_VAR_UNIFI_USERNAME}}"
        password: "{{HOMEPAGE_VAR_UNIFI_PASSWORD}}"
    # show the kubernetes widget, with the cluster summary and individual nodes
    - kubernetes:
        cluster:
          show: true
          cpu: true
          memory: true
          showLabel: true
          label: "eris"
        nodes:
          show: true
          cpu: true
          memory: true
          showLabel: true
    - openweathermap:
        label: Cary
        units: imperial
        latitude: 35.791538
        longitude: -78.781120
        provider: openweathermap
        cache: 5 # Time in minutes to cache API responses, to stay within limits
    # - search:
    #     provider: duckduckgo
    #     target: _blank
  kubernetes:
    mode: cluster
    ingress: true
    traefik: true
    gateway: true
  # settings:
