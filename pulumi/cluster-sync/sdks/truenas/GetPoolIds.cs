// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Truenas
{
    public static class GetPoolIds
    {
        public static Task<GetPoolIdsResult> InvokeAsync(GetPoolIdsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPoolIdsResult>("truenas:index/getPoolIds:getPoolIds", args ?? new GetPoolIdsArgs(), options.WithDefaults(), Utilities.PackageParameterization());

        public static Output<GetPoolIdsResult> Invoke(GetPoolIdsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPoolIdsResult>("truenas:index/getPoolIds:getPoolIds", args ?? new GetPoolIdsInvokeArgs(), options.WithDefaults());

        public static Output<GetPoolIdsResult> Invoke(GetPoolIdsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPoolIdsResult>("truenas:index/getPoolIds:getPoolIds", args ?? new GetPoolIdsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPoolIdsArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        public GetPoolIdsArgs()
        {
        }
        public static new GetPoolIdsArgs Empty => new GetPoolIdsArgs();
    }

    public sealed class GetPoolIdsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        public GetPoolIdsInvokeArgs()
        {
        }
        public static new GetPoolIdsInvokeArgs Empty => new GetPoolIdsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPoolIdsResult
    {
        public readonly string Id;
        public readonly ImmutableArray<double> Ids;

        [OutputConstructor]
        private GetPoolIdsResult(
            string id,

            ImmutableArray<double> ids)
        {
            Id = id;
            Ids = ids;
        }
    }
}
