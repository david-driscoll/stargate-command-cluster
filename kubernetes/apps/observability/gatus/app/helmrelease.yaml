---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.2.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app gatus
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  interval: 15m
  timeout: 10m
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: 7
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 7
      strategy: rollback
  rollback:
    force: false # true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  dependsOn: []
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsNonRoot: false
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          *app :
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.26.0@sha256:3c0314bd1b1e9d7c34d8f2efee16b380770a9639ec5386cc305e8df104e097dc
            env:
              TZ: ${TIMEZONE}
              GATUS_CONFIG_PATH: /config
              GATUS_DELAY_START_SECONDS: 5
              GATUS_WEB_PORT: &port 80

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000

    service:
      app:
        ports:
          http:
            port: *port

    serviceMonitor:
      app:
        endpoints:
          - port: http


    persistence:
      config:
        type: emptyDir
      config-file:
        type: configMap
        name: gatus-configmap
        defaultMode: 0644
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true

    ingress:
      internal:
        className: internal
        annotations:
          uptime-kuma.autodiscovery.probe.enabled: "false"
        hosts:
          # - host: "uptime.${ROOT_DOMAIN}"
          #   paths:
          #     - path: /
          #       pathType: Prefix
          #       service:
          #         identifier: app
          #         port: http
          - host: "gatus.${ROOT_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
    rbac:
      roles:
        *app :
          type: ClusterRole
          rules:
            - apiGroups: [""]
              resources: ["configmaps", "secrets"]
              verbs: ["get", "watch", "list"]
      bindings:
        *app :
          type: ClusterRoleBinding
          roleRef:
            identifier: *app
          subjects:
            - identifier: *app
    serviceAccount:
      *app : {}
