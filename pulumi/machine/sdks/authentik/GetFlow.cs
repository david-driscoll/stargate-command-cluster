// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Authentik
{
    public static class GetFlow
    {
        public static Task<GetFlowResult> InvokeAsync(GetFlowArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFlowResult>("authentik:index/getFlow:getFlow", args ?? new GetFlowArgs(), options.WithDefaults(), Utilities.PackageParameterization());

        public static Output<GetFlowResult> Invoke(GetFlowInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFlowResult>("authentik:index/getFlow:getFlow", args ?? new GetFlowInvokeArgs(), options.WithDefaults());

        public static Output<GetFlowResult> Invoke(GetFlowInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFlowResult>("authentik:index/getFlow:getFlow", args ?? new GetFlowInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFlowArgs : global::Pulumi.InvokeArgs
    {
        [Input("authentication")]
        public string? Authentication { get; set; }

        [Input("designation")]
        public string? Designation { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        [Input("slug")]
        public string? Slug { get; set; }

        public GetFlowArgs()
        {
        }
        public static new GetFlowArgs Empty => new GetFlowArgs();
    }

    public sealed class GetFlowInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("authentication")]
        public Input<string>? Authentication { get; set; }

        [Input("designation")]
        public Input<string>? Designation { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        public GetFlowInvokeArgs()
        {
        }
        public static new GetFlowInvokeArgs Empty => new GetFlowInvokeArgs();
    }


    [OutputType]
    public sealed class GetFlowResult
    {
        public readonly string Authentication;
        public readonly string Designation;
        public readonly string Id;
        public readonly string Name;
        public readonly string Slug;
        public readonly string Title;

        [OutputConstructor]
        private GetFlowResult(
            string authentication,

            string designation,

            string id,

            string name,

            string slug,

            string title)
        {
            Authentication = authentication;
            Designation = designation;
            Id = id;
            Name = name;
            Slug = slug;
            Title = title;
        }
    }
}
