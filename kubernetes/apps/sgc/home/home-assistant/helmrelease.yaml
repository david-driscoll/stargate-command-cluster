# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app home-assistant
spec:
  interval: 15m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: uninstall
  uninstall:
    keepHistory: false
  dependsOn:
    - name: mosquitto
      namespace: sgc
    - name: matter
      namespace: sgc
  values:
    fullnameOverride: *app
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          clone:
            image:
              repository: busybox
              tag: 1.37.0
              pullPolicy: IfNotPresent
            command:
              - "/bin/sh"
              - "-c"
            env:
              - name: user
                value: coder
              - name: home
                value: /home/coder
            args: |-
              if [ ! -d "/config/.git" ]; then
                echo "Git directory not found. Cloning repository..."
                git clone --bare ${HOME_ASSISTANT_SSH_URL} /config/.git
                echo "Hydrating master branch..."
                git --git-dir=/config/.git --work-tree=/config checkout master
              fi

        containers:
          app:
            image:
              repository: ghcr.io/home-operations/home-assistant
              tag: 2025.4.4
              pullPolicy: IfNotPresent
            env:
              VENV_FOLDER: /venv
              HASS_HTTP_TRUSTED_PROXY_1: "${CLUSTER_NETWORK}"
              HASS_HTTP_TRUSTED_PROXY_2: "${SERVICE_NETWORK}"
              HASS_EXTERNAL_URL: "https://{{ .Release.Name }}.${ROOT_DOMAIN}"
              TZ: "${TIMEZONE}"
            resources:
              requests:
                memory: 350Mi
                cpu: 25m
              limits:
                memory: 500Mi
          code:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.99.3@sha256:e822acb286dca144f1a10ef847bc8f905d92ea79998f4f021802064badcae5fe
            env:
              TZ: ${TIMEZONE}
              GIT_SSH_COMMAND: ssh -i /config/.ssh/id_ed25519 -o IdentitiesOnly=yes
            args:
              - --auth
              - none
              - --user-data-dir
              - /config/.vscode
              - --extensions-dir
              - /config/.vscode
              - --port
              - "8888"
              - /config
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 1Gi
        pod:
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            fsGroup: 0
            fsGroupChangePolicy: OnRootMismatch

    defaultPodOptions:
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 568
        runAsNonRoot: true
        runAsUser: 568
        seccompProfile:
          type: RuntimeDefault
      shareProcessNamespace: true

    service:
      app:
        controller: *app
        type: ClusterIP
        ports:
          http:
            port: &app-port 8123
      code:
        controller: *app
        type: ClusterIP
        ports:
          http:
            port: &code-port 8888

    ingress:
      internal:
        className: internal
        annotations:
          reloader.stakater.com/auto: "true"
          external-dns.alpha.kubernetes.io/target: "${INTERNAL_DOMAIN}"
        hosts:
          - host: "{{ .Release.Name }}.${ROOT_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: *app-port
      tailscale:
        className: tailscale
        annotations:
          reloader.stakater.com/auto: "true"
        hosts:
          - host: "{{ .Release.Name }}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: *app-port
      code-internal:
        className: internal
        annotations:
          reloader.stakater.com/auto: "true"
          external-dns.alpha.kubernetes.io/target: "${INTERNAL_DOMAIN}"
        hosts:
          - host: "{{ .Release.Name }}-code.${ROOT_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: code
                  port: *code-port
      code-tailscale:
        className: tailscale
        annotations:
          reloader.stakater.com/auto: "true"
        hosts:
          - host: "{{ .Release.Name }}-code"
            paths:
              - path: /
                service:
                  identifier: code
                  port: *code-port

    persistence:
      config:
        existingClaim: *app
      deploy-key:
        type: secret
        name: home-assistant-ssh
        defaultMode: 256
        globalMounts:
          - path: /home/coder/.ssh/
            readOnly: true
          - path: /home/coder/.ssh/
            readOnly: true
      config-cache:
        type: emptyDir
        globalMounts:
          - path: /config/.venv
      config-logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
      config-tts:
        type: emptyDir
        globalMounts:
          - path: /config/tts
      tmp:
        type: emptyDir
