---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.1.2/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app garage-ui
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  interval: 15m
  timeout: 10m
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: 7
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 7
      strategy: rollback
  rollback:
    force: true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  dependsOn:
  - name: garage
  values:
    controllers:
      *app :
        enabled: true
        containers:
          *app :
            image:
              repository: khairul169/garage-webui
              tag: latest
              pullPolicy: IfNotPresent
            securityContext:
              readOnlyRootFilesystem: false
            env:
              TZ: ${TIMEZONE}
              API_BASE_URL: "http://garage.database.svc.cluster.local:3901"
              S3_ENDPOINT_URL: "http://garage.database.svc.cluster.local:3900"
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
              limits:
                memory: 500Mi

    tolerations:
      # - key: amd.com/gpu
      #   operator: Exists
      #   effect: NoSchedule
    defaultPodOptions:
      securityContext:
        runAsUser: 0
        runAsNonRoot: false
        runAsGroup: 0
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
      # nodeSelector:
      #   intel.feature.node.kubernetes.io/gpu: "true"

    service:
      *app :
        controller: *app
        ports:
          http:
            port: 3909
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/traefik.io/ingressroute_v1alpha1.json
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: ${APP}-web
  annotations:
    reloader.stakater.com/auto: "true"
    external-dns.alpha.kubernetes.io/target: "${INTERNAL_DOMAIN}"
    kubernetes.io/ingress.class: internal
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`garage.${CLUSTER_DOMAIN}`)
      kind: Rule
      services:
        - name: garage-ui
          port: http
          passHostHeader: true
      middlewares:
        - name: authenticated-user
          namespace: network
