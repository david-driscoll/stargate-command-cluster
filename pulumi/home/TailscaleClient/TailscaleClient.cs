// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Serialization.Form;
using Microsoft.Kiota.Serialization.Json;
using Microsoft.Kiota.Serialization.Multipart;
using Microsoft.Kiota.Serialization.Text;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
using Tailscale.Client.Device;
using Tailscale.Client.DeviceInvites;
using Tailscale.Client.Posture;
using Tailscale.Client.Tailnet;
using Tailscale.Client.UserInvites;
using Tailscale.Client.Users;
using Tailscale.Client.Webhooks;
namespace Tailscale.Client
{
    /// <summary>
    /// The main entry point of the SDK, exposes the configuration and the fluent API.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class TailscaleClient : BaseRequestBuilder
    {
        /// <summary>The device property</summary>
        public global::Tailscale.Client.Device.DeviceRequestBuilder Device
        {
            get => new global::Tailscale.Client.Device.DeviceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deviceInvites property</summary>
        public global::Tailscale.Client.DeviceInvites.DeviceInvitesRequestBuilder DeviceInvites
        {
            get => new global::Tailscale.Client.DeviceInvites.DeviceInvitesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The posture property</summary>
        public global::Tailscale.Client.Posture.PostureRequestBuilder Posture
        {
            get => new global::Tailscale.Client.Posture.PostureRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tailnet property</summary>
        public global::Tailscale.Client.Tailnet.TailnetRequestBuilder Tailnet
        {
            get => new global::Tailscale.Client.Tailnet.TailnetRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The userInvites property</summary>
        public global::Tailscale.Client.UserInvites.UserInvitesRequestBuilder UserInvites
        {
            get => new global::Tailscale.Client.UserInvites.UserInvitesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The users property</summary>
        public global::Tailscale.Client.Users.UsersRequestBuilder Users
        {
            get => new global::Tailscale.Client.Users.UsersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The webhooks property</summary>
        public global::Tailscale.Client.Webhooks.WebhooksRequestBuilder Webhooks
        {
            get => new global::Tailscale.Client.Webhooks.WebhooksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Tailscale.Client.TailscaleClient"/> and sets the default values.
        /// </summary>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public TailscaleClient(IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}", new Dictionary<string, object>())
        {
            ApiClientBuilder.RegisterDefaultSerializer<JsonSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<TextSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<FormSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<MultipartSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<JsonParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<TextParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<FormParseNodeFactory>();
            if (string.IsNullOrEmpty(RequestAdapter.BaseUrl))
            {
                RequestAdapter.BaseUrl = "https://api.tailscale.com/api/v2";
            }
            PathParameters.TryAdd("baseurl", RequestAdapter.BaseUrl);
        }
    }
}
#pragma warning restore CS0618
