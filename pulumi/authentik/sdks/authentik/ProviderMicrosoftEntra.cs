// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Authentik
{
    [AuthentikResourceType("authentik:index/providerMicrosoftEntra:ProviderMicrosoftEntra")]
    public partial class ProviderMicrosoftEntra : global::Pulumi.CustomResource
    {
        [Output("clientId")]
        public Output<string> ClientId { get; private set; } = null!;

        [Output("clientSecret")]
        public Output<string> ClientSecret { get; private set; } = null!;

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Output("dryRun")]
        public Output<bool?> DryRun { get; private set; } = null!;

        [Output("excludeUsersServiceAccount")]
        public Output<bool?> ExcludeUsersServiceAccount { get; private set; } = null!;

        [Output("filterGroup")]
        public Output<string?> FilterGroup { get; private set; } = null!;

        /// <summary>
        /// Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        /// </summary>
        [Output("groupDeleteAction")]
        public Output<string?> GroupDeleteAction { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("propertyMappings")]
        public Output<ImmutableArray<string>> PropertyMappings { get; private set; } = null!;

        [Output("propertyMappingsGroups")]
        public Output<ImmutableArray<string>> PropertyMappingsGroups { get; private set; } = null!;

        [Output("providerMicrosoftEntraId")]
        public Output<string> ProviderMicrosoftEntraId { get; private set; } = null!;

        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;

        /// <summary>
        /// Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        /// </summary>
        [Output("userDeleteAction")]
        public Output<string?> UserDeleteAction { get; private set; } = null!;


        /// <summary>
        /// Create a ProviderMicrosoftEntra resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProviderMicrosoftEntra(string name, ProviderMicrosoftEntraArgs args, CustomResourceOptions? options = null)
            : base("authentik:index/providerMicrosoftEntra:ProviderMicrosoftEntra", name, args ?? new ProviderMicrosoftEntraArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private ProviderMicrosoftEntra(string name, Input<string> id, ProviderMicrosoftEntraState? state = null, CustomResourceOptions? options = null)
            : base("authentik:index/providerMicrosoftEntra:ProviderMicrosoftEntra", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "clientSecret",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProviderMicrosoftEntra resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProviderMicrosoftEntra Get(string name, Input<string> id, ProviderMicrosoftEntraState? state = null, CustomResourceOptions? options = null)
        {
            return new ProviderMicrosoftEntra(name, id, state, options);
        }
    }

    public sealed class ProviderMicrosoftEntraArgs : global::Pulumi.ResourceArgs
    {
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("clientSecret", required: true)]
        private Input<string>? _clientSecret;
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        [Input("excludeUsersServiceAccount")]
        public Input<bool>? ExcludeUsersServiceAccount { get; set; }

        [Input("filterGroup")]
        public Input<string>? FilterGroup { get; set; }

        /// <summary>
        /// Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        /// </summary>
        [Input("groupDeleteAction")]
        public Input<string>? GroupDeleteAction { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("propertyMappings")]
        private InputList<string>? _propertyMappings;
        public InputList<string> PropertyMappings
        {
            get => _propertyMappings ?? (_propertyMappings = new InputList<string>());
            set => _propertyMappings = value;
        }

        [Input("propertyMappingsGroups")]
        private InputList<string>? _propertyMappingsGroups;
        public InputList<string> PropertyMappingsGroups
        {
            get => _propertyMappingsGroups ?? (_propertyMappingsGroups = new InputList<string>());
            set => _propertyMappingsGroups = value;
        }

        [Input("providerMicrosoftEntraId")]
        public Input<string>? ProviderMicrosoftEntraId { get; set; }

        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        /// <summary>
        /// Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        /// </summary>
        [Input("userDeleteAction")]
        public Input<string>? UserDeleteAction { get; set; }

        public ProviderMicrosoftEntraArgs()
        {
        }
        public static new ProviderMicrosoftEntraArgs Empty => new ProviderMicrosoftEntraArgs();
    }

    public sealed class ProviderMicrosoftEntraState : global::Pulumi.ResourceArgs
    {
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        [Input("clientSecret")]
        private Input<string>? _clientSecret;
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        [Input("excludeUsersServiceAccount")]
        public Input<bool>? ExcludeUsersServiceAccount { get; set; }

        [Input("filterGroup")]
        public Input<string>? FilterGroup { get; set; }

        /// <summary>
        /// Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        /// </summary>
        [Input("groupDeleteAction")]
        public Input<string>? GroupDeleteAction { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("propertyMappings")]
        private InputList<string>? _propertyMappings;
        public InputList<string> PropertyMappings
        {
            get => _propertyMappings ?? (_propertyMappings = new InputList<string>());
            set => _propertyMappings = value;
        }

        [Input("propertyMappingsGroups")]
        private InputList<string>? _propertyMappingsGroups;
        public InputList<string> PropertyMappingsGroups
        {
            get => _propertyMappingsGroups ?? (_propertyMappingsGroups = new InputList<string>());
            set => _propertyMappingsGroups = value;
        }

        [Input("providerMicrosoftEntraId")]
        public Input<string>? ProviderMicrosoftEntraId { get; set; }

        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        /// <summary>
        /// Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        /// </summary>
        [Input("userDeleteAction")]
        public Input<string>? UserDeleteAction { get; set; }

        public ProviderMicrosoftEntraState()
        {
        }
        public static new ProviderMicrosoftEntraState Empty => new ProviderMicrosoftEntraState();
    }
}
