// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.N8n
{
    [N8nResourceType("n8n:index/projectUser:ProjectUser")]
    public partial class ProjectUser : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Timestamp when the user was added to the project
        /// </summary>
        [Output("addedAt")]
        public Output<string> AddedAt { get; private set; } = null!;

        /// <summary>
        /// The ID of the project
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The role of the user in the project (admin, editor, viewer)
        /// </summary>
        [Output("role")]
        public Output<string> Role { get; private set; } = null!;

        /// <summary>
        /// The ID or email of the user to add to the project
        /// </summary>
        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;


        /// <summary>
        /// Create a ProjectUser resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProjectUser(string name, ProjectUserArgs args, CustomResourceOptions? options = null)
            : base("n8n:index/projectUser:ProjectUser", name, args ?? new ProjectUserArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private ProjectUser(string name, Input<string> id, ProjectUserState? state = null, CustomResourceOptions? options = null)
            : base("n8n:index/projectUser:ProjectUser", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProjectUser resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProjectUser Get(string name, Input<string> id, ProjectUserState? state = null, CustomResourceOptions? options = null)
        {
            return new ProjectUser(name, id, state, options);
        }
    }

    public sealed class ProjectUserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the project
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The role of the user in the project (admin, editor, viewer)
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// The ID or email of the user to add to the project
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public ProjectUserArgs()
        {
        }
        public static new ProjectUserArgs Empty => new ProjectUserArgs();
    }

    public sealed class ProjectUserState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Timestamp when the user was added to the project
        /// </summary>
        [Input("addedAt")]
        public Input<string>? AddedAt { get; set; }

        /// <summary>
        /// The ID of the project
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The role of the user in the project (admin, editor, viewer)
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// The ID or email of the user to add to the project
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public ProjectUserState()
        {
        }
        public static new ProjectUserState Empty => new ProjectUserState();
    }
}
