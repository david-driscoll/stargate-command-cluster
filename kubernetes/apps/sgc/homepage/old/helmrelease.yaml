---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.7.3/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app homepage
spec:
  timeout: 5m
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: onepassword-connect
      namespace: kube-system

  values:
    fullnameOverride: *app
    controllers:
      app:
        annotations:
          reloader.stakater.com/auto: "true"
        strategy: Recreate
        containers:
          app:
            image:
              repository: ghcr.io/gethomepage/homepage
              tag: v1.2.0@sha256:5e6bcbb595c4e857540577135e0f8b3ffc2e97c23d6e0ddc7df183de5bfdd442
              pullPolicy: Always
            # -- environment variables.
            # See [image docs](https://github.com/dani-garcia/vaultwarden/blob/main/.env.template) for more details.
            env:
              PUID: 568
              PGID: 568
              UMASK: 002
              TZ: "${TIMEZONE}"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 80
                  initialDelaySeconds: 10
                  periodSeconds: 60
                  timeoutSeconds: 10
                  failureThreshold: 5
              readiness: *probes
            securityContext:
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
              limits:
                cpu: 1000m
                memory: 2Gi

    defaultPodOptions:
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    # -- Configures service settings for the chart.
    service:
      app:
        controller: app
        type: ClusterIP
        ports:
          http:
            port: *port
    env:
      LOG_LEVEL: debug
      HOMEPAGE_ALLOWED_HOSTS: '{{ .Release.Name }}.${ROOT_DOMAIN},homepage.${ROOT_DOMAIN},{{ .Release.Name }}.${TAILSCALE_DOMAIN},homepage.${TAILSCALE_DOMAIN}'
      HOMEPAGE_VAR_OPENWEATHERMAP_KEY:
        valueFrom:
          secretKeyRef:
            name: homepage-secrets
            key: openweathermap
      HOMEPAGE_VAR_UNIFI_USERNAME:
        valueFrom:
          secretKeyRef:
            name: unifi-credentials
            key: username
      HOMEPAGE_VAR_UNIFI_PASSWORD:
        valueFrom:
          secretKeyRef:
            name: unifi-credentials
            key: password
      HOMEPAGE_VAR_TRUENAS_KEY:
        valueFrom:
          secretKeyRef:
            name: truenas-credentials
            key: credential
      HOMEPAGE_VAR_HA_USERNAME:
        valueFrom:
          secretKeyRef:
            name: home-assistant-credentials
            key: username
      HOMEPAGE_VAR_HA_PASSWORD:
        valueFrom:
          secretKeyRef:
            name: home-assistant-credentials
            key: password
      HOMEPAGE_VAR_HA_APIKEY:
        valueFrom:
          secretKeyRef:
            name: home-assistant-credentials
            key: apikey
      # HOMEPAGE_VAR_CLOUDFLARE_ACCOUNTID:
      #   valueFrom:
      #     secretKeyRef:
      #       name: cloudflare-chrysalis-tunnel
      #       key: accountId
      # HOMEPAGE_VAR_CLOUDFLARE_TUNNEL_APIKEY:
      #   valueFrom:
      #     secretKeyRef:
      #       name: cloudflare-tunnel-token
      #       key: credential
      # HOMEPAGE_VAR_CLOUDFLARE_ERIS_TUNNEL_ID:
      #   valueFrom:
      #     secretKeyRef:
      #       name: cloudflare-eris-tunnel
      #       key: username
      # HOMEPAGE_VAR_CLOUDFLARE_CHRYSALIS_TUNNEL_ID:
      #   valueFrom:
      #     secretKeyRef:
      #       name: cloudflare-chrysalis-tunnel
      #       key: username
      # HOMEPAGE_VAR_TAILSCALE_ACCESS_TOKEN:
      #   valueFrom:
      #     secretKeyRef:
      #       name: tailscale-access-token
      #       key: token

    podAnnotations:
      reloader.stakater.com/auto: "true"

    enableRbac: true
    serviceAccount:
      create: true

    persistence:
      config:
        type: configMap
        name: homepage-config
        globalMounts:
          - path: /app/config/

    # Enable the ingress to expose Homepage to the network.
    ingress:
      internal:
        className: internal
        annotations:
          reloader.stakater.com/auto: "true"
          external-dns.alpha.kubernetes.io/target: "${INTERNAL_DOMAIN}"
        hosts:
          - host: "{{ .Release.Name }}.${ROOT_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: 80
          - host: "library.${ROOT_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: 80
