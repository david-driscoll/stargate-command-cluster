// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Unifi.Inputs
{

    public sealed class FirewallZonePolicyScheduleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Date for the schedule.
        /// </summary>
        [Input("date")]
        public Input<string>? Date { get; set; }

        /// <summary>
        /// End date for the schedule.
        /// </summary>
        [Input("dateEnd")]
        public Input<string>? DateEnd { get; set; }

        /// <summary>
        /// Start date for the schedule.
        /// </summary>
        [Input("dateStart")]
        public Input<string>? DateStart { get; set; }

        /// <summary>
        /// Schedule mode. Valid values are `ALWAYS`, `EVERY_DAY`, `EVERY_WEEK`, `ONE_TIME_ONLY`, or `CUSTOM`.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        [Input("repeatOnDays")]
        private InputList<string>? _repeatOnDays;

        /// <summary>
        /// Days of the week when schedule repeats. Valid values include `mon`, `tue`, `wed`, `thu`, `fri`, `sat`, and `sun`.
        /// </summary>
        public InputList<string> RepeatOnDays
        {
            get => _repeatOnDays ?? (_repeatOnDays = new InputList<string>());
            set => _repeatOnDays = value;
        }

        /// <summary>
        /// Whether the schedule applies all day.
        /// </summary>
        [Input("timeAllDay")]
        public Input<bool>? TimeAllDay { get; set; }

        /// <summary>
        /// Schedule starting time in 24-hour format (HH:MM).
        /// </summary>
        [Input("timeFrom")]
        public Input<string>? TimeFrom { get; set; }

        /// <summary>
        /// Schedule ending time in 24-hour format (HH:MM).
        /// </summary>
        [Input("timeTo")]
        public Input<string>? TimeTo { get; set; }

        public FirewallZonePolicyScheduleArgs()
        {
        }
        public static new FirewallZonePolicyScheduleArgs Empty => new FirewallZonePolicyScheduleArgs();
    }
}
