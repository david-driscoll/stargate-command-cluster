// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Unifi.Inputs
{

    public sealed class FirewallZonePolicyDestinationArgs : global::Pulumi.ResourceArgs
    {
        [Input("appCategoryIds")]
        private InputList<string>? _appCategoryIds;

        /// <summary>
        /// List of application category IDs.
        /// </summary>
        public InputList<string> AppCategoryIds
        {
            get => _appCategoryIds ?? (_appCategoryIds = new InputList<string>());
            set => _appCategoryIds = value;
        }

        [Input("appIds")]
        private InputList<string>? _appIds;

        /// <summary>
        /// List of application IDs.
        /// </summary>
        public InputList<string> AppIds
        {
            get => _appIds ?? (_appIds = new InputList<string>());
            set => _appIds = value;
        }

        /// <summary>
        /// ID of the source IP group.
        /// </summary>
        [Input("ipGroupId")]
        public Input<string>? IpGroupId { get; set; }

        [Input("ips")]
        private InputList<string>? _ips;

        /// <summary>
        /// List of source IPs.
        /// </summary>
        public InputList<string> Ips
        {
            get => _ips ?? (_ips = new InputList<string>());
            set => _ips = value;
        }

        /// <summary>
        /// Whether to match opposite IPs.
        /// </summary>
        [Input("matchOppositeIps")]
        public Input<bool>? MatchOppositeIps { get; set; }

        /// <summary>
        /// Whether to match opposite ports.
        /// </summary>
        [Input("matchOppositePorts")]
        public Input<bool>? MatchOppositePorts { get; set; }

        /// <summary>
        /// Source port.
        /// </summary>
        [Input("port")]
        public Input<double>? Port { get; set; }

        /// <summary>
        /// ID of the source port group.
        /// </summary>
        [Input("portGroupId")]
        public Input<string>? PortGroupId { get; set; }

        [Input("regions")]
        private InputList<string>? _regions;

        /// <summary>
        /// List of regions.
        /// </summary>
        public InputList<string> Regions
        {
            get => _regions ?? (_regions = new InputList<string>());
            set => _regions = value;
        }

        [Input("webDomains")]
        private InputList<string>? _webDomains;

        /// <summary>
        /// List of web domains.
        /// </summary>
        public InputList<string> WebDomains
        {
            get => _webDomains ?? (_webDomains = new InputList<string>());
            set => _webDomains = value;
        }

        /// <summary>
        /// ID of the firewall zone.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public FirewallZonePolicyDestinationArgs()
        {
        }
        public static new FirewallZonePolicyDestinationArgs Empty => new FirewallZonePolicyDestinationArgs();
    }
}
