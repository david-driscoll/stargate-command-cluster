// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Unifi.Outputs
{

    [OutputType]
    public sealed class FirewallZonePolicySchedule
    {
        /// <summary>
        /// Date for the schedule.
        /// </summary>
        public readonly string? Date;
        /// <summary>
        /// End date for the schedule.
        /// </summary>
        public readonly string? DateEnd;
        /// <summary>
        /// Start date for the schedule.
        /// </summary>
        public readonly string? DateStart;
        /// <summary>
        /// Schedule mode. Valid values are `ALWAYS`, `EVERY_DAY`, `EVERY_WEEK`, `ONE_TIME_ONLY`, or `CUSTOM`.
        /// </summary>
        public readonly string? Mode;
        /// <summary>
        /// Days of the week when schedule repeats. Valid values include `mon`, `tue`, `wed`, `thu`, `fri`, `sat`, and `sun`.
        /// </summary>
        public readonly ImmutableArray<string> RepeatOnDays;
        /// <summary>
        /// Whether the schedule applies all day.
        /// </summary>
        public readonly bool? TimeAllDay;
        /// <summary>
        /// Schedule starting time in 24-hour format (HH:MM).
        /// </summary>
        public readonly string? TimeFrom;
        /// <summary>
        /// Schedule ending time in 24-hour format (HH:MM).
        /// </summary>
        public readonly string? TimeTo;

        [OutputConstructor]
        private FirewallZonePolicySchedule(
            string? date,

            string? dateEnd,

            string? dateStart,

            string? mode,

            ImmutableArray<string> repeatOnDays,

            bool? timeAllDay,

            string? timeFrom,

            string? timeTo)
        {
            Date = date;
            DateEnd = dateEnd;
            DateStart = dateStart;
            Mode = mode;
            RepeatOnDays = repeatOnDays;
            TimeAllDay = timeAllDay;
            TimeFrom = timeFrom;
            TimeTo = timeTo;
        }
    }
}
