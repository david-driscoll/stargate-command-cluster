---
authentication_backend:
  ldap: {} # LDAP configuration is now provided via environment variables from ldap-externalsecret
  password_reset:
    disable: true
  refresh_interval: 1m

session:
  same_site: lax
  inactivity: 5m
  expiration: 1h
  remember_me: 1M
  cookies:
    - name: ${CLUSTER_CNAME}_session
      domain: ${ROOT_DOMAIN}
      authelia_url: https://auth.${ROOT_DOMAIN}
      default_redirection_url: https://${ROOT_DOMAIN}
  redis:
    host: zpm.sgc.svc.cluster.local
    database_index: 2

# notifier:
#   disable_startup_check: true
  # smtp:
  #   address: ${ROUTER_IP}
  #   sender: Authelia <david@${ROOT_DOMAIN}>
  #   disable_require_tls: true

duo_api:
  disable: true

access_control:
  default_policy: deny
  networks:
    - name: internal
      networks:
      - 10.0.0.0/8
      # - 172.16.0.0/12
      - 100.64.0.0/10
      - 192.168.0.0/16
      # - 127.0.0.1/32
  rules:
    # bypass for authelia
    - domain: authelia.${ROOT_DOMAIN}
      policy: bypass

    # bypass for lldap management interface
    - domain: lldap.${ROOT_DOMAIN}
      subject: "group:lldap_admin"
      policy: one_factor

    # Admin access - full access for admin group
    - domain: "*.${ROOT_DOMAIN}"
      subject: "group:lldap_admin"
      policy: one_factor

    # Regular users - limited access
    - domain: "*.${ROOT_DOMAIN}"
      subject: "group:lldap_password_manager"
      policy: two_factor
    # bypass for API access
    # - domain:
    #     - audiobookshelf.${DOMAIN}
    #     - lidarr.${DOMAIN}
    #     - prowlarr.${DOMAIN}
    #     - radarr.${DOMAIN}
    #     - readarr-audio.${DOMAIN}
    #     - readarr.${DOMAIN}
    #     - sabnzbd.${DOMAIN}
    #     - sonarr.${DOMAIN}
    #   resources:
    #     - "^/api/.*$"
    #     - "^/ping$"
    #   policy: bypass
    # - domain:
    #     - sabnzbd.${DOMAIN}
    #   resources:
    #     - "^/api/.*$"
    #   policy: bypass
    # - domain:
    #     - qb.${DOMAIN}
    #   resources:
    #     - "^/api/v2/.*$"
    #   policy: bypass
    # - domain:
    #     - frigate.${DOMAIN}
    #   resources:
    #     - "^/api/version$"
    #   policy: bypass
    # # one factor for local
    # - domain: "*.${DOMAIN}"
    #   networks:
    #     - internal
    #   policy: one_factor
    # # default policy for domain
    # - domain: "*.${DOMAIN}"
    #   policy: two_factor

# identity_providers:
#   oidc:
#     jwks:
#       - key: |
#           {{ secret "/config/secrets/OIDC_JWKS_KEY" | mindent 10 "|" | msquote }}
#     cors:
#       endpoints: ["authorization", "token", "revocation", "introspection"]
#     clients:
#       - client_name: Grafana
#         client_id: grafana
#         client_secret: '{{ secret "/config/secrets/GRAFANA_OAUTH_CLIENT_SECRET" }}'
#         public: false
#         authorization_policy: two_factor
#         scopes: ["openid", "profile", "groups", "email"]
#         redirect_uris:
#           - https://grafana.${DOMAIN}/login/generic_oauth
#         userinfo_signed_response_alg: none
#       - client_name: Jellyfin
#         client_id: jellyfin
#         client_secret: '{{ secret "/config/secrets/JELLYFIN_OAUTH_CLIENT_SECRET" }}'
#         public: false
#         authorization_policy: two_factor
#         require_pkce: true
#         pkce_challenge_method: S256
#         scopes: ["openid", "profile", "groups"]
#         redirect_uris:
#           - https://jellyfin.${DOMAIN}/sso/OID/r/authelia
#           - https://jellyfin.${DOMAIN}/sso/OID/redirect/authelia
#         userinfo_signed_response_alg: none
#         token_endpoint_auth_method: client_secret_post
#       - client_name: Miniflux
#         client_id: miniflux
#         client_secret: '{{ secret "/config/secrets/MINIFLUX_OAUTH_CLIENT_SECRET" }}'
#         public: false
#         authorization_policy: two_factor
#         scopes: ["openid", "profile", "groups", "email"]
#         redirect_uris:
#           - https://miniflux.${DOMAIN}/oauth2/oidc/callback
#         userinfo_signed_response_alg: none
#       - client_name: Mealie
#         client_id: mealie
#         public: true
#         authorization_policy: two_factor
#         require_pkce: true
#         pkce_challenge_method: S256
#         scopes: ["openid", "profile", "groups", "email"]
#         redirect_uris:
#           - https://mealie.${DOMAIN}/login
#         userinfo_signed_response_alg: none
#         token_endpoint_auth_method: none
#       - client_name: Paperless
#         client_id: paperless
#         client_secret: '{{ secret "/config/secrets/PAPERLESS_OAUTH_CLIENT_SECRET" }}'
#         public: false
#         authorization_policy: two_factor
#         scopes: ["openid", "profile", "groups", "email"]
#         redirect_uris:
#           - https://paperless.${DOMAIN}/accounts/oidc/authelia/login/callback/
#         userinfo_signed_response_alg: none
