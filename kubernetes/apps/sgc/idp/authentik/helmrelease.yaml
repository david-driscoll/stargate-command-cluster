# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.7.3/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app authelia
spec:
  interval: 5m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: uninstall
  uninstall:
    keepHistory: false
  dependsOn: []
  values:
    controllers:
      *app :
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          *app :
            image:
              repository: ghcr.io/goauthentik/server
              tag: 2025.6.1

            command: ["ak"]
            args: ["server"]

            env:
              TZ: ${TIMEZONE}
            envFrom:
              - secretRef:
                  name: ${APP}
              - secretRef:
                  name: ${APP}-ldap
              - secretRef:
                  name: ${APP}-postgres
              - secretRef:
                  name: ${APP}-dragonfly
              - secretRef:
                  name: ${APP}-minio

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /-/health/live/
                    port: &port 9000
                  initialDelaySeconds: 50
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /-/health/ready/
                    port: *port
                  failureThreshold: 30
                  periodSeconds: 10

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 1000
              runAsGroup: 1000
              capabilities:
                drop:
                  - ALL

            resources:
              requests:
                cpu: 50m
                memory: 500Mi
              limits:
                memory: 800Mi


    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
            protocol: HTTP

    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          hajimari.io/icon: simple-icons:webauthn
        hosts:
          - host: "auth.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        type: configMap
        name: authentik-config
        globalMounts:
          - path: /config
      media:
        type: emptyDir
        globalMounts:
          - path: /media
      templates:
        type: emptyDir
        globalMounts:
          - path: /templates
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
