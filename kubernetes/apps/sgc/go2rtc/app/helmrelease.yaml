---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.2.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app go2rtc

spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  interval: 15m
  timeout: 10m
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: 7
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 7
      strategy: rollback
  rollback:
    force: false # true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  values:
    fullnameOverride: *app
    controllers:
      app:
        annotations:
          reloader.stakater.com/auto: "true"
        strategy: Recreate
        pod:
          restartPolicy: Always
        containers:
          app:
            image:
              repository: ghcr.io/alexxit/go2rtc
              tag: 1.9.11@sha256:64ab39fdcf7571075f4ef1a818a1019aa359e2e730600771d265b50a94449532
              pullPolicy: IfNotPresent
            # -- environment variables.
            # See [image docs](https://github.com/dani-garcia/vaultwarden/blob/main/.env.template) for more details.
            env:
              PUID: 568
              PGID: 568
              UMASK: 002
              TZ: "${TIMEZONE}"
            probes:
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &http 80
                  initialDelaySeconds: 20
                  periodSeconds: 10
                  timeoutSeconds: 10
                  failureThreshold: 15
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: *http
                  periodSeconds: 30
                  timeoutSeconds: 10
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: *http
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              # startup:
              #   enabled: true
              #   spec:
              #     failureThreshold: 50
              #     periodSeconds: 10
            securityContext:
              runAsNonRoot: true
              runAsUser: 568
              runAsGroup: 568
              fsGroup: 568
              fsGroupChangePolicy: "OnRootMismatch"
              supplementalGroups: [0, 1, 44, 109, 303, 568, 10000]
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
              limits:
                cpu: 500m
                memory: 6Gi
                # amd.com/gpu: 1

    # tolerations:

    #   - key: amd.com/gpu
    #     operator: Exists
    #     effect: NoSchedule

    defaultPodOptions:
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    # -- Configures service settings for the chart.
    service:
      app:
        controller: app
        ports:
          http:
            port: *http
          webrtc-tcp:
            port: &webrtc 8555
            protocol: TCP
          webrtc-udp:
            port: *webrtc
            protocol: UDP
      rtsp:
        controller: app
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: "${INTERNAL_IP}"
        externalIPs:
          - "${INTERNAL_IP}"
        ports:
          rtsp:
            port: &rtsp 554
            protocol: TCP

    persistence:
      config:
        type: configMap
        name: go2rtc-config
        defaultMode: 493
        globalMounts:
          - path: /config/go2rtc.yaml
            subPath: go2rtc.yaml
            readOnly: true

    route:
      internal:
        parentRefs:
          - name: internal
            namespace: network
            kind: Gateway
        hostnames:
          - "${APP}.${CLUSTER_DOMAIN}"
        kind: HTTPRoute
        annotations:
          gethomepage.dev/widget.url: "http://${APP}.${INTERNAL_CLUSTER_SERVICE}:6767"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media Management
          gethomepage.dev/icon: go2rtc.svg
          gethomepage.dev/name: Go2rtc
          gethomepage.dev/widget.type: "go2rtc"
          gethomepage.dev/namespace: "{{ .Release.Namespace }}"
          gethomepage.dev/app: "${APP}"
        rules:
          - backendRefs:
              - identifier: app
                port: *http
