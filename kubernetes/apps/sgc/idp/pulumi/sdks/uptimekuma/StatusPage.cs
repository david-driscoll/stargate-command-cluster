// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Uptimekuma
{
    [UptimekumaResourceType("uptimekuma:index/statusPage:StatusPage")]
    public partial class StatusPage : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Custom CSS for the status page
        /// </summary>
        [Output("customCss")]
        public Output<string?> CustomCss { get; private set; } = null!;

        /// <summary>
        /// Status page description
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// List of custom domain names for the status page
        /// </summary>
        [Output("domainNameLists")]
        public Output<ImmutableArray<string>> DomainNameLists { get; private set; } = null!;

        /// <summary>
        /// Custom footer text
        /// </summary>
        [Output("footerText")]
        public Output<string?> FooterText { get; private set; } = null!;

        /// <summary>
        /// Google Analytics ID
        /// </summary>
        [Output("googleAnalyticsId")]
        public Output<string?> GoogleAnalyticsId { get; private set; } = null!;

        /// <summary>
        /// Status page icon
        /// </summary>
        [Output("icon")]
        public Output<string?> Icon { get; private set; } = null!;

        /// <summary>
        /// List of monitor groups displayed on the status page
        /// </summary>
        [Output("publicGroupLists")]
        public Output<ImmutableArray<Outputs.StatusPagePublicGroupList>> PublicGroupLists { get; private set; } = null!;

        /// <summary>
        /// Whether the status page is published
        /// </summary>
        [Output("published")]
        public Output<bool> Published { get; private set; } = null!;

        /// <summary>
        /// Whether to show 'Powered by Uptime Kuma' text
        /// </summary>
        [Output("showPoweredBy")]
        public Output<bool> ShowPoweredBy { get; private set; } = null!;

        /// <summary>
        /// Whether to show tags on the status page
        /// </summary>
        [Output("showTags")]
        public Output<bool> ShowTags { get; private set; } = null!;

        /// <summary>
        /// Status page URL slug
        /// </summary>
        [Output("slug")]
        public Output<string> Slug { get; private set; } = null!;

        /// <summary>
        /// Status page identifier
        /// </summary>
        [Output("statusPageId")]
        public Output<double> StatusPageId { get; private set; } = null!;

        /// <summary>
        /// Status page theme
        /// </summary>
        [Output("theme")]
        public Output<string?> Theme { get; private set; } = null!;

        /// <summary>
        /// Status page title
        /// </summary>
        [Output("title")]
        public Output<string> Title { get; private set; } = null!;


        /// <summary>
        /// Create a StatusPage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StatusPage(string name, StatusPageArgs args, CustomResourceOptions? options = null)
            : base("uptimekuma:index/statusPage:StatusPage", name, args ?? new StatusPageArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private StatusPage(string name, Input<string> id, StatusPageState? state = null, CustomResourceOptions? options = null)
            : base("uptimekuma:index/statusPage:StatusPage", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StatusPage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StatusPage Get(string name, Input<string> id, StatusPageState? state = null, CustomResourceOptions? options = null)
        {
            return new StatusPage(name, id, state, options);
        }
    }

    public sealed class StatusPageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom CSS for the status page
        /// </summary>
        [Input("customCss")]
        public Input<string>? CustomCss { get; set; }

        /// <summary>
        /// Status page description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("domainNameLists")]
        private InputList<string>? _domainNameLists;

        /// <summary>
        /// List of custom domain names for the status page
        /// </summary>
        public InputList<string> DomainNameLists
        {
            get => _domainNameLists ?? (_domainNameLists = new InputList<string>());
            set => _domainNameLists = value;
        }

        /// <summary>
        /// Custom footer text
        /// </summary>
        [Input("footerText")]
        public Input<string>? FooterText { get; set; }

        /// <summary>
        /// Google Analytics ID
        /// </summary>
        [Input("googleAnalyticsId")]
        public Input<string>? GoogleAnalyticsId { get; set; }

        /// <summary>
        /// Status page icon
        /// </summary>
        [Input("icon")]
        public Input<string>? Icon { get; set; }

        [Input("publicGroupLists")]
        private InputList<Inputs.StatusPagePublicGroupListArgs>? _publicGroupLists;

        /// <summary>
        /// List of monitor groups displayed on the status page
        /// </summary>
        public InputList<Inputs.StatusPagePublicGroupListArgs> PublicGroupLists
        {
            get => _publicGroupLists ?? (_publicGroupLists = new InputList<Inputs.StatusPagePublicGroupListArgs>());
            set => _publicGroupLists = value;
        }

        /// <summary>
        /// Whether the status page is published
        /// </summary>
        [Input("published")]
        public Input<bool>? Published { get; set; }

        /// <summary>
        /// Whether to show 'Powered by Uptime Kuma' text
        /// </summary>
        [Input("showPoweredBy")]
        public Input<bool>? ShowPoweredBy { get; set; }

        /// <summary>
        /// Whether to show tags on the status page
        /// </summary>
        [Input("showTags")]
        public Input<bool>? ShowTags { get; set; }

        /// <summary>
        /// Status page URL slug
        /// </summary>
        [Input("slug", required: true)]
        public Input<string> Slug { get; set; } = null!;

        /// <summary>
        /// Status page theme
        /// </summary>
        [Input("theme")]
        public Input<string>? Theme { get; set; }

        /// <summary>
        /// Status page title
        /// </summary>
        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        public StatusPageArgs()
        {
        }
        public static new StatusPageArgs Empty => new StatusPageArgs();
    }

    public sealed class StatusPageState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom CSS for the status page
        /// </summary>
        [Input("customCss")]
        public Input<string>? CustomCss { get; set; }

        /// <summary>
        /// Status page description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("domainNameLists")]
        private InputList<string>? _domainNameLists;

        /// <summary>
        /// List of custom domain names for the status page
        /// </summary>
        public InputList<string> DomainNameLists
        {
            get => _domainNameLists ?? (_domainNameLists = new InputList<string>());
            set => _domainNameLists = value;
        }

        /// <summary>
        /// Custom footer text
        /// </summary>
        [Input("footerText")]
        public Input<string>? FooterText { get; set; }

        /// <summary>
        /// Google Analytics ID
        /// </summary>
        [Input("googleAnalyticsId")]
        public Input<string>? GoogleAnalyticsId { get; set; }

        /// <summary>
        /// Status page icon
        /// </summary>
        [Input("icon")]
        public Input<string>? Icon { get; set; }

        [Input("publicGroupLists")]
        private InputList<Inputs.StatusPagePublicGroupListGetArgs>? _publicGroupLists;

        /// <summary>
        /// List of monitor groups displayed on the status page
        /// </summary>
        public InputList<Inputs.StatusPagePublicGroupListGetArgs> PublicGroupLists
        {
            get => _publicGroupLists ?? (_publicGroupLists = new InputList<Inputs.StatusPagePublicGroupListGetArgs>());
            set => _publicGroupLists = value;
        }

        /// <summary>
        /// Whether the status page is published
        /// </summary>
        [Input("published")]
        public Input<bool>? Published { get; set; }

        /// <summary>
        /// Whether to show 'Powered by Uptime Kuma' text
        /// </summary>
        [Input("showPoweredBy")]
        public Input<bool>? ShowPoweredBy { get; set; }

        /// <summary>
        /// Whether to show tags on the status page
        /// </summary>
        [Input("showTags")]
        public Input<bool>? ShowTags { get; set; }

        /// <summary>
        /// Status page URL slug
        /// </summary>
        [Input("slug")]
        public Input<string>? Slug { get; set; }

        /// <summary>
        /// Status page identifier
        /// </summary>
        [Input("statusPageId")]
        public Input<double>? StatusPageId { get; set; }

        /// <summary>
        /// Status page theme
        /// </summary>
        [Input("theme")]
        public Input<string>? Theme { get; set; }

        /// <summary>
        /// Status page title
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        public StatusPageState()
        {
        }
        public static new StatusPageState Empty => new StatusPageState();
    }
}
