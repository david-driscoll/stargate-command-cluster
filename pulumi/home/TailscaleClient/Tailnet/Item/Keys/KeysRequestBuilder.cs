// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
using Tailscale.Client.Models;
using Tailscale.Client.Tailnet.Item.Keys.Item;
namespace Tailscale.Client.Tailnet.Item.Keys
{
    /// <summary>
    /// Builds and executes requests for operations under \tailnet\{tailnet}\keys
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class KeysRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Gets an item from the Tailscale.Client.tailnet.item.keys.item collection</summary>
        /// <param name="position">The id of the key.The key ID can be found in the [admin console](https://login.tailscale.com/admin/settings/keys).</param>
        /// <returns>DoUpdate <see cref="global::Tailscale.Client.Tailnet.Item.Keys.Item.WithKeyItemRequestBuilder"/></returns>
        public global::Tailscale.Client.Tailnet.Item.Keys.Item.WithKeyItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("keyId", position);
                return new global::Tailscale.Client.Tailnet.Item.Keys.Item.WithKeyItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Tailscale.Client.Tailnet.Item.Keys.KeysRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public KeysRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/tailnet/{tailnet}/keys?all={all}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Tailscale.Client.Tailnet.Item.Keys.KeysRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public KeysRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/tailnet/{tailnet}/keys?all={all}", rawUrl)
        {
        }
        /// <summary>
        /// Returns a list of active auth keys, API access tokens and OAuth clients.If the parameter {all} was not specified, the set of keys returned depends on the access token used to make the request:- If the API call is made with a user-owned API access token, this returns only the keys owned by that user.- If the API call is made with an access token derived from an OAuth client, this returns all OAuth clients for the tailnet.OAuth Scope: `api_access_tokens:read` grants access to personal API access tokens.OAuth Scope: `auth_keys:read` grants access to machine auth keys.OAuth Scope: `oauth_keys:read` grants access to OAuth clients and OAuth tokens.
        /// </summary>
        /// <returns>DoUpdate <see cref="global::Tailscale.Client.Tailnet.Item.Keys.KeysGetResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Tailscale.Client.Models.Error">When receiving a 404 status code</exception>
        /// <exception cref="global::Tailscale.Client.Models.Error">When receiving a 500 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Tailscale.Client.Tailnet.Item.Keys.KeysGetResponse?> GetAsKeysGetResponseAsync(Action<RequestConfiguration<global::Tailscale.Client.Tailnet.Item.Keys.KeysRequestBuilder.KeysRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Tailscale.Client.Tailnet.Item.Keys.KeysGetResponse> GetAsKeysGetResponseAsync(Action<RequestConfiguration<global::Tailscale.Client.Tailnet.Item.Keys.KeysRequestBuilder.KeysRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "404", global::Tailscale.Client.Models.Error.CreateFromDiscriminatorValue },
                { "500", global::Tailscale.Client.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Tailscale.Client.Tailnet.Item.Keys.KeysGetResponse>(requestInfo, global::Tailscale.Client.Tailnet.Item.Keys.KeysGetResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns a list of active auth keys, API access tokens and OAuth clients.If the parameter {all} was not specified, the set of keys returned depends on the access token used to make the request:- If the API call is made with a user-owned API access token, this returns only the keys owned by that user.- If the API call is made with an access token derived from an OAuth client, this returns all OAuth clients for the tailnet.OAuth Scope: `api_access_tokens:read` grants access to personal API access tokens.OAuth Scope: `auth_keys:read` grants access to machine auth keys.OAuth Scope: `oauth_keys:read` grants access to OAuth clients and OAuth tokens.
        /// </summary>
        /// <returns>DoUpdate <see cref="global::Tailscale.Client.Tailnet.Item.Keys.KeysResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Tailscale.Client.Models.Error">When receiving a 404 status code</exception>
        /// <exception cref="global::Tailscale.Client.Models.Error">When receiving a 500 status code</exception>
        [Obsolete("This method is obsolete. Use GetAsKeysGetResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Tailscale.Client.Tailnet.Item.Keys.KeysResponse?> GetAsync(Action<RequestConfiguration<global::Tailscale.Client.Tailnet.Item.Keys.KeysRequestBuilder.KeysRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Tailscale.Client.Tailnet.Item.Keys.KeysResponse> GetAsync(Action<RequestConfiguration<global::Tailscale.Client.Tailnet.Item.Keys.KeysRequestBuilder.KeysRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "404", global::Tailscale.Client.Models.Error.CreateFromDiscriminatorValue },
                { "500", global::Tailscale.Client.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Tailscale.Client.Tailnet.Item.Keys.KeysResponse>(requestInfo, global::Tailscale.Client.Tailnet.Item.Keys.KeysResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Creates a new [auth key](https://tailscale.com/kb/1085/) or [OAuth client](https://tailscale.com/kb/1215/) in the specified tailnet.The key will be associated with the user who owns the API access token used to make this call,or, if the call is made with an access token derived from an OAuth client, the key will be owned by the tailnet.Returns a JSON object with the generated key.The key should be recorded and kept safe and secure because it wields the capabilities or scopes specified in the request.The identity of the key is embedded in the key itself and can be used to perform operations on the key (e.g., revoking it or retrieving information about it).The full key can no longer be retrieved after the initial response.OAuth Scope: `auth_keys` grants access to create machine auth keys.OAuth Scope: `oauth_keys` grants access to create OAuth clients.
        /// </summary>
        /// <returns>DoUpdate <see cref="global::Tailscale.Client.Models.Key"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Tailscale.Client.Models.Error">When receiving a 404 status code</exception>
        /// <exception cref="global::Tailscale.Client.Models.Error">When receiving a 500 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Tailscale.Client.Models.Key?> PostAsync(global::Tailscale.Client.Tailnet.Item.Keys.KeysPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Tailscale.Client.Models.Key> PostAsync(global::Tailscale.Client.Tailnet.Item.Keys.KeysPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "404", global::Tailscale.Client.Models.Error.CreateFromDiscriminatorValue },
                { "500", global::Tailscale.Client.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Tailscale.Client.Models.Key>(requestInfo, global::Tailscale.Client.Models.Key.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns a list of active auth keys, API access tokens and OAuth clients.If the parameter {all} was not specified, the set of keys returned depends on the access token used to make the request:- If the API call is made with a user-owned API access token, this returns only the keys owned by that user.- If the API call is made with an access token derived from an OAuth client, this returns all OAuth clients for the tailnet.OAuth Scope: `api_access_tokens:read` grants access to personal API access tokens.OAuth Scope: `auth_keys:read` grants access to machine auth keys.OAuth Scope: `oauth_keys:read` grants access to OAuth clients and OAuth tokens.
        /// </summary>
        /// <returns>DoUpdate <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Tailscale.Client.Tailnet.Item.Keys.KeysRequestBuilder.KeysRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Tailscale.Client.Tailnet.Item.Keys.KeysRequestBuilder.KeysRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Creates a new [auth key](https://tailscale.com/kb/1085/) or [OAuth client](https://tailscale.com/kb/1215/) in the specified tailnet.The key will be associated with the user who owns the API access token used to make this call,or, if the call is made with an access token derived from an OAuth client, the key will be owned by the tailnet.Returns a JSON object with the generated key.The key should be recorded and kept safe and secure because it wields the capabilities or scopes specified in the request.The identity of the key is embedded in the key itself and can be used to perform operations on the key (e.g., revoking it or retrieving information about it).The full key can no longer be retrieved after the initial response.OAuth Scope: `auth_keys` grants access to create machine auth keys.OAuth Scope: `oauth_keys` grants access to create OAuth clients.
        /// </summary>
        /// <returns>DoUpdate <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Tailscale.Client.Tailnet.Item.Keys.KeysPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Tailscale.Client.Tailnet.Item.Keys.KeysPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, "{+baseurl}/tailnet/{tailnet}/keys", PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>DoUpdate <see cref="global::Tailscale.Client.Tailnet.Item.Keys.KeysRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Tailscale.Client.Tailnet.Item.Keys.KeysRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Tailscale.Client.Tailnet.Item.Keys.KeysRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Returns a list of active auth keys, API access tokens and OAuth clients.If the parameter {all} was not specified, the set of keys returned depends on the access token used to make the request:- If the API call is made with a user-owned API access token, this returns only the keys owned by that user.- If the API call is made with an access token derived from an OAuth client, this returns all OAuth clients for the tailnet.OAuth Scope: `api_access_tokens:read` grants access to personal API access tokens.OAuth Scope: `auth_keys:read` grants access to machine auth keys.OAuth Scope: `oauth_keys:read` grants access to OAuth clients and OAuth tokens.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class KeysRequestBuilderGetQueryParameters 
        {
            /// <summary>If set to true, this will return all auth keys, API access tokens and OAuth clients for the tailnet.</summary>
            [QueryParameter("all")]
            public bool? All { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class KeysRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Tailscale.Client.Tailnet.Item.Keys.KeysRequestBuilder.KeysRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class KeysRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
