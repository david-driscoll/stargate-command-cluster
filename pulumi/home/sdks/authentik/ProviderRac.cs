// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Authentik
{
    [AuthentikResourceType("authentik:index/providerRac:ProviderRac")]
    public partial class ProviderRac : global::Pulumi.CustomResource
    {
        [Output("authenticationFlow")]
        public Output<string?> AuthenticationFlow { get; private set; } = null!;

        [Output("authorizationFlow")]
        public Output<string> AuthorizationFlow { get; private set; } = null!;

        /// <summary>
        /// Format: hours=1;minutes=2;seconds=3. Defaults to `seconds=0`.
        /// </summary>
        [Output("connectionExpiry")]
        public Output<string?> ConnectionExpiry { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("propertyMappings")]
        public Output<ImmutableArray<string>> PropertyMappings { get; private set; } = null!;

        [Output("providerRacId")]
        public Output<string> ProviderRacId { get; private set; } = null!;

        /// <summary>
        /// JSON format expected. Use `jsonencode()` to pass objects. Defaults to `{}`.
        /// </summary>
        [Output("settings")]
        public Output<string?> Settings { get; private set; } = null!;


        /// <summary>
        /// Create a ProviderRac resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProviderRac(string name, ProviderRacArgs args, CustomResourceOptions? options = null)
            : base("authentik:index/providerRac:ProviderRac", name, args ?? new ProviderRacArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private ProviderRac(string name, Input<string> id, ProviderRacState? state = null, CustomResourceOptions? options = null)
            : base("authentik:index/providerRac:ProviderRac", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProviderRac resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProviderRac Get(string name, Input<string> id, ProviderRacState? state = null, CustomResourceOptions? options = null)
        {
            return new ProviderRac(name, id, state, options);
        }
    }

    public sealed class ProviderRacArgs : global::Pulumi.ResourceArgs
    {
        [Input("authenticationFlow")]
        public Input<string>? AuthenticationFlow { get; set; }

        [Input("authorizationFlow", required: true)]
        public Input<string> AuthorizationFlow { get; set; } = null!;

        /// <summary>
        /// Format: hours=1;minutes=2;seconds=3. Defaults to `seconds=0`.
        /// </summary>
        [Input("connectionExpiry")]
        public Input<string>? ConnectionExpiry { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("propertyMappings")]
        private InputList<string>? _propertyMappings;
        public InputList<string> PropertyMappings
        {
            get => _propertyMappings ?? (_propertyMappings = new InputList<string>());
            set => _propertyMappings = value;
        }

        [Input("providerRacId")]
        public Input<string>? ProviderRacId { get; set; }

        /// <summary>
        /// JSON format expected. Use `jsonencode()` to pass objects. Defaults to `{}`.
        /// </summary>
        [Input("settings")]
        public Input<string>? Settings { get; set; }

        public ProviderRacArgs()
        {
        }
        public static new ProviderRacArgs Empty => new ProviderRacArgs();
    }

    public sealed class ProviderRacState : global::Pulumi.ResourceArgs
    {
        [Input("authenticationFlow")]
        public Input<string>? AuthenticationFlow { get; set; }

        [Input("authorizationFlow")]
        public Input<string>? AuthorizationFlow { get; set; }

        /// <summary>
        /// Format: hours=1;minutes=2;seconds=3. Defaults to `seconds=0`.
        /// </summary>
        [Input("connectionExpiry")]
        public Input<string>? ConnectionExpiry { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("propertyMappings")]
        private InputList<string>? _propertyMappings;
        public InputList<string> PropertyMappings
        {
            get => _propertyMappings ?? (_propertyMappings = new InputList<string>());
            set => _propertyMappings = value;
        }

        [Input("providerRacId")]
        public Input<string>? ProviderRacId { get; set; }

        /// <summary>
        /// JSON format expected. Use `jsonencode()` to pass objects. Defaults to `{}`.
        /// </summary>
        [Input("settings")]
        public Input<string>? Settings { get; set; }

        public ProviderRacState()
        {
        }
        public static new ProviderRacState Empty => new ProviderRacState();
    }
}
