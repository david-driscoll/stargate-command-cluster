---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrepository-source-v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: kuma-ingress-watcher
spec:
  interval: 12h
  url: https://squent.github.io/helm-charts/
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kuma-ingress-watcher
spec:
  chart:
    spec:
      chart: kuma-ingress-watcher
      version: 1.4.0
      sourceRef:
        kind: HelmRepository
        name: kuma-ingress-watcher
  maxHistory: 3
  interval: 15m
  timeout: 5m
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: 7
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 7
      strategy: rollback
  rollback:
    force: true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  dependsOn:
    - name: uptime-kuma
  postRenderers:
    - kustomize:
        patches:
          - target:
              kind: Deployment
              name: kuma-ingress-watcher
            patch: |
              - op: add
                path: /spec/template/spec/containers/0/env/-
                value:
                  name: DEFAULT_PARENT
                  value: "${CLUSTER_TITLE}"
  values:
    kumaIngressWatcher:
      watchInterval: 10
      ingressRoute:
        enabled: true
        traefikv3: true
      ingress:
        enabled: true
      fileBasedMonitors:
        enabled: false
        monitorsFilePath: "/etc/kuma-controller/monitors.yaml"
        monitors:
        #- name: "homie"
        #  type: "http"
        #  url: "https://homepage-192-168-1-28.traefik.me/"
        #  interval: 60
        #  - name: "another-monitor"
        #    type: "http"
        #    host: "example-host"
        #    port: 8080
        #    interval: 120

    namespace: ${NAMESPACE}

    clusterRole:
      name: ingress-reader

    clusterRoleBinding:
      name: kuma-ingress-reader-binding

    serviceAccount:
      name: kuma-ingress-discovery

    secret:
      name: kuma-ingress-discovery-token

    deployment:
      name: kuma-ingress-watcher
      replicas: 1
      label: kuma-ingress-watcher
      image:
        name: ghcr.io/squent/kuma-ingress-watcher
      logLevel: INFO

    uptimeKuma:
      url: "http://uptime-kuma:3001"
      credentialsSecret: uptime-kuma-credentials

    resources:
      requests:
        memory: "64Mi"
        cpu: "250m"
      limits:
        memory: "128Mi"
        cpu: "500m"
