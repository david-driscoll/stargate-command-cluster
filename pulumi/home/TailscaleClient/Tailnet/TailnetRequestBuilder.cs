// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
using Tailscale.Client.Tailnet.Item;
namespace Tailscale.Client.Tailnet
{
    /// <summary>
    /// Builds and executes requests for operations under \tailnet
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class TailnetRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Gets an item from the Tailscale.Client.tailnet.item collection</summary>
        /// <param name="position">The tailnet organization name.When specifying a tailnet in the API, you can:- Provide a dash (`-`) to reference the default tailnet of the access token being used to make the API call.  This is the best option for most users.  Your API calls would start:  ```sh  curl &quot;https://api.tailscale.com/api/v2/tailnet/-/...&quot;  ```- Provide the **organization** name found on the **[General Settings](https://login.tailscale.com/admin/settings/general)**  page of the Tailscale admin console (not to be confused with the &quot;tailnet name&quot; found in the DNS tab).  For example, if your organization name is `alice@example.com`, your API calls would start:  ```sh  curl &quot;https://api.tailscale.com/api/v2/tailnet/alice@example.com/...&quot;  ```  Learn more about [tailnet organization names](https://tailscale.com/kb/1217/tailnet-name#organization-name).</param>
        /// <returns>DoUpdate <see cref="global::Tailscale.Client.Tailnet.Item.WithTailnetItemRequestBuilder"/></returns>
        public global::Tailscale.Client.Tailnet.Item.WithTailnetItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("tailnet", position);
                return new global::Tailscale.Client.Tailnet.Item.WithTailnetItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Tailscale.Client.Tailnet.TailnetRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public TailnetRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/tailnet", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Tailscale.Client.Tailnet.TailnetRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public TailnetRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/tailnet", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
