---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.2.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ${APP}
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  interval: 1h
  timeout: 5m
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: 7
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 7
      strategy: rollback
  rollback:
    force: false # true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  values:
    serviceAccount:
      *app : {}
    secrets:
      *app :
        forceRename: *app
        type: kubernetes.io/service-account-token
        annotations:
          kubernetes.io/service-account.name: *app
        stringData:
          token: ""
    rbac:
      roles:
        *app :
          forceRename: *app
          type: ClusterRole
          rules:
            - apiGroups: ["driscoll.dev"]
              resources: ["*"]
              verbs: ["get", "list", "watch", "create", "patch", "update", "delete"]
            - apiGroups: [""]
              resources: ["namespaces", "secrets", "configmaps"]
              verbs: ["get", "list", "watch"]
      bindings:
        *app :
          type: ClusterRoleBinding
          roleRef:
            kind: ClusterRole
            name: *app
            apiGroup: rbac.authorization.k8s.io
          subjects:
          - kind: ServiceAccount
            name: *app
            namespace: ${NAMESPACE}
        auth-delegator:
          type: ClusterRoleBinding
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: system:auth-delegator
          subjects:
            - kind: ServiceAccount
              name: *app
              namespace: ${NAMESPACE}
