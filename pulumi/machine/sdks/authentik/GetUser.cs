// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Authentik
{
    public static class GetUser
    {
        public static Task<GetUserResult> InvokeAsync(GetUserArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserResult>("authentik:index/getUser:getUser", args ?? new GetUserArgs(), options.WithDefaults(), Utilities.PackageParameterization());

        public static Output<GetUserResult> Invoke(GetUserInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserResult>("authentik:index/getUser:getUser", args ?? new GetUserInvokeArgs(), options.WithDefaults());

        public static Output<GetUserResult> Invoke(GetUserInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserResult>("authentik:index/getUser:getUser", args ?? new GetUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("pk")]
        public double? Pk { get; set; }

        [Input("username")]
        public string? Username { get; set; }

        public GetUserArgs()
        {
        }
        public static new GetUserArgs Empty => new GetUserArgs();
    }

    public sealed class GetUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("pk")]
        public Input<double>? Pk { get; set; }

        [Input("username")]
        public Input<string>? Username { get; set; }

        public GetUserInvokeArgs()
        {
        }
        public static new GetUserInvokeArgs Empty => new GetUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserResult
    {
        public readonly string Attributes;
        public readonly string Avatar;
        public readonly string DateJoined;
        public readonly string Email;
        public readonly ImmutableArray<string> Groups;
        public readonly string Id;
        public readonly bool IsActive;
        public readonly bool IsSuperuser;
        public readonly string LastLogin;
        public readonly string Name;
        public readonly string Path;
        public readonly double Pk;
        public readonly string Type;
        public readonly string Uid;
        public readonly string Username;
        public readonly string Uuid;

        [OutputConstructor]
        private GetUserResult(
            string attributes,

            string avatar,

            string dateJoined,

            string email,

            ImmutableArray<string> groups,

            string id,

            bool isActive,

            bool isSuperuser,

            string lastLogin,

            string name,

            string path,

            double pk,

            string type,

            string uid,

            string username,

            string uuid)
        {
            Attributes = attributes;
            Avatar = avatar;
            DateJoined = dateJoined;
            Email = email;
            Groups = groups;
            Id = id;
            IsActive = isActive;
            IsSuperuser = isSuperuser;
            LastLogin = lastLogin;
            Name = name;
            Path = path;
            Pk = pk;
            Type = type;
            Uid = uid;
            Username = username;
            Uuid = uuid;
        }
    }
}
