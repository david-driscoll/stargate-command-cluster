// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Unifi
{
    public static class GetDnsRecord
    {
        public static Task<GetDnsRecordResult> InvokeAsync(GetDnsRecordArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDnsRecordResult>("unifi:index/getDnsRecord:getDnsRecord", args ?? new GetDnsRecordArgs(), options.WithDefaults(), Utilities.PackageParameterization());

        public static Output<GetDnsRecordResult> Invoke(GetDnsRecordInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDnsRecordResult>("unifi:index/getDnsRecord:getDnsRecord", args ?? new GetDnsRecordInvokeArgs(), options.WithDefaults());

        public static Output<GetDnsRecordResult> Invoke(GetDnsRecordInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDnsRecordResult>("unifi:index/getDnsRecord:getDnsRecord", args ?? new GetDnsRecordInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDnsRecordArgs : global::Pulumi.InvokeArgs
    {
        [Input("name")]
        public string? Name { get; set; }

        [Input("record")]
        public string? Record { get; set; }

        [Input("site")]
        public string? Site { get; set; }

        public GetDnsRecordArgs()
        {
        }
        public static new GetDnsRecordArgs Empty => new GetDnsRecordArgs();
    }

    public sealed class GetDnsRecordInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("record")]
        public Input<string>? Record { get; set; }

        [Input("site")]
        public Input<string>? Site { get; set; }

        public GetDnsRecordInvokeArgs()
        {
        }
        public static new GetDnsRecordInvokeArgs Empty => new GetDnsRecordInvokeArgs();
    }


    [OutputType]
    public sealed class GetDnsRecordResult
    {
        public readonly bool Enabled;
        public readonly string Id;
        public readonly string Name;
        public readonly double Port;
        public readonly double Priority;
        public readonly string Record;
        public readonly string Site;
        public readonly double Ttl;
        public readonly string Type;
        public readonly double Weight;

        [OutputConstructor]
        private GetDnsRecordResult(
            bool enabled,

            string id,

            string name,

            double port,

            double priority,

            string record,

            string site,

            double ttl,

            string type,

            double weight)
        {
            Enabled = enabled;
            Id = id;
            Name = name;
            Port = port;
            Priority = priority;
            Record = record;
            Site = site;
            Ttl = ttl;
            Type = type;
            Weight = weight;
        }
    }
}
