---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.2.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app iptv-config

spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  interval: 15m
  timeout: 10m
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: 7
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 7
      strategy: rollback
  rollback:
    force: false # true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  dependsOn: []
  values:
    controllers:
      *app :
        enabled: true
        containers:
          *app :
            image:
              repository: josh5/tvh-iptv-config
              tag: latest@sha256:f6e5947356da113eef834e45929233fd2480b8d76be38ab6880374e6a0143197
              pullPolicy: IfNotPresent
            env:
              TZ: ${TIMEZONE}
            securityContext:
              readOnlyRootFilesystem: false

            resources:
              requests:
                cpu: 50m
                memory: 100Mi
              limits:
                cpu: 1000m
                memory: 1Gi

    tolerations:
      # - key: amd.com/gpu
      #   operator: Exists
      #   effect: NoSchedule
    defaultPodOptions:
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        runAsGroup: 568
        runAsNonRoot: true
        runAsUser: 568
        seccompProfile:
          type: RuntimeDefault
      # nodeSelector:
      #   intel.feature.node.kubernetes.io/gpu: "true"

    service:
      *app :
        controller: *app
        type: LoadBalancer
        annotations:
          reloader.stakater.com/auto: "true"
          external-dns.alpha.kubernetes.io/target: "${TUNER_VIP}"
          external-dns.alpha.kubernetes.io/hostname: "${TUNER_DOMAIN}"
          io.cilium/lb-ipam-ips: "${TUNER_VIP}"
        externalIPs:
          - "${TUNER_VIP}"
        ports:
          http:
            port: &http 9985
          proxy:
            port: &proxy 9987

    ingress:
      internal:
        className: internal
        hosts:
          - host: "${APP}.${CLUSTER_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: *app
                  port: http
        annotations:
          # tailscale.com/proxy-group: ingress
          # tailscale.com/tags: "tag:apps"
          # reloader.stakater.com/auto: "true"
          # external-dns.alpha.kubernetes.io/target: "${INTERNAL_DOMAIN}"
          gethomepage.dev/widget.url: "http://${APP}.${INTERNAL_CLUSTER_SERVICE}:5004"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/icon: dispatcharr.svg
          gethomepage.dev/name: dispatcharr
          gethomepage.dev/widget.type: dispatcharr
          gethomepage.dev/namespace: "{{ .Release.Namespace }}" # The kubernetes namespace the app resides in
          gethomepage.dev/app: "${APP}"

    persistence:
      *app :
        existingClaim: ${APP}
        globalMounts:
          - path: /opt/hlsp/config
            subPath: config
          - path: /opt/hlsp/plugins
            subPath: plugins

