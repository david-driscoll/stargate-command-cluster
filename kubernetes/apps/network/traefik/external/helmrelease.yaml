---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app traefik-external
  namespace: network
spec:
  interval: 30m
  chart:
    spec:
      chart: traefik
      version: 35.4.0
      sourceRef:
        kind: HelmRepository
        name: traefik
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    image:
      repository: traefik
      tag: v3.4.1@sha256:cd40ab7bc1f047731d5b22595203812343efcb6538014c4e93221cfc3a77217a
    fullnameOverride: traefik-external
    deployment:
      kind: Deployment
      replicas: 3
    service:
      annotations:
        reloader.stakater.com/auto: "true"
        external-dns.alpha.kubernetes.io/target: "${EXTERNAL_DOMAIN}"
        io.cilium/lb-ipam-ips: "${EXTERNAL_IP}"
        tailscale.com/expose: "true"
        tailscale.com/hostname: "${EXTERNAL_CNAME}"
      externalIPs:
        - "${EXTERNAL_IP}"
    additionalArguments:
      - '--providers.file.filename=/config/store.yaml'
      - '--serversTransport.insecureSkipVerify=true'
      - --certificatesresolvers.tailscale.tailscale=true
      - --entryPoints.postgres.address=:5432/tcp
    volumes:
      # - name: le-staging-tls
      - name: le-production-tls
        mountPath: '/certs'
        type: secret
      - name: cluster-tls
        mountPath: '/cluster-certs'
        type: secret
      - name: traefik-tls-settings
        mountPath: '/config'
        type: configMap
    ports:
      traefik:
        expose:
          default: true
    ingressClass:
      enabled: true
      isDefaultClass: false
      name: external
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        namespaceSelector:
          any: true
    resources:
      requests:
        cpu: 50m
        memory: 100Mi
      limits:
        cpu: 150m
        memory: 200Mi
    providers:
      kubernetesCRD:
        ingressClass: "external"
        enabled: true
        allowCrossNamespace: true
        allowExternalNameServices: true
      kubernetesIngress:
        ingressClass: "external"
        enabled: true
        allowExternalNameServices: true
      kubernetesGateway:
        enabled: true
        experimentalChannel: true
    logs:
      access:
        enabled: true
        addInternals: true
      general:
        # -- Set [logs format](https://doc.traefik.io/traefik/observability/logs/#format)
        format: common
        # -- Alternative logging levels are TRACE, DEBUG, INFO, WARN, ERROR, FATAL, and PANIC.
        level: "INFO"
    ingressRoute:
      dashboard:
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/target: "${EXTERNAL_DOMAIN}"
          external-dns.alpha.kubernetes.io/hostname: external.${CLUSTER_DOMAIN}
        matchRule: Host(`external.${CLUSTER_DOMAIN}`)
        services:
          - name: api@external
            kind: TraefikService
        entryPoints:
        - "traefik"
        - "websecure"
        middlewares: []
        tls:
          secretName: "le-production-tls"
    experimental:
      fastProxy:
        enabled: true
      kubernetesGateway:
        enabled: true
    web:
      forwardedHeaders:
        insecure: true
      proxyProtocol:
        insecure: true
    websecure:
      forwardedHeaders:
        insecure: true
      proxyProtocol:
        insecure: true
