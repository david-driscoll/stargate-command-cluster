// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Authentik
{
    [AuthentikResourceType("authentik:index/providerSsf:ProviderSsf")]
    public partial class ProviderSsf : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Defaults to `days=30`.
        /// </summary>
        [Output("eventRetention")]
        public Output<string?> EventRetention { get; private set; } = null!;

        /// <summary>
        /// JWTs issued by any of the configured providers can be used to authenticate on behalf of this provider.
        /// </summary>
        [Output("jwtFederationProviders")]
        public Output<ImmutableArray<double>> JwtFederationProviders { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("providerSsfId")]
        public Output<string> ProviderSsfId { get; private set; } = null!;

        [Output("signingKey")]
        public Output<string?> SigningKey { get; private set; } = null!;


        /// <summary>
        /// Create a ProviderSsf resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProviderSsf(string name, ProviderSsfArgs? args = null, CustomResourceOptions? options = null)
            : base("authentik:index/providerSsf:ProviderSsf", name, args ?? new ProviderSsfArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private ProviderSsf(string name, Input<string> id, ProviderSsfState? state = null, CustomResourceOptions? options = null)
            : base("authentik:index/providerSsf:ProviderSsf", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProviderSsf resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProviderSsf Get(string name, Input<string> id, ProviderSsfState? state = null, CustomResourceOptions? options = null)
        {
            return new ProviderSsf(name, id, state, options);
        }
    }

    public sealed class ProviderSsfArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defaults to `days=30`.
        /// </summary>
        [Input("eventRetention")]
        public Input<string>? EventRetention { get; set; }

        [Input("jwtFederationProviders")]
        private InputList<double>? _jwtFederationProviders;

        /// <summary>
        /// JWTs issued by any of the configured providers can be used to authenticate on behalf of this provider.
        /// </summary>
        public InputList<double> JwtFederationProviders
        {
            get => _jwtFederationProviders ?? (_jwtFederationProviders = new InputList<double>());
            set => _jwtFederationProviders = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("providerSsfId")]
        public Input<string>? ProviderSsfId { get; set; }

        [Input("signingKey")]
        public Input<string>? SigningKey { get; set; }

        public ProviderSsfArgs()
        {
        }
        public static new ProviderSsfArgs Empty => new ProviderSsfArgs();
    }

    public sealed class ProviderSsfState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defaults to `days=30`.
        /// </summary>
        [Input("eventRetention")]
        public Input<string>? EventRetention { get; set; }

        [Input("jwtFederationProviders")]
        private InputList<double>? _jwtFederationProviders;

        /// <summary>
        /// JWTs issued by any of the configured providers can be used to authenticate on behalf of this provider.
        /// </summary>
        public InputList<double> JwtFederationProviders
        {
            get => _jwtFederationProviders ?? (_jwtFederationProviders = new InputList<double>());
            set => _jwtFederationProviders = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("providerSsfId")]
        public Input<string>? ProviderSsfId { get; set; }

        [Input("signingKey")]
        public Input<string>? SigningKey { get; set; }

        public ProviderSsfState()
        {
        }
        public static new ProviderSsfState Empty => new ProviderSsfState();
    }
}
