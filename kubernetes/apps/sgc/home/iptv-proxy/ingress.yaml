# ---
# # yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/traefik.io/ingressroute_v1alpha1.json
# apiVersion: traefik.io/v1alpha1
# kind: IngressRoute
# metadata:
#   name: tivi-icon-ingress
#   annotations:
#     reloader.stakater.com/auto: "true"
#     external-dns.alpha.kubernetes.io/target: "${INTERNAL_DOMAIN}"
# spec:
#   entryPoints:
#     - websecure
#   routes:
#     - match: Host(`tivi.${ROOT_DOMAIN}`)
#       kind: Rule
#       services:
#         - name: minio
#           namespace: sgc
#           port: api
#           passHostHeader: true
#       middlewares:
#         - name: redirect-tivi-files
#           namespace: sgc
#     - match: Host(`iptv.${ROOT_DOMAIN}`) && PathPrefix(`/picons/`)
#       services:
#         - name: minio
#           namespace: sgc
#           port: api
#           passHostHeader: true
#       middlewares:
#         - name: redirect-tivi-files
#           namespace: sgc
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/master/ingress.json
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tivi-icon-ingress
  annotations:
    reloader.stakater.com/auto: "true"
    external-dns.alpha.kubernetes.io/target: "${INTERNAL_DOMAIN}"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: sgc-redirect-tivi-files@kubernetescrd
spec:
  ingressClassName: internal
  rules:
    - host: "tivi.${ROOT_DOMAIN}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: minio
                port:
                  name: api
    - host: "iptv.${ROOT_DOMAIN}"
      http:
        paths:
          - path: /picons/
            pathType: Prefix
            backend:
              service:
                name: minio
                port:
                  name: api