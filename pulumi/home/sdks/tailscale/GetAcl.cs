// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tailscale
{
    public static class GetAcl
    {
        public static Task<GetAclResult> InvokeAsync(GetAclArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAclResult>("tailscale:index/getAcl:getAcl", args ?? new GetAclArgs(), options.WithDefaults(), Utilities.PackageParameterization());

        public static Output<GetAclResult> Invoke(GetAclInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAclResult>("tailscale:index/getAcl:getAcl", args ?? new GetAclInvokeArgs(), options.WithDefaults());

        public static Output<GetAclResult> Invoke(GetAclInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAclResult>("tailscale:index/getAcl:getAcl", args ?? new GetAclInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAclArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        public GetAclArgs()
        {
        }
        public static new GetAclArgs Empty => new GetAclArgs();
    }

    public sealed class GetAclInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        public GetAclInvokeArgs()
        {
        }
        public static new GetAclInvokeArgs Empty => new GetAclInvokeArgs();
    }


    [OutputType]
    public sealed class GetAclResult
    {
        public readonly string Hujson;
        public readonly string Id;
        public readonly string Json;

        [OutputConstructor]
        private GetAclResult(
            string hujson,

            string id,

            string json)
        {
            Hujson = hujson;
            Id = id;
            Json = json;
        }
    }
}
