// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Authentik
{
    [AuthentikResourceType("authentik:index/providerProxy:ProviderProxy")]
    public partial class ProviderProxy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Format: hours=1;minutes=2;seconds=3. Defaults to `minutes=10`.
        /// </summary>
        [Output("accessTokenValidity")]
        public Output<string?> AccessTokenValidity { get; private set; } = null!;

        [Output("authenticationFlow")]
        public Output<string?> AuthenticationFlow { get; private set; } = null!;

        [Output("authorizationFlow")]
        public Output<string> AuthorizationFlow { get; private set; } = null!;

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Output("basicAuthEnabled")]
        public Output<bool?> BasicAuthEnabled { get; private set; } = null!;

        [Output("basicAuthPasswordAttribute")]
        public Output<string?> BasicAuthPasswordAttribute { get; private set; } = null!;

        [Output("basicAuthUsernameAttribute")]
        public Output<string?> BasicAuthUsernameAttribute { get; private set; } = null!;

        /// <summary>
        /// Generated.
        /// </summary>
        [Output("clientId")]
        public Output<string> ClientId { get; private set; } = null!;

        [Output("cookieDomain")]
        public Output<string?> CookieDomain { get; private set; } = null!;

        [Output("externalHost")]
        public Output<string> ExternalHost { get; private set; } = null!;

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Output("interceptHeaderAuth")]
        public Output<bool?> InterceptHeaderAuth { get; private set; } = null!;

        [Output("internalHost")]
        public Output<string?> InternalHost { get; private set; } = null!;

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Output("internalHostSslValidation")]
        public Output<bool?> InternalHostSslValidation { get; private set; } = null!;

        [Output("invalidationFlow")]
        public Output<string> InvalidationFlow { get; private set; } = null!;

        /// <summary>
        /// Deprecated. Use `jwt_federation_sources` instead.
        /// </summary>
        [Output("jwksSources")]
        public Output<ImmutableArray<string>> JwksSources { get; private set; } = null!;

        /// <summary>
        /// JWTs issued by any of the configured providers can be used to authenticate on behalf of this provider.
        /// </summary>
        [Output("jwtFederationProviders")]
        public Output<ImmutableArray<double>> JwtFederationProviders { get; private set; } = null!;

        /// <summary>
        /// JWTs issued by keys configured in any of the selected sources can be used to authenticate on behalf of this provider.
        /// </summary>
        [Output("jwtFederationSources")]
        public Output<ImmutableArray<string>> JwtFederationSources { get; private set; } = null!;

        /// <summary>
        /// Allowed values:
        ///   - `proxy`
        ///   - `forward_single`
        ///   - `forward_domain`
        ///  Defaults to `proxy`.
        /// </summary>
        [Output("mode")]
        public Output<string?> Mode { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("propertyMappings")]
        public Output<ImmutableArray<string>> PropertyMappings { get; private set; } = null!;

        [Output("providerProxyId")]
        public Output<string> ProviderProxyId { get; private set; } = null!;

        /// <summary>
        /// Format: hours=1;minutes=2;seconds=3. Defaults to `days=30`.
        /// </summary>
        [Output("refreshTokenValidity")]
        public Output<string?> RefreshTokenValidity { get; private set; } = null!;

        [Output("skipPathRegex")]
        public Output<string?> SkipPathRegex { get; private set; } = null!;


        /// <summary>
        /// Create a ProviderProxy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProviderProxy(string name, ProviderProxyArgs args, CustomResourceOptions? options = null)
            : base("authentik:index/providerProxy:ProviderProxy", name, args ?? new ProviderProxyArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private ProviderProxy(string name, Input<string> id, ProviderProxyState? state = null, CustomResourceOptions? options = null)
            : base("authentik:index/providerProxy:ProviderProxy", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProviderProxy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProviderProxy Get(string name, Input<string> id, ProviderProxyState? state = null, CustomResourceOptions? options = null)
        {
            return new ProviderProxy(name, id, state, options);
        }
    }

    public sealed class ProviderProxyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Format: hours=1;minutes=2;seconds=3. Defaults to `minutes=10`.
        /// </summary>
        [Input("accessTokenValidity")]
        public Input<string>? AccessTokenValidity { get; set; }

        [Input("authenticationFlow")]
        public Input<string>? AuthenticationFlow { get; set; }

        [Input("authorizationFlow", required: true)]
        public Input<string> AuthorizationFlow { get; set; } = null!;

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("basicAuthEnabled")]
        public Input<bool>? BasicAuthEnabled { get; set; }

        [Input("basicAuthPasswordAttribute")]
        public Input<string>? BasicAuthPasswordAttribute { get; set; }

        [Input("basicAuthUsernameAttribute")]
        public Input<string>? BasicAuthUsernameAttribute { get; set; }

        [Input("cookieDomain")]
        public Input<string>? CookieDomain { get; set; }

        [Input("externalHost", required: true)]
        public Input<string> ExternalHost { get; set; } = null!;

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Input("interceptHeaderAuth")]
        public Input<bool>? InterceptHeaderAuth { get; set; }

        [Input("internalHost")]
        public Input<string>? InternalHost { get; set; }

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Input("internalHostSslValidation")]
        public Input<bool>? InternalHostSslValidation { get; set; }

        [Input("invalidationFlow", required: true)]
        public Input<string> InvalidationFlow { get; set; } = null!;

        [Input("jwksSources")]
        private InputList<string>? _jwksSources;

        /// <summary>
        /// Deprecated. Use `jwt_federation_sources` instead.
        /// </summary>
        public InputList<string> JwksSources
        {
            get => _jwksSources ?? (_jwksSources = new InputList<string>());
            set => _jwksSources = value;
        }

        [Input("jwtFederationProviders")]
        private InputList<double>? _jwtFederationProviders;

        /// <summary>
        /// JWTs issued by any of the configured providers can be used to authenticate on behalf of this provider.
        /// </summary>
        public InputList<double> JwtFederationProviders
        {
            get => _jwtFederationProviders ?? (_jwtFederationProviders = new InputList<double>());
            set => _jwtFederationProviders = value;
        }

        [Input("jwtFederationSources")]
        private InputList<string>? _jwtFederationSources;

        /// <summary>
        /// JWTs issued by keys configured in any of the selected sources can be used to authenticate on behalf of this provider.
        /// </summary>
        public InputList<string> JwtFederationSources
        {
            get => _jwtFederationSources ?? (_jwtFederationSources = new InputList<string>());
            set => _jwtFederationSources = value;
        }

        /// <summary>
        /// Allowed values:
        ///   - `proxy`
        ///   - `forward_single`
        ///   - `forward_domain`
        ///  Defaults to `proxy`.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("propertyMappings")]
        private InputList<string>? _propertyMappings;
        public InputList<string> PropertyMappings
        {
            get => _propertyMappings ?? (_propertyMappings = new InputList<string>());
            set => _propertyMappings = value;
        }

        [Input("providerProxyId")]
        public Input<string>? ProviderProxyId { get; set; }

        /// <summary>
        /// Format: hours=1;minutes=2;seconds=3. Defaults to `days=30`.
        /// </summary>
        [Input("refreshTokenValidity")]
        public Input<string>? RefreshTokenValidity { get; set; }

        [Input("skipPathRegex")]
        public Input<string>? SkipPathRegex { get; set; }

        public ProviderProxyArgs()
        {
        }
        public static new ProviderProxyArgs Empty => new ProviderProxyArgs();
    }

    public sealed class ProviderProxyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Format: hours=1;minutes=2;seconds=3. Defaults to `minutes=10`.
        /// </summary>
        [Input("accessTokenValidity")]
        public Input<string>? AccessTokenValidity { get; set; }

        [Input("authenticationFlow")]
        public Input<string>? AuthenticationFlow { get; set; }

        [Input("authorizationFlow")]
        public Input<string>? AuthorizationFlow { get; set; }

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("basicAuthEnabled")]
        public Input<bool>? BasicAuthEnabled { get; set; }

        [Input("basicAuthPasswordAttribute")]
        public Input<string>? BasicAuthPasswordAttribute { get; set; }

        [Input("basicAuthUsernameAttribute")]
        public Input<string>? BasicAuthUsernameAttribute { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        [Input("cookieDomain")]
        public Input<string>? CookieDomain { get; set; }

        [Input("externalHost")]
        public Input<string>? ExternalHost { get; set; }

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Input("interceptHeaderAuth")]
        public Input<bool>? InterceptHeaderAuth { get; set; }

        [Input("internalHost")]
        public Input<string>? InternalHost { get; set; }

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Input("internalHostSslValidation")]
        public Input<bool>? InternalHostSslValidation { get; set; }

        [Input("invalidationFlow")]
        public Input<string>? InvalidationFlow { get; set; }

        [Input("jwksSources")]
        private InputList<string>? _jwksSources;

        /// <summary>
        /// Deprecated. Use `jwt_federation_sources` instead.
        /// </summary>
        public InputList<string> JwksSources
        {
            get => _jwksSources ?? (_jwksSources = new InputList<string>());
            set => _jwksSources = value;
        }

        [Input("jwtFederationProviders")]
        private InputList<double>? _jwtFederationProviders;

        /// <summary>
        /// JWTs issued by any of the configured providers can be used to authenticate on behalf of this provider.
        /// </summary>
        public InputList<double> JwtFederationProviders
        {
            get => _jwtFederationProviders ?? (_jwtFederationProviders = new InputList<double>());
            set => _jwtFederationProviders = value;
        }

        [Input("jwtFederationSources")]
        private InputList<string>? _jwtFederationSources;

        /// <summary>
        /// JWTs issued by keys configured in any of the selected sources can be used to authenticate on behalf of this provider.
        /// </summary>
        public InputList<string> JwtFederationSources
        {
            get => _jwtFederationSources ?? (_jwtFederationSources = new InputList<string>());
            set => _jwtFederationSources = value;
        }

        /// <summary>
        /// Allowed values:
        ///   - `proxy`
        ///   - `forward_single`
        ///   - `forward_domain`
        ///  Defaults to `proxy`.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("propertyMappings")]
        private InputList<string>? _propertyMappings;
        public InputList<string> PropertyMappings
        {
            get => _propertyMappings ?? (_propertyMappings = new InputList<string>());
            set => _propertyMappings = value;
        }

        [Input("providerProxyId")]
        public Input<string>? ProviderProxyId { get; set; }

        /// <summary>
        /// Format: hours=1;minutes=2;seconds=3. Defaults to `days=30`.
        /// </summary>
        [Input("refreshTokenValidity")]
        public Input<string>? RefreshTokenValidity { get; set; }

        [Input("skipPathRegex")]
        public Input<string>? SkipPathRegex { get; set; }

        public ProviderProxyState()
        {
        }
        public static new ProviderProxyState Empty => new ProviderProxyState();
    }
}
