// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Authentik
{
    [AuthentikResourceType("authentik:index/sourceLdap:SourceLdap")]
    public partial class SourceLdap : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Defaults to ``.
        /// </summary>
        [Output("additionalGroupDn")]
        public Output<string?> AdditionalGroupDn { get; private set; } = null!;

        /// <summary>
        /// Defaults to ``.
        /// </summary>
        [Output("additionalUserDn")]
        public Output<string?> AdditionalUserDn { get; private set; } = null!;

        [Output("baseDn")]
        public Output<string> BaseDn { get; private set; } = null!;

        [Output("bindCn")]
        public Output<string> BindCn { get; private set; } = null!;

        [Output("bindPassword")]
        public Output<string> BindPassword { get; private set; } = null!;

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Output("deleteNotFoundObjects")]
        public Output<bool?> DeleteNotFoundObjects { get; private set; } = null!;

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// Defaults to `member`.
        /// </summary>
        [Output("groupMembershipField")]
        public Output<string?> GroupMembershipField { get; private set; } = null!;

        /// <summary>
        /// Defaults to `(objectClass=group)`.
        /// </summary>
        [Output("groupObjectFilter")]
        public Output<string?> GroupObjectFilter { get; private set; } = null!;

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Output("lookupGroupsFromUser")]
        public Output<bool?> LookupGroupsFromUser { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Defaults to `objectSid`.
        /// </summary>
        [Output("objectUniquenessField")]
        public Output<string?> ObjectUniquenessField { get; private set; } = null!;

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Output("passwordLoginUpdateInternalPassword")]
        public Output<bool?> PasswordLoginUpdateInternalPassword { get; private set; } = null!;

        [Output("propertyMappings")]
        public Output<ImmutableArray<string>> PropertyMappings { get; private set; } = null!;

        [Output("propertyMappingsGroups")]
        public Output<ImmutableArray<string>> PropertyMappingsGroups { get; private set; } = null!;

        [Output("serverUri")]
        public Output<string> ServerUri { get; private set; } = null!;

        [Output("slug")]
        public Output<string> Slug { get; private set; } = null!;

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Output("sni")]
        public Output<bool?> Sni { get; private set; } = null!;

        [Output("sourceLdapId")]
        public Output<string> SourceLdapId { get; private set; } = null!;

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Output("startTls")]
        public Output<bool?> StartTls { get; private set; } = null!;

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Output("syncGroups")]
        public Output<bool?> SyncGroups { get; private set; } = null!;

        [Output("syncParentGroup")]
        public Output<string?> SyncParentGroup { get; private set; } = null!;

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Output("syncUsers")]
        public Output<bool?> SyncUsers { get; private set; } = null!;

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Output("syncUsersPassword")]
        public Output<bool?> SyncUsersPassword { get; private set; } = null!;

        /// <summary>
        /// Defaults to `distinguishedName`.
        /// </summary>
        [Output("userMembershipAttribute")]
        public Output<string?> UserMembershipAttribute { get; private set; } = null!;

        /// <summary>
        /// Defaults to `(objectClass=person)`.
        /// </summary>
        [Output("userObjectFilter")]
        public Output<string?> UserObjectFilter { get; private set; } = null!;

        /// <summary>
        /// Defaults to `goauthentik.io/sources/%(slug)s`.
        /// </summary>
        [Output("userPathTemplate")]
        public Output<string?> UserPathTemplate { get; private set; } = null!;

        /// <summary>
        /// Generated.
        /// </summary>
        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;


        /// <summary>
        /// Create a SourceLdap resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SourceLdap(string name, SourceLdapArgs args, CustomResourceOptions? options = null)
            : base("authentik:index/sourceLdap:SourceLdap", name, args ?? new SourceLdapArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private SourceLdap(string name, Input<string> id, SourceLdapState? state = null, CustomResourceOptions? options = null)
            : base("authentik:index/sourceLdap:SourceLdap", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "bindPassword",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SourceLdap resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SourceLdap Get(string name, Input<string> id, SourceLdapState? state = null, CustomResourceOptions? options = null)
        {
            return new SourceLdap(name, id, state, options);
        }
    }

    public sealed class SourceLdapArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defaults to ``.
        /// </summary>
        [Input("additionalGroupDn")]
        public Input<string>? AdditionalGroupDn { get; set; }

        /// <summary>
        /// Defaults to ``.
        /// </summary>
        [Input("additionalUserDn")]
        public Input<string>? AdditionalUserDn { get; set; }

        [Input("baseDn", required: true)]
        public Input<string> BaseDn { get; set; } = null!;

        [Input("bindCn", required: true)]
        public Input<string> BindCn { get; set; } = null!;

        [Input("bindPassword", required: true)]
        private Input<string>? _bindPassword;
        public Input<string>? BindPassword
        {
            get => _bindPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _bindPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("deleteNotFoundObjects")]
        public Input<bool>? DeleteNotFoundObjects { get; set; }

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Defaults to `member`.
        /// </summary>
        [Input("groupMembershipField")]
        public Input<string>? GroupMembershipField { get; set; }

        /// <summary>
        /// Defaults to `(objectClass=group)`.
        /// </summary>
        [Input("groupObjectFilter")]
        public Input<string>? GroupObjectFilter { get; set; }

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Input("lookupGroupsFromUser")]
        public Input<bool>? LookupGroupsFromUser { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Defaults to `objectSid`.
        /// </summary>
        [Input("objectUniquenessField")]
        public Input<string>? ObjectUniquenessField { get; set; }

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("passwordLoginUpdateInternalPassword")]
        public Input<bool>? PasswordLoginUpdateInternalPassword { get; set; }

        [Input("propertyMappings")]
        private InputList<string>? _propertyMappings;
        public InputList<string> PropertyMappings
        {
            get => _propertyMappings ?? (_propertyMappings = new InputList<string>());
            set => _propertyMappings = value;
        }

        [Input("propertyMappingsGroups")]
        private InputList<string>? _propertyMappingsGroups;
        public InputList<string> PropertyMappingsGroups
        {
            get => _propertyMappingsGroups ?? (_propertyMappingsGroups = new InputList<string>());
            set => _propertyMappingsGroups = value;
        }

        [Input("serverUri", required: true)]
        public Input<string> ServerUri { get; set; } = null!;

        [Input("slug", required: true)]
        public Input<string> Slug { get; set; } = null!;

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("sni")]
        public Input<bool>? Sni { get; set; }

        [Input("sourceLdapId")]
        public Input<string>? SourceLdapId { get; set; }

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Input("startTls")]
        public Input<bool>? StartTls { get; set; }

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Input("syncGroups")]
        public Input<bool>? SyncGroups { get; set; }

        [Input("syncParentGroup")]
        public Input<string>? SyncParentGroup { get; set; }

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Input("syncUsers")]
        public Input<bool>? SyncUsers { get; set; }

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Input("syncUsersPassword")]
        public Input<bool>? SyncUsersPassword { get; set; }

        /// <summary>
        /// Defaults to `distinguishedName`.
        /// </summary>
        [Input("userMembershipAttribute")]
        public Input<string>? UserMembershipAttribute { get; set; }

        /// <summary>
        /// Defaults to `(objectClass=person)`.
        /// </summary>
        [Input("userObjectFilter")]
        public Input<string>? UserObjectFilter { get; set; }

        /// <summary>
        /// Defaults to `goauthentik.io/sources/%(slug)s`.
        /// </summary>
        [Input("userPathTemplate")]
        public Input<string>? UserPathTemplate { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        public SourceLdapArgs()
        {
        }
        public static new SourceLdapArgs Empty => new SourceLdapArgs();
    }

    public sealed class SourceLdapState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defaults to ``.
        /// </summary>
        [Input("additionalGroupDn")]
        public Input<string>? AdditionalGroupDn { get; set; }

        /// <summary>
        /// Defaults to ``.
        /// </summary>
        [Input("additionalUserDn")]
        public Input<string>? AdditionalUserDn { get; set; }

        [Input("baseDn")]
        public Input<string>? BaseDn { get; set; }

        [Input("bindCn")]
        public Input<string>? BindCn { get; set; }

        [Input("bindPassword")]
        private Input<string>? _bindPassword;
        public Input<string>? BindPassword
        {
            get => _bindPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _bindPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("deleteNotFoundObjects")]
        public Input<bool>? DeleteNotFoundObjects { get; set; }

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Defaults to `member`.
        /// </summary>
        [Input("groupMembershipField")]
        public Input<string>? GroupMembershipField { get; set; }

        /// <summary>
        /// Defaults to `(objectClass=group)`.
        /// </summary>
        [Input("groupObjectFilter")]
        public Input<string>? GroupObjectFilter { get; set; }

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Input("lookupGroupsFromUser")]
        public Input<bool>? LookupGroupsFromUser { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Defaults to `objectSid`.
        /// </summary>
        [Input("objectUniquenessField")]
        public Input<string>? ObjectUniquenessField { get; set; }

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("passwordLoginUpdateInternalPassword")]
        public Input<bool>? PasswordLoginUpdateInternalPassword { get; set; }

        [Input("propertyMappings")]
        private InputList<string>? _propertyMappings;
        public InputList<string> PropertyMappings
        {
            get => _propertyMappings ?? (_propertyMappings = new InputList<string>());
            set => _propertyMappings = value;
        }

        [Input("propertyMappingsGroups")]
        private InputList<string>? _propertyMappingsGroups;
        public InputList<string> PropertyMappingsGroups
        {
            get => _propertyMappingsGroups ?? (_propertyMappingsGroups = new InputList<string>());
            set => _propertyMappingsGroups = value;
        }

        [Input("serverUri")]
        public Input<string>? ServerUri { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("sni")]
        public Input<bool>? Sni { get; set; }

        [Input("sourceLdapId")]
        public Input<string>? SourceLdapId { get; set; }

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Input("startTls")]
        public Input<bool>? StartTls { get; set; }

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Input("syncGroups")]
        public Input<bool>? SyncGroups { get; set; }

        [Input("syncParentGroup")]
        public Input<string>? SyncParentGroup { get; set; }

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Input("syncUsers")]
        public Input<bool>? SyncUsers { get; set; }

        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Input("syncUsersPassword")]
        public Input<bool>? SyncUsersPassword { get; set; }

        /// <summary>
        /// Defaults to `distinguishedName`.
        /// </summary>
        [Input("userMembershipAttribute")]
        public Input<string>? UserMembershipAttribute { get; set; }

        /// <summary>
        /// Defaults to `(objectClass=person)`.
        /// </summary>
        [Input("userObjectFilter")]
        public Input<string>? UserObjectFilter { get; set; }

        /// <summary>
        /// Defaults to `goauthentik.io/sources/%(slug)s`.
        /// </summary>
        [Input("userPathTemplate")]
        public Input<string>? UserPathTemplate { get; set; }

        /// <summary>
        /// Generated.
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        public SourceLdapState()
        {
        }
        public static new SourceLdapState Empty => new SourceLdapState();
    }
}
