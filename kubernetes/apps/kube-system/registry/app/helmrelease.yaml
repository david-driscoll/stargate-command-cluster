---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.2.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app registry
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  interval: 15m
  timeout: 10m
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: 7
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 7
      strategy: rollback
  rollback:
    force: true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  dependsOn: []
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 1
        pod:
          securityContext:
            runAsNonRoot: false
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 65542 # gladius:external-services
        initContainers:
          fix-permissions:
            image:
              repository: busybox
              tag: latest@sha256:fba0711bd6995f7e0158f397d85f63998b4c8b1a1e3b1e9e0394c7b165585440
            command:
              - /bin/sh
              - -c
              - |
                chown -R 568:568 /var/lib/registry
            securityContext:
              runAsUser: 0
              runAsGroup: 0
              capabilities:
                add:
                  - CHOWN
                  - FOWNER
        containers:
          *app :
            image:
              repository: ghcr.io/project-zot/zot
              tag: v2.1.10@sha256:5d8fb04dd0592f7d7edf42d3cbe925478e75e1cb7b3d9d96f2a596e68f7c1a50
            env: []
            envFrom: []
            resources:
              requests:
                cpu: 50m
                memory: 256Mi
              limits:
                cpu: 1
                memory: 500Mi
            probes:
              liveness:
                enabled: true
                spec:
                  initialDelaySeconds: 5
                  httpGet:
                    path: /livez
                    port: &port 8080
              readiness:
                enabled: true
                spec:
                  initialDelaySeconds: 10
                  httpGet:
                    path: /readyz
                    port: *port
              startup:
                enabled: true
                spec:
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  failureThreshold: 3
                  httpGet:
                    path: /startupz
                    port: *port
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true

    defaultPodOptions:
      securityContext:
        runAsNonRoot: false
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: *app
        type: ClusterIP
        ports:
          http:
            port: *port

    route:
      internal:
        parentRefs:
          - name: internal
            namespace: network
            kind: Gateway
        hostnames:
          - "registry.${CLUSTER_DOMAIN}"
        kind: HTTPRoute
        rules:
          - backendRefs:
              - identifier: app
                port: *port

    persistence:
      config-file:
        type: configMap
        name: registry-values
        globalMounts:
          - path: /etc/zot/config.json
            subPath: config.json
            readOnly: true
          - path: /etc/credentials/credentials.json
            subPath: credentials.json
            readOnly: true
      registry:
        existingClaim: ${APP}
        globalMounts:
          - path: /var/lib/registry
      tmp:
        type: emptyDir
