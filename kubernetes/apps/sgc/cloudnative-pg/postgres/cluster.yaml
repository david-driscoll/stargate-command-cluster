---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
spec:
  # using only 1 replica: very difficult to drain the node where postgres is running
  # using more than 1 replica: write amplification issues when leveraging replicated storage (e.g. ceph)
  instances: 2
  imageName: ghcr.io/cloudnative-pg/postgresql:17.4
  primaryUpdateStrategy: unsupervised
  storage:
    size: 40Gi
    storageClass: longhorn
  # enableSuperuserAccess: true
  superuserSecret:
    name: postgres-admin
  postgresql:
    parameters:
      max_connections: "300"
      shared_buffers: 512MB
      pg_stat_statements.max: "10000"
      pg_stat_statements.track: all
  monitoring:
    enablePodMonitor: true

  # https://github.com/cloudnative-pg/cloudnative-pg/issues/2570
  enablePDB: false
  resources:
    requests:
      memory: "1Gi"
      cpu: "100m"
    limits:
      memory: "2Gi"
      cpu: "250m"
  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://postgresql/
      endpointURL: http://minio.${INTERNAL_CLUSTER_SERVICE}:9000
      s3Credentials:
        accessKeyId:
          name: postgres-access-key
          key: username
        secretAccessKey:
          name: postgres-access-key
          key: credential

  # bootstrap:
  # use this to recover a net-new cluster from a backup
  #   recovery:
  #     source: postgres-backup # TODO: fix this to the real name of the backup when on the new cluster

    # # use this to 'migrate' from an existing cnpg cluster (e.g. "postgres-v15") to the new cluster
    # initdb:
    #   import:
    #     type: monolith
    #     databases:
    #       - "*"
    #     roles:
    #       - "*"
    #     source:
    #       externalCluster: postgres-v15
