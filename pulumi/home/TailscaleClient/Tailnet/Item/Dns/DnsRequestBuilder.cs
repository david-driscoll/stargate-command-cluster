// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
using Tailscale.Client.Tailnet.Item.Dns.Nameservers;
using Tailscale.Client.Tailnet.Item.Dns.Preferences;
using Tailscale.Client.Tailnet.Item.Dns.Searchpaths;
using Tailscale.Client.Tailnet.Item.Dns.SplitDns;
namespace Tailscale.Client.Tailnet.Item.Dns
{
    /// <summary>
    /// Builds and executes requests for operations under \tailnet\{tailnet}\dns
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class DnsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The nameservers property</summary>
        public global::Tailscale.Client.Tailnet.Item.Dns.Nameservers.NameserversRequestBuilder Nameservers
        {
            get => new global::Tailscale.Client.Tailnet.Item.Dns.Nameservers.NameserversRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The preferences property</summary>
        public global::Tailscale.Client.Tailnet.Item.Dns.Preferences.PreferencesRequestBuilder Preferences
        {
            get => new global::Tailscale.Client.Tailnet.Item.Dns.Preferences.PreferencesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The searchpaths property</summary>
        public global::Tailscale.Client.Tailnet.Item.Dns.Searchpaths.SearchpathsRequestBuilder Searchpaths
        {
            get => new global::Tailscale.Client.Tailnet.Item.Dns.Searchpaths.SearchpathsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The splitDns property</summary>
        public global::Tailscale.Client.Tailnet.Item.Dns.SplitDns.SplitDnsRequestBuilder SplitDns
        {
            get => new global::Tailscale.Client.Tailnet.Item.Dns.SplitDns.SplitDnsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Tailscale.Client.Tailnet.Item.Dns.DnsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public DnsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/tailnet/{tailnet}/dns", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Tailscale.Client.Tailnet.Item.Dns.DnsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public DnsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/tailnet/{tailnet}/dns", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
