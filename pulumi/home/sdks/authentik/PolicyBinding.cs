// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Authentik
{
    [AuthentikResourceType("authentik:index/policyBinding:PolicyBinding")]
    public partial class PolicyBinding : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Output("failureResult")]
        public Output<bool?> FailureResult { get; private set; } = null!;

        /// <summary>
        /// UUID of the group
        /// </summary>
        [Output("group")]
        public Output<string?> Group { get; private set; } = null!;

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Output("negate")]
        public Output<bool?> Negate { get; private set; } = null!;

        [Output("order")]
        public Output<double> Order { get; private set; } = null!;

        /// <summary>
        /// UUID of the policy
        /// </summary>
        [Output("policy")]
        public Output<string?> Policy { get; private set; } = null!;

        [Output("policyBindingId")]
        public Output<string> PolicyBindingId { get; private set; } = null!;

        /// <summary>
        /// ID of the object this binding should apply to
        /// </summary>
        [Output("target")]
        public Output<string> Target { get; private set; } = null!;

        /// <summary>
        /// Defaults to `30`.
        /// </summary>
        [Output("timeout")]
        public Output<double?> Timeout { get; private set; } = null!;

        /// <summary>
        /// PK of the user
        /// </summary>
        [Output("user")]
        public Output<double?> User { get; private set; } = null!;


        /// <summary>
        /// Create a PolicyBinding resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PolicyBinding(string name, PolicyBindingArgs args, CustomResourceOptions? options = null)
            : base("authentik:index/policyBinding:PolicyBinding", name, args ?? new PolicyBindingArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private PolicyBinding(string name, Input<string> id, PolicyBindingState? state = null, CustomResourceOptions? options = null)
            : base("authentik:index/policyBinding:PolicyBinding", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PolicyBinding resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PolicyBinding Get(string name, Input<string> id, PolicyBindingState? state = null, CustomResourceOptions? options = null)
        {
            return new PolicyBinding(name, id, state, options);
        }
    }

    public sealed class PolicyBindingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("failureResult")]
        public Input<bool>? FailureResult { get; set; }

        /// <summary>
        /// UUID of the group
        /// </summary>
        [Input("group")]
        public Input<string>? Group { get; set; }

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("negate")]
        public Input<bool>? Negate { get; set; }

        [Input("order", required: true)]
        public Input<double> Order { get; set; } = null!;

        /// <summary>
        /// UUID of the policy
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        [Input("policyBindingId")]
        public Input<string>? PolicyBindingId { get; set; }

        /// <summary>
        /// ID of the object this binding should apply to
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        /// <summary>
        /// Defaults to `30`.
        /// </summary>
        [Input("timeout")]
        public Input<double>? Timeout { get; set; }

        /// <summary>
        /// PK of the user
        /// </summary>
        [Input("user")]
        public Input<double>? User { get; set; }

        public PolicyBindingArgs()
        {
        }
        public static new PolicyBindingArgs Empty => new PolicyBindingArgs();
    }

    public sealed class PolicyBindingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("failureResult")]
        public Input<bool>? FailureResult { get; set; }

        /// <summary>
        /// UUID of the group
        /// </summary>
        [Input("group")]
        public Input<string>? Group { get; set; }

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("negate")]
        public Input<bool>? Negate { get; set; }

        [Input("order")]
        public Input<double>? Order { get; set; }

        /// <summary>
        /// UUID of the policy
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        [Input("policyBindingId")]
        public Input<string>? PolicyBindingId { get; set; }

        /// <summary>
        /// ID of the object this binding should apply to
        /// </summary>
        [Input("target")]
        public Input<string>? Target { get; set; }

        /// <summary>
        /// Defaults to `30`.
        /// </summary>
        [Input("timeout")]
        public Input<double>? Timeout { get; set; }

        /// <summary>
        /// PK of the user
        /// </summary>
        [Input("user")]
        public Input<double>? User { get; set; }

        public PolicyBindingState()
        {
        }
        public static new PolicyBindingState Empty => new PolicyBindingState();
    }
}
