// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Unifi
{
    [UnifiResourceType("unifi:index/settingNtp:SettingNtp")]
    public partial class SettingNtp : global::Pulumi.CustomResource
    {
        /// <summary>
        /// NTP server configuration mode. Valid values are:
        /// * `auto` - Use NTP servers configured on the controller
        /// * `manual` - Use custom NTP servers specified in this resource
        /// 
        /// When set to `auto`, all NTP server fields will be cleared. When set to `manual`, at least one NTP server must be specified.
        /// </summary>
        [Output("mode")]
        public Output<string> Mode { get; private set; } = null!;

        /// <summary>
        /// Primary NTP server hostname or IP address. Must be a valid hostname (e.g., `pool.ntp.org`) or IPv4 address. Only applicable when `mode` is set to `manual`.
        /// </summary>
        [Output("ntpServer1")]
        public Output<string> NtpServer1 { get; private set; } = null!;

        /// <summary>
        /// Secondary NTP server hostname or IP address. Must be a valid hostname (e.g., `time.google.com`) or IPv4 address. Only applicable when `mode` is set to `manual`.
        /// </summary>
        [Output("ntpServer2")]
        public Output<string> NtpServer2 { get; private set; } = null!;

        /// <summary>
        /// Tertiary NTP server hostname or IP address. Must be a valid hostname or IPv4 address. Only applicable when `mode` is set to `manual`.
        /// </summary>
        [Output("ntpServer3")]
        public Output<string> NtpServer3 { get; private set; } = null!;

        /// <summary>
        /// Quaternary NTP server hostname or IP address. Must be a valid hostname or IPv4 address. Only applicable when `mode` is set to `manual`.
        /// </summary>
        [Output("ntpServer4")]
        public Output<string> NtpServer4 { get; private set; } = null!;

        /// <summary>
        /// The name of the UniFi site where this resource should be applied. If not specified, the default site will be used.
        /// </summary>
        [Output("site")]
        public Output<string> Site { get; private set; } = null!;


        /// <summary>
        /// Create a SettingNtp resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SettingNtp(string name, SettingNtpArgs? args = null, CustomResourceOptions? options = null)
            : base("unifi:index/settingNtp:SettingNtp", name, args ?? new SettingNtpArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private SettingNtp(string name, Input<string> id, SettingNtpState? state = null, CustomResourceOptions? options = null)
            : base("unifi:index/settingNtp:SettingNtp", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SettingNtp resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SettingNtp Get(string name, Input<string> id, SettingNtpState? state = null, CustomResourceOptions? options = null)
        {
            return new SettingNtp(name, id, state, options);
        }
    }

    public sealed class SettingNtpArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// NTP server configuration mode. Valid values are:
        /// * `auto` - Use NTP servers configured on the controller
        /// * `manual` - Use custom NTP servers specified in this resource
        /// 
        /// When set to `auto`, all NTP server fields will be cleared. When set to `manual`, at least one NTP server must be specified.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// Primary NTP server hostname or IP address. Must be a valid hostname (e.g., `pool.ntp.org`) or IPv4 address. Only applicable when `mode` is set to `manual`.
        /// </summary>
        [Input("ntpServer1")]
        public Input<string>? NtpServer1 { get; set; }

        /// <summary>
        /// Secondary NTP server hostname or IP address. Must be a valid hostname (e.g., `time.google.com`) or IPv4 address. Only applicable when `mode` is set to `manual`.
        /// </summary>
        [Input("ntpServer2")]
        public Input<string>? NtpServer2 { get; set; }

        /// <summary>
        /// Tertiary NTP server hostname or IP address. Must be a valid hostname or IPv4 address. Only applicable when `mode` is set to `manual`.
        /// </summary>
        [Input("ntpServer3")]
        public Input<string>? NtpServer3 { get; set; }

        /// <summary>
        /// Quaternary NTP server hostname or IP address. Must be a valid hostname or IPv4 address. Only applicable when `mode` is set to `manual`.
        /// </summary>
        [Input("ntpServer4")]
        public Input<string>? NtpServer4 { get; set; }

        /// <summary>
        /// The name of the UniFi site where this resource should be applied. If not specified, the default site will be used.
        /// </summary>
        [Input("site")]
        public Input<string>? Site { get; set; }

        public SettingNtpArgs()
        {
        }
        public static new SettingNtpArgs Empty => new SettingNtpArgs();
    }

    public sealed class SettingNtpState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// NTP server configuration mode. Valid values are:
        /// * `auto` - Use NTP servers configured on the controller
        /// * `manual` - Use custom NTP servers specified in this resource
        /// 
        /// When set to `auto`, all NTP server fields will be cleared. When set to `manual`, at least one NTP server must be specified.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// Primary NTP server hostname or IP address. Must be a valid hostname (e.g., `pool.ntp.org`) or IPv4 address. Only applicable when `mode` is set to `manual`.
        /// </summary>
        [Input("ntpServer1")]
        public Input<string>? NtpServer1 { get; set; }

        /// <summary>
        /// Secondary NTP server hostname or IP address. Must be a valid hostname (e.g., `time.google.com`) or IPv4 address. Only applicable when `mode` is set to `manual`.
        /// </summary>
        [Input("ntpServer2")]
        public Input<string>? NtpServer2 { get; set; }

        /// <summary>
        /// Tertiary NTP server hostname or IP address. Must be a valid hostname or IPv4 address. Only applicable when `mode` is set to `manual`.
        /// </summary>
        [Input("ntpServer3")]
        public Input<string>? NtpServer3 { get; set; }

        /// <summary>
        /// Quaternary NTP server hostname or IP address. Must be a valid hostname or IPv4 address. Only applicable when `mode` is set to `manual`.
        /// </summary>
        [Input("ntpServer4")]
        public Input<string>? NtpServer4 { get; set; }

        /// <summary>
        /// The name of the UniFi site where this resource should be applied. If not specified, the default site will be used.
        /// </summary>
        [Input("site")]
        public Input<string>? Site { get; set; }

        public SettingNtpState()
        {
        }
        public static new SettingNtpState Empty => new SettingNtpState();
    }
}
