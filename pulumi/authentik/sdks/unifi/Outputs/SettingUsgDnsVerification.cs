// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Unifi.Outputs
{

    [OutputType]
    public sealed class SettingUsgDnsVerification
    {
        /// <summary>
        /// The domain name to use for DNS verification tests. The gateway will query this domain when testing DNS server responses. This should be a reliable domain that is unlikely to change frequently. Required when `setting_preference` is set to `manual`.
        /// </summary>
        public readonly string? Domain;
        /// <summary>
        /// The IP address of the primary trusted DNS server to use for verification. DNS responses will be compared against responses from this server to detect potential DNS spoofing. Required when `setting_preference` is set to `manual`. Must be a valid IPv4 address.
        /// </summary>
        public readonly string? PrimaryDnsServer;
        /// <summary>
        /// The IP address of the secondary trusted DNS server to use for verification. This server will be used if the primary server is unavailable. Optional even when `setting_preference` is set to `manual`. Must be a valid IPv4 address if specified.
        /// </summary>
        public readonly string? SecondaryDnsServer;
        /// <summary>
        /// Determines how DNS verification servers are configured. Valid values are:
        ///   * `auto` - The gateway will automatically select DNS servers for verification
        ///   * `manual` - Use the manually specified `primary_dns_server` and optionally `secondary_dns_server`
        /// 
        /// When set to `manual`, you must also specify `primary_dns_server` and `domain` values.
        /// </summary>
        public readonly string? SettingPreference;

        [OutputConstructor]
        private SettingUsgDnsVerification(
            string? domain,

            string? primaryDnsServer,

            string? secondaryDnsServer,

            string? settingPreference)
        {
            Domain = domain;
            PrimaryDnsServer = primaryDnsServer;
            SecondaryDnsServer = secondaryDnsServer;
            SettingPreference = settingPreference;
        }
    }
}
