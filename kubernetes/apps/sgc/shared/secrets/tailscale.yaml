---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
    name: tailscale-oauth
    annotations:
      reloader.stakater.com/auto: "true"
spec:
    itemPath: vaults/Eris/items/lsrxxwvqgtx2quc5hpuek7u5pi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tailscale-update-token-sa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: tailscale-secret-manager
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tailscale-bind-secret-manager
  namespace: default
subjects:
- kind: ServiceAccount
  name: tailscale-update-token-sa
  namespace: default
roleRef:
  kind: Role
  name: tailscale-secret-manager
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: update-oauth-token-once
spec:
  template:
    spec:
      serviceAccountName: tailscale-update-token-sa
      containers:
      - name: update-token
        image: alpine/k8s:1.32.3@sha256:eec3541331932d8613ce7b3283508063cba7f704302e9b4eda45e49b38a2a0f9
        env:
        - name: OAUTH_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: tailscale-oauth
              key: username
        - name:  OAUTH_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: tailscale-oauth
              key: credential
        command:
        - /bin/sh
        - -c
        - |
          response=$(curl -d "client_id=$OAUTH_CLIENT_ID" -d "client_secret=$OAUTH_CLIENT_SECRET" "https://api.tailscale.com/api/v2/oauth/token")
          access_token=$(echo $response | jq -r '.access_token')
          kubectl create secret generic tailscale-access-token --from-literal=token="$access_token" --dry-run=client -o yaml | kubectl apply -f -
      restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: update-oauth-token
spec:
  schedule: "0 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: tailscale-update-token-sa
          containers:
          - name: update-token
            image: alpine/k8s:1.32.3@sha256:eec3541331932d8613ce7b3283508063cba7f704302e9b4eda45e49b38a2a0f9
            env:
            - name: OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: tailscale-oauth
                  key: username
            - name:  OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: tailscale-oauth
                  key: credential
            command:
            - /bin/sh
            - -c
            - |
              response=$(curl -d "client_id=$OAUTH_CLIENT_ID" -d "client_secret=$OAUTH_CLIENT_SECRET" "https://api.tailscale.com/api/v2/oauth/token")
              access_token=$(echo $response | jq -r '.access_token')
              kubectl create secret generic tailscale-access-token --from-literal=token="$access_token" --dry-run=client -o yaml | kubectl apply -f -
          restartPolicy: OnFailure
