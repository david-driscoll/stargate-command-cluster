// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Unifi
{
    [UnifiResourceType("unifi:index/settingSslInspection:SettingSslInspection")]
    public partial class SettingSslInspection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the UniFi site where this resource should be applied. If not specified, the default site will be used.
        /// </summary>
        [Output("site")]
        public Output<string> Site { get; private set; } = null!;

        /// <summary>
        /// The mode of SSL inspection. Valid values are: `off`, `simple`, or `advanced`.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;


        /// <summary>
        /// Create a SettingSslInspection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SettingSslInspection(string name, SettingSslInspectionArgs args, CustomResourceOptions? options = null)
            : base("unifi:index/settingSslInspection:SettingSslInspection", name, args ?? new SettingSslInspectionArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private SettingSslInspection(string name, Input<string> id, SettingSslInspectionState? state = null, CustomResourceOptions? options = null)
            : base("unifi:index/settingSslInspection:SettingSslInspection", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SettingSslInspection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SettingSslInspection Get(string name, Input<string> id, SettingSslInspectionState? state = null, CustomResourceOptions? options = null)
        {
            return new SettingSslInspection(name, id, state, options);
        }
    }

    public sealed class SettingSslInspectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the UniFi site where this resource should be applied. If not specified, the default site will be used.
        /// </summary>
        [Input("site")]
        public Input<string>? Site { get; set; }

        /// <summary>
        /// The mode of SSL inspection. Valid values are: `off`, `simple`, or `advanced`.
        /// </summary>
        [Input("state", required: true)]
        public Input<string> State { get; set; } = null!;

        public SettingSslInspectionArgs()
        {
        }
        public static new SettingSslInspectionArgs Empty => new SettingSslInspectionArgs();
    }

    public sealed class SettingSslInspectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the UniFi site where this resource should be applied. If not specified, the default site will be used.
        /// </summary>
        [Input("site")]
        public Input<string>? Site { get; set; }

        /// <summary>
        /// The mode of SSL inspection. Valid values are: `off`, `simple`, or `advanced`.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public SettingSslInspectionState()
        {
        }
        public static new SettingSslInspectionState Empty => new SettingSslInspectionState();
    }
}
