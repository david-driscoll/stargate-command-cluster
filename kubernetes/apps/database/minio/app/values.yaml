# This is only a template file for sync purposes.
tenant:
  name: ${CLUSTER_CNAME}
  image:
    repository: quay.io/minio/minio
    tag: RELEASE.2025-02-28T09-55-16Z@sha256:a929054ae025fa7997857cd0e2a2e3029238e31ad89877326dc032f4c1a14259
    pullPolicy: IfNotPresent

  configSecret:
    name: minio-admin-secret
    existingSecret: true

  poolsMetadata:
    ###
    # Specify `annotations <https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/>`__ to associate to Tenant pods.
    annotations: { }
    ###
    # Specify `labels <https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/>`__ to associate to Tenant pods.
    labels: { }
  pools:
    - servers: 4
      name: minio
      volumesPerServer: 2
      size: 12Gi
      storageClassName: longhorn
      volumeClaimTemplate:
        metadata:
          name: data
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        runAsNonRoot: true
      containerSecurityContext:
        runAsUser: 568
        runAsGroup: 568
        runAsNonRoot: true
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault
  ###
  # Configures a Prometheus-compatible scraping endpoint at the specified port.
  metrics:
    enabled: true
    port: 9000
    protocol: http
  certificate:
    requestAutoCert: true
  features:
    bucketDNS: true
    enableSFTP: true
  users:
    - cluster-user
  exposeServices:
    minio: true
    console: true
  prometheusOperator: true
  ###
  # Add environment variables to be set in MinIO container (https://github.com/minio/minio/tree/master/docs/config)
  env: [ ]
ingress:
  api:
    enabled: true
    ingressClassName: internal
    annotations:
      reloader.stakater.com/auto: "true"
      external-dns.alpha.kubernetes.io/target: "${INTERNAL_DOMAIN}"
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      # traefik.ingress.kubernetes.io/router.middlewares: TODO?
    host: s3.${CLUSTER_DOMAIN}
    path: /
    pathType: Prefix
  sss:
    enabled: true
    ingressClassName: internal
    annotations:
      reloader.stakater.com/auto: "true"
      external-dns.alpha.kubernetes.io/target: "${INTERNAL_DOMAIN}"
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.middlewares: network-strip-query-string@kubernetescrd
    host: sss.${CLUSTER_DOMAIN}
    path: /
    pathType: Prefix
  console:
    enabled: true
    ingressClassName: internal
    annotations:
      reloader.stakater.com/auto: "true"
      external-dns.alpha.kubernetes.io/target: "${INTERNAL_DOMAIN}"
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      # traefik.ingress.kubernetes.io/router.middlewares: TODO?
    host: minio.${CLUSTER_DOMAIN}
    path: /
    pathType: Prefix
