// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Authentik
{
    public static class GetSource
    {
        public static Task<GetSourceResult> InvokeAsync(GetSourceArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSourceResult>("authentik:index/getSource:getSource", args ?? new GetSourceArgs(), options.WithDefaults(), Utilities.PackageParameterization());

        public static Output<GetSourceResult> Invoke(GetSourceInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSourceResult>("authentik:index/getSource:getSource", args ?? new GetSourceInvokeArgs(), options.WithDefaults());

        public static Output<GetSourceResult> Invoke(GetSourceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSourceResult>("authentik:index/getSource:getSource", args ?? new GetSourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSourceArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("managed")]
        public string? Managed { get; set; }

        [Input("slug")]
        public string? Slug { get; set; }

        public GetSourceArgs()
        {
        }
        public static new GetSourceArgs Empty => new GetSourceArgs();
    }

    public sealed class GetSourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("managed")]
        public Input<string>? Managed { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        public GetSourceInvokeArgs()
        {
        }
        public static new GetSourceInvokeArgs Empty => new GetSourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetSourceResult
    {
        public readonly string Id;
        public readonly string Managed;
        public readonly string Name;
        public readonly string Slug;
        public readonly string Uuid;

        [OutputConstructor]
        private GetSourceResult(
            string id,

            string managed,

            string name,

            string slug,

            string uuid)
        {
            Id = id;
            Managed = managed;
            Name = name;
            Slug = slug;
            Uuid = uuid;
        }
    }
}
