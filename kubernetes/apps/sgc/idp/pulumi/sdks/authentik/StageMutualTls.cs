// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Authentik
{
    [AuthentikResourceType("authentik:index/stageMutualTls:StageMutualTls")]
    public partial class StageMutualTls : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Allowed values: - `subject` - `common_name` - `email` Defaults to `email`.
        /// </summary>
        [Output("certAttribute")]
        public Output<string?> CertAttribute { get; private set; } = null!;

        [Output("certificateAuthorities")]
        public Output<ImmutableArray<string>> CertificateAuthorities { get; private set; } = null!;

        /// <summary>
        /// Allowed values: - `optional` - `required` Defaults to `optional`.
        /// </summary>
        [Output("mode")]
        public Output<string?> Mode { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("stageMutualTlsId")]
        public Output<string> StageMutualTlsId { get; private set; } = null!;

        /// <summary>
        /// Allowed values: - `username` - `email` Defaults to `email`.
        /// </summary>
        [Output("userAttribute")]
        public Output<string?> UserAttribute { get; private set; } = null!;


        /// <summary>
        /// Create a StageMutualTls resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StageMutualTls(string name, StageMutualTlsArgs? args = null, CustomResourceOptions? options = null)
            : base("authentik:index/stageMutualTls:StageMutualTls", name, args ?? new StageMutualTlsArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private StageMutualTls(string name, Input<string> id, StageMutualTlsState? state = null, CustomResourceOptions? options = null)
            : base("authentik:index/stageMutualTls:StageMutualTls", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StageMutualTls resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StageMutualTls Get(string name, Input<string> id, StageMutualTlsState? state = null, CustomResourceOptions? options = null)
        {
            return new StageMutualTls(name, id, state, options);
        }
    }

    public sealed class StageMutualTlsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Allowed values: - `subject` - `common_name` - `email` Defaults to `email`.
        /// </summary>
        [Input("certAttribute")]
        public Input<string>? CertAttribute { get; set; }

        [Input("certificateAuthorities")]
        private InputList<string>? _certificateAuthorities;
        public InputList<string> CertificateAuthorities
        {
            get => _certificateAuthorities ?? (_certificateAuthorities = new InputList<string>());
            set => _certificateAuthorities = value;
        }

        /// <summary>
        /// Allowed values: - `optional` - `required` Defaults to `optional`.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("stageMutualTlsId")]
        public Input<string>? StageMutualTlsId { get; set; }

        /// <summary>
        /// Allowed values: - `username` - `email` Defaults to `email`.
        /// </summary>
        [Input("userAttribute")]
        public Input<string>? UserAttribute { get; set; }

        public StageMutualTlsArgs()
        {
        }
        public static new StageMutualTlsArgs Empty => new StageMutualTlsArgs();
    }

    public sealed class StageMutualTlsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Allowed values: - `subject` - `common_name` - `email` Defaults to `email`.
        /// </summary>
        [Input("certAttribute")]
        public Input<string>? CertAttribute { get; set; }

        [Input("certificateAuthorities")]
        private InputList<string>? _certificateAuthorities;
        public InputList<string> CertificateAuthorities
        {
            get => _certificateAuthorities ?? (_certificateAuthorities = new InputList<string>());
            set => _certificateAuthorities = value;
        }

        /// <summary>
        /// Allowed values: - `optional` - `required` Defaults to `optional`.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("stageMutualTlsId")]
        public Input<string>? StageMutualTlsId { get; set; }

        /// <summary>
        /// Allowed values: - `username` - `email` Defaults to `email`.
        /// </summary>
        [Input("userAttribute")]
        public Input<string>? UserAttribute { get; set; }

        public StageMutualTlsState()
        {
        }
        public static new StageMutualTlsState Empty => new StageMutualTlsState();
    }
}
