// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Truenas
{
    public static class GetZvol
    {
        public static Task<GetZvolResult> InvokeAsync(GetZvolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZvolResult>("truenas:index/getZvol:getZvol", args ?? new GetZvolArgs(), options.WithDefaults(), Utilities.PackageParameterization());

        public static Output<GetZvolResult> Invoke(GetZvolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZvolResult>("truenas:index/getZvol:getZvol", args ?? new GetZvolInvokeArgs(), options.WithDefaults());

        public static Output<GetZvolResult> Invoke(GetZvolInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZvolResult>("truenas:index/getZvol:getZvol", args ?? new GetZvolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZvolArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("zvolId", required: true)]
        public string ZvolId { get; set; } = null!;

        public GetZvolArgs()
        {
        }
        public static new GetZvolArgs Empty => new GetZvolArgs();
    }

    public sealed class GetZvolInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("zvolId", required: true)]
        public Input<string> ZvolId { get; set; } = null!;

        public GetZvolInvokeArgs()
        {
        }
        public static new GetZvolInvokeArgs Empty => new GetZvolInvokeArgs();
    }


    [OutputType]
    public sealed class GetZvolResult
    {
        public readonly string Blocksize;
        public readonly string Comments;
        public readonly string Compression;
        public readonly double Copies;
        public readonly string Deduplication;
        public readonly bool Encrypted;
        public readonly string EncryptionAlgorithm;
        public readonly string EncryptionRoot;
        public readonly string Id;
        public readonly string KeyFormat;
        public readonly bool KeyLoaded;
        public readonly bool Locked;
        public readonly string Name;
        public readonly string Parent;
        public readonly double Pbkdf2iters;
        public readonly string Pool;
        public readonly string Readonly;
        public readonly double RefReservation;
        public readonly double Reservation;
        public readonly string Sync;
        public readonly double Volsize;
        public readonly string ZvolId;

        [OutputConstructor]
        private GetZvolResult(
            string blocksize,

            string comments,

            string compression,

            double copies,

            string deduplication,

            bool encrypted,

            string encryptionAlgorithm,

            string encryptionRoot,

            string id,

            string keyFormat,

            bool keyLoaded,

            bool locked,

            string name,

            string parent,

            double pbkdf2iters,

            string pool,

            string @readonly,

            double refReservation,

            double reservation,

            string sync,

            double volsize,

            string zvolId)
        {
            Blocksize = blocksize;
            Comments = comments;
            Compression = compression;
            Copies = copies;
            Deduplication = deduplication;
            Encrypted = encrypted;
            EncryptionAlgorithm = encryptionAlgorithm;
            EncryptionRoot = encryptionRoot;
            Id = id;
            KeyFormat = keyFormat;
            KeyLoaded = keyLoaded;
            Locked = locked;
            Name = name;
            Parent = parent;
            Pbkdf2iters = pbkdf2iters;
            Pool = pool;
            Readonly = @readonly;
            RefReservation = refReservation;
            Reservation = reservation;
            Sync = sync;
            Volsize = volsize;
            ZvolId = zvolId;
        }
    }
}
