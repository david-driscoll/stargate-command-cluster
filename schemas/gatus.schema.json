{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://gatus.io/schemas/config.json",
  "title": "Gatus Configuration",
  "description": "Configuration schema for Gatus - Automated developer-oriented status page",
  "type": "object",
  "properties": {
    "debug": {
      "type": "boolean",
      "description": "Whether to enable debug logs",
      "default": false
    },
    "metrics": {
      "type": "boolean",
      "description": "Whether to expose metrics at /metrics",
      "default": false
    },
    "storage": {
      "type": "object",
      "description": "Storage configuration for persisting endpoint results",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["memory", "postgres", "sqlite"],
          "description": "Type of storage to use"
        },
        "path": {
          "type": "string",
          "description": "Path for sqlite database file"
        },
        "caching": {
          "type": "boolean",
          "description": "Whether to enable caching"
        }
      }
    },
    "web": {
      "type": "object",
      "description": "Web server configuration",
      "properties": {
        "address": {
          "type": "string",
          "description": "Address to listen on (e.g., 0.0.0.0:8080)",
          "default": "0.0.0.0:8080"
        },
        "port": {
          "type": "integer",
          "description": "Port to listen on",
          "default": 8080
        },
        "read-buffer-size": {
          "type": "integer",
          "description": "ReadBufferSize parameter for fasthttp server"
        },
        "tls": {
          "type": "object",
          "description": "TLS configuration for the web server",
          "properties": {
            "certificate-file": {
              "type": "string",
              "description": "Path to certificate file"
            },
            "private-key-file": {
              "type": "string",
              "description": "Path to private key file"
            }
          },
          "required": ["certificate-file", "private-key-file"]
        }
      }
    },
    "ui": {
      "type": "object",
      "description": "UI customization options",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the status page",
          "default": "Health Dashboard"
        },
        "description": {
          "type": "string",
          "description": "Description of the status page"
        },
        "header": {
          "type": "string",
          "description": "Header text for the status page"
        },
        "logo": {
          "type": "string",
          "description": "URL or path to logo image"
        },
        "link": {
          "type": "string",
          "description": "Link for the logo/header"
        },
        "buttons": {
          "type": "array",
          "description": "Custom buttons to display",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Button text"
              },
              "link": {
                "type": "string",
                "description": "Button URL"
              }
            },
            "required": ["name", "link"]
          }
        }
      }
    },
    "security": {
      "type": "object",
      "description": "Security configuration",
      "properties": {
        "basic": {
          "type": "object",
          "description": "Basic authentication configuration",
          "properties": {
            "username": {
              "type": "string",
              "description": "Username for basic auth"
            },
            "password-bcrypt-base64": {
              "type": "string",
              "description": "Bcrypt hashed password encoded in base64"
            }
          },
          "required": ["username", "password-bcrypt-base64"]
        },
        "oidc": {
          "type": "object",
          "description": "OIDC authentication configuration",
          "properties": {
            "issuer-url": {
              "type": "string",
              "description": "OIDC issuer URL"
            },
            "redirect-url": {
              "type": "string",
              "description": "Redirect URL after authentication"
            },
            "client-id": {
              "type": "string",
              "description": "OIDC client ID"
            },
            "client-secret": {
              "type": "string",
              "description": "OIDC client secret"
            },
            "scopes": {
              "type": "array",
              "description": "OIDC scopes to request",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "issuer-url",
            "redirect-url",
            "client-id",
            "client-secret"
          ]
        }
      }
    },
    "alerting": {
      "type": "object",
      "description": "Alerting provider configurations",
      "properties": {
        "slack": {
          "$ref": "#/$defs/slackAlert"
        },
        "discord": {
          "$ref": "#/$defs/discordAlert"
        },
        "telegram": {
          "$ref": "#/$defs/telegramAlert"
        },
        "mattermost": {
          "$ref": "#/$defs/mattermostAlert"
        },
        "teams": {
          "$ref": "#/$defs/teamsAlert"
        },
        "teams-workflow": {
          "$ref": "#/$defs/teamsWorkflowAlert"
        },
        "pagerduty": {
          "$ref": "#/$defs/pagerdutyAlert"
        },
        "twilio": {
          "$ref": "#/$defs/twilioAlert"
        },
        "email": {
          "$ref": "#/$defs/emailAlert"
        },
        "gotify": {
          "$ref": "#/$defs/gotifyAlert"
        },
        "ntfy": {
          "$ref": "#/$defs/ntfyAlert"
        },
        "pushover": {
          "$ref": "#/$defs/pushoverAlert"
        },
        "opsgenie": {
          "$ref": "#/$defs/opsgenieAlert"
        },
        "matrix": {
          "$ref": "#/$defs/matrixAlert"
        },
        "custom": {
          "$ref": "#/$defs/customAlert"
        },
        "github": {
          "$ref": "#/$defs/githubAlert"
        },
        "gitlab": {
          "$ref": "#/$defs/gitlabAlert"
        },
        "googlechat": {
          "$ref": "#/$defs/googlechatAlert"
        },
        "aws-ses": {
          "$ref": "#/$defs/awsSesAlert"
        },
        "datadog": {
          "$ref": "#/$defs/datadogAlert"
        },
        "gitea": {
          "$ref": "#/$defs/giteaAlert"
        }
      }
    },
    "connectivity": {
      "type": "object",
      "description": "Global connectivity settings for checker",
      "properties": {
        "checker": {
          "type": "object",
          "properties": {
            "target": {
              "type": "string",
              "description": "Endpoint to check connectivity against"
            },
            "interval": {
              "type": "string",
              "description": "Interval between connectivity checks",
              "default": "60s"
            }
          }
        }
      }
    },
    "maintenance": {
      "type": "object",
      "description": "Maintenance windows configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether maintenance mode is enabled"
        },
        "start": {
          "type": "string",
          "description": "Start time in RFC3339 format"
        },
        "duration": {
          "type": "string",
          "description": "Duration of maintenance window"
        },
        "every": {
          "type": "array",
          "description": "Days of week for recurring maintenance",
          "items": {
            "type": "string",
            "enum": [
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
              "Sunday"
            ]
          }
        }
      }
    },
    "disable-monitoring-lock": {
      "type": "boolean",
      "description": "Whether to disable the monitoring lock",
      "default": false
    },
    "skip-invalid-config-update": {
      "type": "boolean",
      "description": "Whether to skip invalid config updates",
      "default": false
    },
    "endpoints": {
      "type": "array",
      "description": "List of endpoints to monitor",
      "items": {
        "$ref": "#/$defs/endpoint"
      }
    },
    "external-endpoints": {
      "type": "array",
      "description": "List of external endpoints (push-based monitoring)",
      "items": {
        "$ref": "#/$defs/externalEndpoint"
      }
    },
    "suites": {
      "type": "array",
      "description": "List of endpoint suites (ALPHA feature)",
      "items": {
        "$ref": "#/$defs/suite"
      }
    }
  },
  "$defs": {
    "endpoint": {
      "type": "object",
      "description": "Configuration for a monitored endpoint",
      "required": ["name", "url"],
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the endpoint is enabled",
          "default": true
        },
        "name": {
          "type": "string",
          "description": "Name of the endpoint"
        },
        "group": {
          "type": "string",
          "description": "Group to which the endpoint belongs"
        },
        "url": {
          "type": "string",
          "description": "URL to monitor (supports http, https, tcp, udp, sctp, icmp, ws, wss, ssh, dns, starttls)"
        },
        "method": {
          "type": "string",
          "description": "HTTP method to use",
          "enum": ["GET", "POST", "PUT", "DELETE", "PATCH", "HEAD", "OPTIONS"],
          "default": "GET"
        },
        "conditions": {
          "type": "array",
          "description": "List of conditions to evaluate",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "interval": {
          "type": "string",
          "description": "Duration between each check",
          "default": "60s",
          "pattern": "^[0-9]+(ns|us|µs|ms|s|m|h)$"
        },
        "timeout": {
          "type": "string",
          "description": "Maximum duration before timing out",
          "default": "10s",
          "pattern": "^[0-9]+(ns|us|µs|ms|s|m|h)$"
        },
        "client": {
          "$ref": "#/$defs/client"
        },
        "alerts": {
          "type": "array",
          "description": "Alerts to trigger on failure",
          "items": {
            "$ref": "#/$defs/alert"
          }
        },
        "body": {
          "type": "string",
          "description": "Request body"
        },
        "headers": {
          "type": "object",
          "description": "HTTP headers to send",
          "additionalProperties": {
            "type": "string"
          }
        },
        "graphql": {
          "type": "boolean",
          "description": "Whether this is a GraphQL query",
          "default": false
        },
        "dns": {
          "$ref": "#/$defs/dns"
        },
        "ssh": {
          "$ref": "#/$defs/ssh"
        },
        "ui": {
          "type": "object",
          "description": "UI-specific configuration",
          "properties": {
            "hide-hostname": {
              "type": "boolean",
              "description": "Whether to hide the hostname in the UI"
            },
            "hide-url": {
              "type": "boolean",
              "description": "Whether to hide the URL in the UI"
            },
            "hide-conditions": {
              "type": "boolean",
              "description": "Whether to hide conditions in the UI"
            },
            "dont-resolve-failed-conditions": {
              "type": "boolean",
              "description": "Whether to not resolve failed conditions"
            },
            "badge": {
              "type": "object",
              "properties": {
                "response-time": {
                  "type": "array",
                  "description": "Thresholds for response time badge",
                  "items": {
                    "type": "integer"
                  },
                  "minItems": 5,
                  "maxItems": 5
                }
              }
            }
          }
        },
        "disable-monitoring-lock": {
          "type": "boolean",
          "description": "Whether to disable the monitoring lock for this endpoint"
        }
      }
    },
    "externalEndpoint": {
      "type": "object",
      "description": "Configuration for an external (push-based) endpoint",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the external endpoint"
        },
        "group": {
          "type": "string",
          "description": "Group to which the endpoint belongs"
        },
        "token": {
          "type": "string",
          "description": "Authentication token for push endpoint"
        },
        "alerts": {
          "type": "array",
          "description": "Alerts to trigger on failure",
          "items": {
            "$ref": "#/$defs/alert"
          }
        }
      }
    },
    "suite": {
      "type": "object",
      "description": "Configuration for a suite of endpoints (ALPHA)",
      "required": ["name", "endpoints"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the suite"
        },
        "endpoints": {
          "type": "array",
          "description": "Endpoints in this suite",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "client": {
      "type": "object",
      "description": "Client configuration for HTTP requests",
      "properties": {
        "insecure": {
          "type": "boolean",
          "description": "Whether to skip TLS verification",
          "default": false
        },
        "ignore-redirect": {
          "type": "boolean",
          "description": "Whether to ignore redirects",
          "default": false
        },
        "timeout": {
          "type": "string",
          "description": "Client timeout",
          "pattern": "^[0-9]+(ns|us|µs|ms|s|m|h)$"
        },
        "dns-resolver": {
          "type": "string",
          "description": "DNS resolver to use (e.g., tcp://8.8.8.8:53)"
        },
        "oauth2": {
          "type": "object",
          "description": "OAuth2 configuration",
          "properties": {
            "token-url": {
              "type": "string",
              "description": "OAuth2 token URL"
            },
            "client-id": {
              "type": "string",
              "description": "OAuth2 client ID"
            },
            "client-secret": {
              "type": "string",
              "description": "OAuth2 client secret"
            },
            "scopes": {
              "type": "array",
              "description": "OAuth2 scopes",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["token-url", "client-id", "client-secret"]
        },
        "identity-aware-proxy": {
          "type": "object",
          "description": "GCP Identity-Aware Proxy configuration",
          "properties": {
            "audience": {
              "type": "string",
              "description": "IAP audience"
            }
          },
          "required": ["audience"]
        },
        "proxy-url": {
          "type": "string",
          "description": "Proxy URL for requests"
        },
        "network": {
          "type": "string",
          "description": "Network to use (tcp4 or tcp6)",
          "enum": ["tcp4", "tcp6"]
        }
      }
    },
    "dns": {
      "type": "object",
      "description": "DNS query configuration",
      "properties": {
        "query-type": {
          "type": "string",
          "description": "DNS query type",
          "enum": [
            "A",
            "AAAA",
            "CNAME",
            "MX",
            "NS",
            "TXT",
            "SOA",
            "PTR",
            "SRV",
            "CAA"
          ]
        },
        "query-name": {
          "type": "string",
          "description": "DNS query name"
        }
      },
      "required": ["query-type", "query-name"]
    },
    "ssh": {
      "type": "object",
      "description": "SSH configuration",
      "properties": {
        "username": {
          "type": "string",
          "description": "SSH username"
        },
        "password": {
          "type": "string",
          "description": "SSH password"
        },
        "private-key": {
          "type": "string",
          "description": "SSH private key"
        }
      },
      "required": ["username"]
    },
    "alert": {
      "type": "object",
      "description": "Alert configuration",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of alert provider",
          "enum": [
            "slack",
            "discord",
            "telegram",
            "mattermost",
            "teams",
            "teams-workflow",
            "pagerduty",
            "twilio",
            "email",
            "gotify",
            "ntfy",
            "pushover",
            "opsgenie",
            "matrix",
            "custom",
            "github",
            "gitlab",
            "googlechat",
            "aws-ses",
            "datadog",
            "gitea",
            "messagebird",
            "vonage",
            "rocketchat",
            "webex",
            "zulip",
            "ifttt",
            "signl4",
            "ilert",
            "incident",
            "line",
            "sendgrid",
            "splunk",
            "squadcast",
            "zapier",
            "n8n",
            "newrelic",
            "homeassistant",
            "plivo",
            "signal"
          ]
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether the alert is enabled",
          "default": true
        },
        "failure-threshold": {
          "type": "integer",
          "description": "Number of failures before triggering",
          "default": 3,
          "minimum": 1
        },
        "success-threshold": {
          "type": "integer",
          "description": "Number of successes before resolving",
          "default": 2,
          "minimum": 1
        },
        "send-on-resolved": {
          "type": "boolean",
          "description": "Whether to send an alert when resolved",
          "default": false
        },
        "description": {
          "type": "string",
          "description": "Custom alert description"
        }
      },
      "required": ["type"]
    },
    "slackAlert": {
      "type": "object",
      "properties": {
        "webhook-url": {
          "type": "string",
          "description": "Slack webhook URL"
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["webhook-url"]
    },
    "discordAlert": {
      "type": "object",
      "properties": {
        "webhook-url": {
          "type": "string",
          "description": "Discord webhook URL"
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["webhook-url"]
    },
    "telegramAlert": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "description": "Telegram bot token"
        },
        "id": {
          "type": "string",
          "description": "Telegram chat ID"
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["token", "id"]
    },
    "mattermostAlert": {
      "type": "object",
      "properties": {
        "webhook-url": {
          "type": "string",
          "description": "Mattermost webhook URL"
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["webhook-url"]
    },
    "teamsAlert": {
      "type": "object",
      "properties": {
        "webhook-url": {
          "type": "string",
          "description": "Microsoft Teams webhook URL (deprecated)"
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["webhook-url"]
    },
    "teamsWorkflowAlert": {
      "type": "object",
      "properties": {
        "webhook-url": {
          "type": "string",
          "description": "Microsoft Teams workflow webhook URL"
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["webhook-url"]
    },
    "pagerdutyAlert": {
      "type": "object",
      "properties": {
        "integration-key": {
          "type": "string",
          "description": "PagerDuty integration key"
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["integration-key"]
    },
    "twilioAlert": {
      "type": "object",
      "properties": {
        "sid": {
          "type": "string",
          "description": "Twilio account SID"
        },
        "token": {
          "type": "string",
          "description": "Twilio auth token"
        },
        "from": {
          "type": "string",
          "description": "Twilio phone number (from)"
        },
        "to": {
          "type": "string",
          "description": "Destination phone number"
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["sid", "token", "from", "to"]
    },
    "emailAlert": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "description": "Sender email address"
        },
        "username": {
          "type": "string",
          "description": "SMTP username"
        },
        "password": {
          "type": "string",
          "description": "SMTP password"
        },
        "host": {
          "type": "string",
          "description": "SMTP host"
        },
        "port": {
          "type": "integer",
          "description": "SMTP port"
        },
        "to": {
          "type": "string",
          "description": "Recipient email address"
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["from", "host", "port", "to"]
    },
    "gotifyAlert": {
      "type": "object",
      "properties": {
        "server-url": {
          "type": "string",
          "description": "Gotify server URL"
        },
        "token": {
          "type": "string",
          "description": "Gotify application token"
        },
        "priority": {
          "type": "integer",
          "description": "Message priority",
          "default": 5
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["server-url", "token"]
    },
    "ntfyAlert": {
      "type": "object",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Ntfy topic"
        },
        "url": {
          "type": "string",
          "description": "Ntfy server URL",
          "default": "https://ntfy.sh"
        },
        "token": {
          "type": "string",
          "description": "Ntfy access token"
        },
        "priority": {
          "type": "integer",
          "description": "Message priority (1-5)",
          "minimum": 1,
          "maximum": 5,
          "default": 3
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["topic"]
    },
    "pushoverAlert": {
      "type": "object",
      "properties": {
        "application-token": {
          "type": "string",
          "description": "Pushover application token"
        },
        "user-key": {
          "type": "string",
          "description": "Pushover user key"
        },
        "priority": {
          "type": "integer",
          "description": "Message priority",
          "default": 0
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["application-token", "user-key"]
    },
    "opsgenieAlert": {
      "type": "object",
      "properties": {
        "api-key": {
          "type": "string",
          "description": "Opsgenie API key"
        },
        "priority": {
          "type": "string",
          "description": "Alert priority",
          "enum": ["P1", "P2", "P3", "P4", "P5"],
          "default": "P3"
        },
        "source": {
          "type": "string",
          "description": "Alert source"
        },
        "entity": {
          "type": "string",
          "description": "Alert entity"
        },
        "alias": {
          "type": "string",
          "description": "Alert alias"
        },
        "description": {
          "type": "string",
          "description": "Alert description"
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["api-key"]
    },
    "matrixAlert": {
      "type": "object",
      "properties": {
        "server-url": {
          "type": "string",
          "description": "Matrix homeserver URL"
        },
        "access-token": {
          "type": "string",
          "description": "Matrix access token"
        },
        "internal-room-id": {
          "type": "string",
          "description": "Matrix room ID"
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["server-url", "access-token", "internal-room-id"]
    },
    "customAlert": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Custom webhook URL"
        },
        "method": {
          "type": "string",
          "description": "HTTP method",
          "enum": ["GET", "POST", "PUT", "PATCH", "DELETE"],
          "default": "POST"
        },
        "body": {
          "type": "string",
          "description": "Request body template"
        },
        "headers": {
          "type": "object",
          "description": "HTTP headers",
          "additionalProperties": {
            "type": "string"
          }
        },
        "client": {
          "$ref": "#/$defs/client"
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["url"]
    },
    "githubAlert": {
      "type": "object",
      "properties": {
        "repository-url": {
          "type": "string",
          "description": "GitHub repository URL"
        },
        "token": {
          "type": "string",
          "description": "GitHub personal access token"
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["repository-url", "token"]
    },
    "gitlabAlert": {
      "type": "object",
      "properties": {
        "webhook-url": {
          "type": "string",
          "description": "GitLab webhook URL"
        },
        "token": {
          "type": "string",
          "description": "GitLab token"
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["webhook-url"]
    },
    "googlechatAlert": {
      "type": "object",
      "properties": {
        "webhook-url": {
          "type": "string",
          "description": "Google Chat webhook URL"
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["webhook-url"]
    },
    "awsSesAlert": {
      "type": "object",
      "properties": {
        "access-key-id": {
          "type": "string",
          "description": "AWS access key ID"
        },
        "secret-access-key": {
          "type": "string",
          "description": "AWS secret access key"
        },
        "region": {
          "type": "string",
          "description": "AWS region"
        },
        "from": {
          "type": "string",
          "description": "Sender email address"
        },
        "to": {
          "type": "string",
          "description": "Recipient email address"
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["access-key-id", "secret-access-key", "region", "from", "to"]
    },
    "datadogAlert": {
      "type": "object",
      "properties": {
        "api-key": {
          "type": "string",
          "description": "Datadog API key"
        },
        "application-key": {
          "type": "string",
          "description": "Datadog application key"
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["api-key", "application-key"]
    },
    "giteaAlert": {
      "type": "object",
      "properties": {
        "repository-url": {
          "type": "string",
          "description": "Gitea repository URL"
        },
        "token": {
          "type": "string",
          "description": "Gitea access token"
        },
        "default-alert": {
          "$ref": "#/$defs/alert"
        }
      },
      "required": ["repository-url", "token"]
    }
  }
}
