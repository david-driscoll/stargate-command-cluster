// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tailscale
{
    public static class GetUser
    {
        public static Task<GetUserResult> InvokeAsync(GetUserArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserResult>("tailscale:index/getUser:getUser", args ?? new GetUserArgs(), options.WithDefaults(), Utilities.PackageParameterization());

        public static Output<GetUserResult> Invoke(GetUserInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserResult>("tailscale:index/getUser:getUser", args ?? new GetUserInvokeArgs(), options.WithDefaults());

        public static Output<GetUserResult> Invoke(GetUserInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserResult>("tailscale:index/getUser:getUser", args ?? new GetUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("loginName")]
        public string? LoginName { get; set; }

        public GetUserArgs()
        {
        }
        public static new GetUserArgs Empty => new GetUserArgs();
    }

    public sealed class GetUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("loginName")]
        public Input<string>? LoginName { get; set; }

        public GetUserInvokeArgs()
        {
        }
        public static new GetUserInvokeArgs Empty => new GetUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserResult
    {
        public readonly string Created;
        public readonly bool CurrentlyConnected;
        public readonly double DeviceCount;
        public readonly string DisplayName;
        public readonly string? Id;
        public readonly string LastSeen;
        public readonly string? LoginName;
        public readonly string ProfilePicUrl;
        public readonly string Role;
        public readonly string Status;
        public readonly string TailnetId;
        public readonly string Type;

        [OutputConstructor]
        private GetUserResult(
            string created,

            bool currentlyConnected,

            double deviceCount,

            string displayName,

            string? id,

            string lastSeen,

            string? loginName,

            string profilePicUrl,

            string role,

            string status,

            string tailnetId,

            string type)
        {
            Created = created;
            CurrentlyConnected = currentlyConnected;
            DeviceCount = deviceCount;
            DisplayName = displayName;
            Id = id;
            LastSeen = lastSeen;
            LoginName = loginName;
            ProfilePicUrl = profilePicUrl;
            Role = role;
            Status = status;
            TailnetId = tailnetId;
            Type = type;
        }
    }
}
