// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Tailscale.Client.Models
{
    /// <summary>
    /// clientConnectivity provides a report on the device&apos;s current physical network conditions.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Device_clientConnectivity : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Identifies features supported by the client.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Tailscale.Client.Models.Device_clientConnectivity_clientSupports? ClientSupports { get; set; }
#nullable restore
#else
        public global::Tailscale.Client.Models.Device_clientConnectivity_clientSupports ClientSupports { get; set; }
#endif
        /// <summary>Client&apos;s magicsock UDP IP:port endpoints (IPv4 or IPv6).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Endpoints { get; set; }
#nullable restore
#else
        public List<string> Endpoints { get; set; }
#endif
        /// <summary>Map of DERP server locations and their current latency.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Tailscale.Client.Models.Device_clientConnectivity_latency? Latency { get; set; }
#nullable restore
#else
        public global::Tailscale.Client.Models.Device_clientConnectivity_latency Latency { get; set; }
#endif
        /// <summary>&apos;true&apos; if the host&apos;s NAT mappings vary based on the destination IP.</summary>
        public bool? MappingVariesByDestIP { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Tailscale.Client.Models.Device_clientConnectivity"/> and sets the default values.
        /// </summary>
        public Device_clientConnectivity()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>DoUpdate <see cref="global::Tailscale.Client.Models.Device_clientConnectivity"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Tailscale.Client.Models.Device_clientConnectivity CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Tailscale.Client.Models.Device_clientConnectivity();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>DoUpdate IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "clientSupports", n => { ClientSupports = n.GetObjectValue<global::Tailscale.Client.Models.Device_clientConnectivity_clientSupports>(global::Tailscale.Client.Models.Device_clientConnectivity_clientSupports.CreateFromDiscriminatorValue); } },
                { "endpoints", n => { Endpoints = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "latency", n => { Latency = n.GetObjectValue<global::Tailscale.Client.Models.Device_clientConnectivity_latency>(global::Tailscale.Client.Models.Device_clientConnectivity_latency.CreateFromDiscriminatorValue); } },
                { "mappingVariesByDestIP", n => { MappingVariesByDestIP = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Tailscale.Client.Models.Device_clientConnectivity_clientSupports>("clientSupports", ClientSupports);
            writer.WriteCollectionOfPrimitiveValues<string>("endpoints", Endpoints);
            writer.WriteObjectValue<global::Tailscale.Client.Models.Device_clientConnectivity_latency>("latency", Latency);
            writer.WriteBoolValue("mappingVariesByDestIP", MappingVariesByDestIP);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
