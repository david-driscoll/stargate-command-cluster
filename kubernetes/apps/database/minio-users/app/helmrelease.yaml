---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.1.2/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: minio-users-d9594bb2e130
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  interval: 1h
  timeout: 5m
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: 7
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 7
      strategy: rollback
  rollback:
    force: true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  values:
    controllers:
      minio-users:
        type: job
        job:
          backoffLimit: 100
          suspend: false
          ttlSecondsAfterFinished: 600
        containers: &job
          job:
            image:
              repository: minio/mc
              tag: RELEASE.2025-05-21T01-59-54Z.hotfix.e98f1ead@sha256:cf700affaa5cddcea9371fd4c961521fff2baff4b90333c4bda2df61bf5e6692
              pullPolicy: IfNotPresent
            command:
            - /bin/sh
            - -c
            - >-
              mc alias set "$MC_ALIAS" "$MINIO_ENDPOINT" "$MINIO_ACCESS_KEY" "$MINIO_SECRET_KEY"

              mc mb -p "$MC_ALIAS/authentik"

              mc mb -p "$MC_ALIAS/authentik/postgres"

              mc mb -p "$MC_ALIAS/backrest"

              mc mb -p "$MC_ALIAS/iris"

              mc mb -p "$MC_ALIAS/tivi-cache"

              mc mb -p "$MC_ALIAS/tivi-results"

              mc admin user add "$MC_ALIAS" "$MINIO_USER_CLUSTER_USER" "$MINIO_PASSWORD_CLUSTER_USER"

              mc admin policy attach "$MC_ALIAS" --user "$MINIO_USER_CLUSTER_USER" consoleAdmin

              mc admin user add "$MC_ALIAS" "$MINIO_USER_AUTHENTIK" "$MINIO_PASSWORD_AUTHENTIK"

              mc admin policy attach "$MC_ALIAS" --user "$MINIO_USER_AUTHENTIK" readwrite

              mc admin user add "$MC_ALIAS" "$MINIO_USER_BACKREST" "$MINIO_PASSWORD_BACKREST"

              mc admin policy attach "$MC_ALIAS" --user "$MINIO_USER_BACKREST" readwrite

              mc admin user add "$MC_ALIAS" "$MINIO_USER_TIVI_SYNC" "$MINIO_PASSWORD_TIVI_SYNC"

              mc admin policy attach "$MC_ALIAS" --user "$MINIO_USER_TIVI_SYNC" readwrite
            env:
              MC_ALIAS: ${CLUSTER_CNAME}
              MINIO_ENDPOINT: https://s3.${CLUSTER_DOMAIN}
              MINIO_ACCESS_KEY:
                valueFrom:
                  secretKeyRef:
                    name: minio-admin-secret
                    key: username
              MINIO_SECRET_KEY:
                valueFrom:
                  secretKeyRef:
                    name: minio-admin-secret
                    key: password
              MC_CONFIG_DIR: /tmp/.mc
              MINIO_BUCKET: authentik
              PUID: 568
              PGID: 568
              UMASK: 002
              TZ: "${TIMEZONE}"
              MINIO_USER_CLUSTER_USER:
                valueFrom:
                  secretKeyRef:
                    name: cluster-user
                    key: username
              MINIO_PASSWORD_CLUSTER_USER:
                valueFrom:
                  secretKeyRef:
                    name: cluster-user
                    key: password
              MINIO_USER_AUTHENTIK:
                valueFrom:
                  secretKeyRef:
                    name: authentik-minio-access-key
                    key: username
              MINIO_PASSWORD_AUTHENTIK:
                valueFrom:
                  secretKeyRef:
                    name: authentik-minio-access-key
                    key: password
              MINIO_USER_BACKREST:
                valueFrom:
                  secretKeyRef:
                    name: backrest-${CLUSTER_CNAME}-minio-access-key
                    key: username
              MINIO_PASSWORD_BACKREST:
                valueFrom:
                  secretKeyRef:
                    name: backrest-${CLUSTER_CNAME}-minio-access-key
                    key: password
              MINIO_USER_TIVI_SYNC:
                valueFrom:
                  secretKeyRef:
                    name: tivi-sync-minio-access-key
                    key: username
              MINIO_PASSWORD_TIVI_SYNC:
                valueFrom:
                  secretKeyRef:
                    name: tivi-sync-minio-access-key
                    key: password
            resources:
              requests:
                cpu: 10m
                memory: 32Mi
      cron:
        cronjob:
          backoffLimit: 6
          concurrencyPolicy: Forbid
          failedJobsHistory: 2
          schedule: "*/10 * * * *"
          startingDeadlineSeconds: 30
          successfulJobsHistory: 3
          suspend: false
        type: cronjob
        containers: *job
    persistence:
      tmp:
        type: emptyDir
