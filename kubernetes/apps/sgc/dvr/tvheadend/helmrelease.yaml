---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.2.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app tvheadend

spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  interval: 15m
  timeout: 10m
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: 7
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 7
      strategy: rollback
  rollback:
    force: false # true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  dependsOn:
    - name: truenas-iscsi-stash
      namespace: democratic-csi
    - name: truenas-stash
      namespace: democratic-csi
  values:
    controllers:
      *app :
        enabled: true
        containers:
          *app :
            image:
              repository: ghcr.io/tvheadend/tvheadend
              tag: master@sha256:ceb29783807096f5d3aec7c956164646571bdea62d1cac5d66eb0e2c8c7c0012
              pullPolicy: IfNotPresent

            args: [--firstrun]
            env:
              TZ: ${TIMEZONE}
            securityContext:
              readOnlyRootFilesystem: false

            resources:
              requests:
                cpu: 50m
                memory: 100Mi
                gpu.intel.com/i915: 1
              limits:
                cpu: 4000m
                memory: 6Gi
                gpu.intel.com/i915: 1

    tolerations:
      # - key: amd.com/gpu
      #   operator: Exists
      #   effect: NoSchedule
    defaultPodOptions:
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        runAsGroup: 568
        runAsNonRoot: true
        runAsUser: 568
        seccompProfile:
          type: RuntimeDefault
      # nodeSelector:
      #   intel.feature.node.kubernetes.io/gpu: "true"
    service:
      *app :
        controller: *app
        type: LoadBalancer
        annotations:
          reloader.stakater.com/auto: "true"
          external-dns.alpha.kubernetes.io/target: "${TUNER_VIP}"
          external-dns.alpha.kubernetes.io/hostname: "${TUNER_DOMAIN}"
          io.cilium/lb-ipam-ips: "${TUNER_VIP}"
        externalIPs:
          - "${TUNER_VIP}"
        ports:
          http:
            port: &http 9981
          htsp:
            port: &htsp 9982
          hdhr:
            port: &hdhr 5004

    route:
      internal:
        parentRefs:
          - name: internal
            namespace: network
            kind: Gateway
        hostnames:
          - "${APP}.${CLUSTER_DOMAIN}"
          - "${APP}.${ROOT_DOMAIN}"
        kind: HTTPRoute
        annotations:
          tailscale.com/proxy-group: ingress
          gethomepage.dev/widget.url: "http://${APP}.${INTERNAL_CLUSTER_SERVICE}:5004"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/icon: dispatcharr.svg
          gethomepage.dev/name: dispatcharr
          gethomepage.dev/widget.type: dispatcharr
          gethomepage.dev/namespace: "{{ .Release.Namespace }}"
          gethomepage.dev/app: "${APP}"
        rules:
          - backendRefs:
              - identifier: *app
                port: http

    persistence:
      *app :
        existingClaim: ${APP}
        globalMounts:
          - path: /.config/hts
      tivi-sync:
        existingClaim: tivi-sync
      media-dvr:
        existingClaim: media-dvr
        globalMounts:
          - path: /media/dvr
      timeshift:
        enabled: true
        type: emptyDir
# confgure the app using hard coded values
# and setup plugin cloning using the git repos
