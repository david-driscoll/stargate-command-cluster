---
# yaml-language-server: $schema=https://www.authelia.com/schemas/latest/json-schema/configuration.json
authentication_backend:
  password_change:
    disable: false
  password_reset:
    disable: false
  refresh_interval: 1m
    # start_tls: false
    # group_search_mode: filter
    # permit_referrals: false
    # permit_unauthenticated_bind: false
    # permit_feature_detection_failure: false

theme: auto
default_2fa_method: webauthn

session:
  same_site: lax
  inactivity: 5m
  expiration: 1h
  remember_me: 1M
  cookies:
    - name: ${CLUSTER_CNAME}_session
      domain: ${ROOT_DOMAIN}
      authelia_url: https://iris.${ROOT_DOMAIN}
      default_redirection_url: https://home.${ROOT_DOMAIN}
    - name: tailscale
      domain: ${TAILSCALE_DOMAIN}
      authelia_url: https://iris.${TAILSCALE_DOMAIN}
      default_redirection_url: https://home.${TAILSCALE_DOMAIN}
  redis:
    host: zpm.sgc.svc.cluster.local
    database_index: 2

notifier:
  disable_startup_check: true
  filesystem:
    filename: /logs/notifier.log
  # smtp:
  #   address: ${ROUTER_IP}
  #   sender: Iris <david@${ROOT_DOMAIN}>
  #   disable_require_tls: true

duo_api:
  disable: true

identity_providers:
  oidc:
    # hmac_secret: "{{ secret '/app/secrets/OIDC_HMAC_SECRET' | msquote }}"
    jwks:
      - key: |
          {{ secret "/app/secrets/OIDC_JWKS_KEY_PEM" | mindent 10 "|" | msquote }}
    # cors:
    #   endpoints: ["authorization", "token", "revocation", "introspection"]
    enable_client_debug_messages: true
    enforce_pkce: public_clients_only

    clients:
      - client_id: 'unusued'
        client_name: 'Tailscale'
        public: true
        authorization_policy: 'two_factor'
        jwks_uri: 'https://tailscale-idp.sgc.svc.cluster.local/.well-known/jwks.json'
        scopes:
          - 'openid'
          - 'profile'
          - 'groups'
          - 'email'
log:
  level: 'debug'
telemetry:
  metrics:
    enabled: true

totp:
  issuer: Driscoll Family
  algorithm: SHA512
  digits: 8
  period: 30
  skew: 1
  secret_size: 32

webauthn:
  enable_passkey_login: true
  display_name: Iris
  attestation_conveyance_preference: indirect
  experimental_enable_passkey_uv_two_factors: true
  experimental_enable_passkey_upgrade: true
  metadata:
    enabled: true
    validate_trust_anchor: true
    validate_entry: true
    validate_entry_permit_zero_aaguid: true
    validate_status: true
  selection_criteria:
    attachment: cross-platform
    discoverability: preferred
    user_verification: preferred

definitions:
  network:
    internal:
      - 10.0.0.0/8
      - 192.168.0.0/16
      - "${CLUSTER_NETWORK}"
      - "${SERVICE_NETWORK}"
    cluster:
      - "${CLUSTER_NETWORK}"
      - "${SERVICE_NETWORK}"
    tailscale:
      - 100.64.0.0/10

access_control:
  default_policy: two_factor
  rules:
    # bypass for iris
    - domain: iris.${ROOT_DOMAIN}
      policy: bypass
      networks: [internal, tailscale, cluster]

    # bypass for authelia
    - domain: authelia.${ROOT_DOMAIN}
      policy: bypass
      networks: [internal, tailscale, cluster]

    # Allow free access from cluster network
    - domain: "*.${ROOT_DOMAIN}"
      networks: [cluster]
      policy: bypass

    # bypass for lldap management interface
    - domain: lldap.${ROOT_DOMAIN}
      subject: "group:lldap_admin"
      policy: two_factor
      networks: [internal, tailscale]

    # 2FA if not on cluster network
    - domain: "*.${ROOT_DOMAIN}"
      policy: two_factor
      networks: [internal, tailscale]

    # # Admin access - full access for admin group
    # - domain: "*.${ROOT_DOMAIN}"
    #   subject: "group:lldap_admin"
    #   policy: one_factor
    #   networks: [internal, tailscale]

    # # Regular users - limited access
    # - domain: "*.${ROOT_DOMAIN}"
    #   subject: "group:lldap_password_manager"
    #   policy: two_factor
    #   networks: [internal, tailscale]

# identity_providers:
#   oidc:
#     jwks:
#       - key: |
#           {{ secret "/config/secrets/OIDC_JWKS_KEY" | mindent 10 "|" | msquote }}
#     cors:
#       endpoints: ["authorization", "token", "revocation", "introspection"]
#     clients:
#       - client_name: Grafana
#         client_id: grafana
#         client_secret: '{{ secret "/config/secrets/GRAFANA_OAUTH_CLIENT_SECRET" }}'
#         public: false
#         authorization_policy: two_factor
#         scopes: ["openid", "profile", "groups", "email"]
#         redirect_uris:
#           - https://grafana.${DOMAIN}/login/generic_oauth
#         userinfo_signed_response_alg: none
#       - client_name: Jellyfin
#         client_id: jellyfin
#         client_secret: '{{ secret "/config/secrets/JELLYFIN_OAUTH_CLIENT_SECRET" }}'
#         public: false
#         authorization_policy: two_factor
#         require_pkce: true
#         pkce_challenge_method: S256
#         scopes: ["openid", "profile", "groups"]
#         redirect_uris:
#           - https://jellyfin.${DOMAIN}/sso/OID/r/iris
#           - https://jellyfin.${DOMAIN}/sso/OID/redirect/iris
#         userinfo_signed_response_alg: none
#         token_endpoint_auth_method: client_secret_post
#       - client_name: Miniflux
#         client_id: miniflux
#         client_secret: '{{ secret "/config/secrets/MINIFLUX_OAUTH_CLIENT_SECRET" }}'
#         public: false
#         authorization_policy: two_factor
#         scopes: ["openid", "profile", "groups", "email"]
#         redirect_uris:
#           - https://miniflux.${DOMAIN}/oauth2/oidc/callback
#         userinfo_signed_response_alg: none
#       - client_name: Mealie
#         client_id: mealie
#         public: true
#         authorization_policy: two_factor
#         require_pkce: true
#         pkce_challenge_method: S256
#         scopes: ["openid", "profile", "groups", "email"]
#         redirect_uris:
#           - https://mealie.${DOMAIN}/login
#         userinfo_signed_response_alg: none
#         token_endpoint_auth_method: none
#       - client_name: Paperless
#         client_id: paperless
#         client_secret: '{{ secret "/config/secrets/PAPERLESS_OAUTH_CLIENT_SECRET" }}'
#         public: false
#         authorization_policy: two_factor
#         scopes: ["openid", "profile", "groups", "email"]
#         redirect_uris:
#           - https://paperless.${DOMAIN}/accounts/oidc/iris/login/callback/
#         userinfo_signed_response_alg: none
