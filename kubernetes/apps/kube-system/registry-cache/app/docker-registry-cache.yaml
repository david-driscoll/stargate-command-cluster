---
# Docker Registry v2 as pullthrough cache with cleanup automation
apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-cache-config
  namespace: kube-system
data:
  config.yml: |
    version: 0.1
    log:
      fields:
        service: registry
      level: info
    storage:
      cache:
        blobdescriptor: inmemory
      filesystem:
        rootdirectory: /var/lib/registry
      delete:
        enabled: true
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
        Access-Control-Allow-Origin: ['*']
        Access-Control-Allow-Methods: ['HEAD', 'GET', 'OPTIONS', 'DELETE']
        Access-Control-Allow-Headers: ['Authorization', 'Accept', 'Cache-Control']
    proxy:
      remoteurl: https://registry-1.docker.io
      username: ""
      password: ""
      ttl: 168h
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: registry-cache-storage
  namespace: kube-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: local-hostpath  # Adjust based on your storage class
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry-cache
  namespace: kube-system
  labels:
    app: docker-registry-cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry-cache
  template:
    metadata:
      labels:
        app: docker-registry-cache
    spec:
      containers:
      - name: registry
        image: registry:2.8
        ports:
        - containerPort: 5000
          name: registry
        env:
        - name: REGISTRY_STORAGE_DELETE_ENABLED
          value: "true"
        volumeMounts:
        - name: registry-config
          mountPath: /etc/docker/registry
          readOnly: true
        - name: registry-storage
          mountPath: /var/lib/registry
        resources:
          requests:
            memory: 256Mi
            cpu: 100m
          limits:
            memory: 1Gi
            cpu: 500m
        livenessProbe:
          httpGet:
            path: /v2/
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /v2/
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: registry-config
        configMap:
          name: registry-cache-config
      - name: registry-storage
        persistentVolumeClaim:
          claimName: registry-cache-storage
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry-cache
  namespace: kube-system
  labels:
    app: docker-registry-cache
spec:
  type: NodePort
  ports:
  - port: 5000
    targetPort: 5000
    nodePort: 30500
    name: registry
  selector:
    app: docker-registry-cache