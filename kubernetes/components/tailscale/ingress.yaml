# ---
# # yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/traefik.io/ingressroute_v1alpha1.json
# apiVersion: traefik.io/v1alpha1
# kind: IngressRoute
# metadata:
#   name: ${APP}-tailscale
#   annotations:
#     reloader.stakater.com/auto: "true"
#     external-dns.alpha.kubernetes.io/target: "${INTERNAL_DOMAIN}"
#     kubernetes.io/ingress.class: internal
#     tailscale.com/experimental-forward-cluster-traffic-via-ingress: "true"
#     tailscale.com/expose: "true"
#     tailscale.com/hostname: "${TAILSCALE_HOST:=${APP}}"
#     tailscale.com/tailnet-ip: "${TAILSCALE_IP}"
# spec:
#   entryPoints:
#   - websecure
#   routes:
#   - match: Host(`${TAILSCALE_HOST:=${APP}}.${TAILSCALE_DOMAIN}`)
#     kind: Rule
#     services:
#     - name: ${TAILSCALE_SERVICE:=${APP}}
#       port: ${TAILSCALE_PORT:=http}
#       passHostHeader: true
#     middlewares:
#     - name: tailscale-network
#       namespace: network
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${APP}-tailscale
  annotations:
    reloader.stakater.com/auto: "true"
    tailscale.com/experimental-forward-cluster-traffic-via-ingress: "true"
    traefik.ingress.kubernetes.io/router.middlewares: network-tailscale-network@kubernetescrd
    tailscale.com/tailnet-ip: "${TAILSCALE_IP}"
    # tailscale.com/proxy-group: ingress-proxies
    # tailscale.com/tags: "tag:internal-apps"
spec:
  ingressClassName: internal
  tls:
  - hosts:
    - ${TAILSCALE_HOST:=${APP}}
  rules:
  - http:
      paths:
      - backend:
          service:
            name: ${APP}
            port:
              name: ${TAILSCALE_PORT:=http}
        pathType: Prefix
        path: /
