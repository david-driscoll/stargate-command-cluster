---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app go2rtc
spec:
  timeout: 5m
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    fullnameOverride: *app
    controllers:
      app:
        annotations:
          reloader.stakater.com/auto: "true"
        strategy: Recreate
        containers:
          app:
            image:
              repository: ghcr.io/koush/scrypted
              tag: 18-bullseye-full-v0.23.0
              pullPolicy: Always
            # -- environment variables.
            # See [image docs](https://github.com/dani-garcia/vaultwarden/blob/main/.env.template) for more details.
            env:
              TZ: "${TIMEZONE}"
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
                gpu.intel.com/i915: 1
              limits:
                cpu: 2000m
                memory: 6Gi
                gpu.intel.com/i915: 1
                # amd.com/gpu: 1

    # tolerations:

    #   - key: amd.com/gpu
    #     operator: Exists
    #     effect: NoSchedule

    defaultPodOptions:
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    # -- Configures service settings for the chart.
    service:
      app:
        controller: app
        type: LoadBalancer
        ports:
          http:
            port: *http
          rtsp:
            port: &rtsp 554
            protocol: TCP
          webrtc-tcp:
            port: &webrtc 8555
            protocol: TCP
          webrtc-udp:
            port: *webrtc
            protocol: UDP

    persistence:
      config:
        type: configMap
        name: go2rtc-config
        globalMounts:
          - path: /config/go2rtc.yaml
            subPath: go2rtc.yaml
            readOnly: true

    ingress:
      internal:
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${ROOT_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: *http
        annotations:
          reloader.stakater.com/auto: "true"
          external-dns.alpha.kubernetes.io/target: "${INTERNAL_DOMAIN}"
          gethomepage.dev/widget.url: "http://{{ .Release.Name }}.${INTERNAL_CLUSTER_SERVICE}:6767"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media Management
          gethomepage.dev/icon: go2rtc.svg
          gethomepage.dev/name: Go2rtc
          gethomepage.dev/widget.type: "go2rtc"
          gethomepage.dev/namespace: "{{ .Release.Namespace }}" # The kubernetes namespace the app resides in
          gethomepage.dev/app: "{{ .Release.Name }}"
      tailscale:
        className: tailscale
        annotations:
          reloader.stakater.com/auto: "true"
        hosts:
          - host: "{{ .Release.Name }}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: *http
---
apiVersion: traefik.io/v1alpha1
kind: IngressRouteTCP
metadata:
  name: go2rtc
  namespace: network
spec:
  entryPoints:
    - rtsp
  routes:
  - match: HostSNI(`{{ .Release.Name }}.${ROOT_DOMAIN}`)
    priority: 10
    services:
    - name: go2rtc
      port: rtsp
      nativeLB: true
