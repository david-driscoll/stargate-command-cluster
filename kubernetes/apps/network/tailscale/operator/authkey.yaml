# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app tailscale-idp
spec:
  interval: 5m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: uninstall
  uninstall:
    keepHistory: false
  dependsOn:
    - name: onepassword-connect
      namespace: kube-system
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        cronjob:
          backoffLimit: 6
          concurrencyPolicy: Forbid
          failedJobsHistory: 2
          schedule: "0 0 * * *"
          startingDeadlineSeconds: 30
          successfulJobsHistory: 3
          suspend: false
        type: cronjob
        containers:
          main: &job
            image:
              repository: alpine/k8s
              tag: 1.33.1
              pullPolicy: IfNotPresent
            env:
              OAUTH_CLIENT_ID:
                valueFrom:
                  secretKeyRef:
                    name: tailscale-oauth
                    key: username
              OAUTH_CLIENT_SECRET:
                valueFrom:
                  secretKeyRef:
                    name: tailscale-oauth
                    key: credential
            command:
            - /bin/sh
            - -c
            - |
              response=$(curl -d "client_id=$OAUTH_CLIENT_ID" -d "client_secret=$OAUTH_CLIENT_SECRET" "https://api.tailscale.com/api/v2/oauth/token")
              access_token=$(echo $response | jq -r '.access_token')
              kubectl create secret generic tailscale-access-token --from-literal=token="$access_token" --dry-run=client -o yaml | kubectl apply -f -
              kubectl annotate secret tailscale-access-token reflector.v1.k8s.emberstack.com/reflection-allowed='true' --dry-run=client -o yaml | kubectl apply -f -
              kubectl annotate secret tailscale-access-token reloader.stakater.com/auto='true' --dry-run=client -o yaml | kubectl apply -f -

              response=$(curl -H "Authorization: Bearer $access_token" "https://api.tailscale.com/api/v2/tailnet/-/devices" --data '{
                "keyType": "",
                "description": "dev access",
                "capabilities": {
                  "devices": {
                    "create": {
                      "reusable": true,
                      "ephemeral": true,
                      "preauthorized": true,
                      "tags": [
                        "tag:${CLUSTER_CNAME}"
                      ]
                    }
                  }
                }')
              authkey=$(echo $response | jq -r '.key')
              kubectl create secret generic tailscale-authkey --from-literal=authkey="$authkey" --dry-run=client -o yaml | kubectl apply -f -
              kubectl annotate secret tailscale-authkey reflector.v1.k8s.emberstack.com/reflection-allowed='true' --dry-run=client -o yaml | kubectl apply -f -
              kubectl annotate secret tailscale-authkey reloader.stakater.com/auto='true' --dry-run=client -o yaml | kubectl apply -f -

            resources:
              requests:
                memory: 128Mi
                cpu: 10m
              limits:
                memory: 256Mi
                cpu: 20m
      init:
        annotations:
          reloader.stakater.com/auto: "true"
        type: job
        job:
          backoffLimit: 6
          activeDeadlineSeconds: 3600
          ttlSecondsAfterFinished: 3600
          parallelism: 1
          completions: 1
        containers:
          main:
            <<: *job

    defaultPodOptions:
      securityContext:
        fsGroup: 568
        runAsGroup: 568
        runAsNonRoot: true
        runAsUser: 568
        seccompProfile:
          type: RuntimeDefault
      shareProcessNamespace: true
