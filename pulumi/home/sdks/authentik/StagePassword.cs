// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Authentik
{
    [AuthentikResourceType("authentik:index/stagePassword:StagePassword")]
    public partial class StagePassword : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Output("allowShowPassword")]
        public Output<bool?> AllowShowPassword { get; private set; } = null!;

        [Output("backends")]
        public Output<ImmutableArray<string>> Backends { get; private set; } = null!;

        [Output("configureFlow")]
        public Output<string?> ConfigureFlow { get; private set; } = null!;

        /// <summary>
        /// Defaults to `5`.
        /// </summary>
        [Output("failedAttemptsBeforeCancel")]
        public Output<double?> FailedAttemptsBeforeCancel { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("stagePasswordId")]
        public Output<string> StagePasswordId { get; private set; } = null!;


        /// <summary>
        /// Create a StagePassword resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StagePassword(string name, StagePasswordArgs args, CustomResourceOptions? options = null)
            : base("authentik:index/stagePassword:StagePassword", name, args ?? new StagePasswordArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private StagePassword(string name, Input<string> id, StagePasswordState? state = null, CustomResourceOptions? options = null)
            : base("authentik:index/stagePassword:StagePassword", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StagePassword resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StagePassword Get(string name, Input<string> id, StagePasswordState? state = null, CustomResourceOptions? options = null)
        {
            return new StagePassword(name, id, state, options);
        }
    }

    public sealed class StagePasswordArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("allowShowPassword")]
        public Input<bool>? AllowShowPassword { get; set; }

        [Input("backends", required: true)]
        private InputList<string>? _backends;
        public InputList<string> Backends
        {
            get => _backends ?? (_backends = new InputList<string>());
            set => _backends = value;
        }

        [Input("configureFlow")]
        public Input<string>? ConfigureFlow { get; set; }

        /// <summary>
        /// Defaults to `5`.
        /// </summary>
        [Input("failedAttemptsBeforeCancel")]
        public Input<double>? FailedAttemptsBeforeCancel { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("stagePasswordId")]
        public Input<string>? StagePasswordId { get; set; }

        public StagePasswordArgs()
        {
        }
        public static new StagePasswordArgs Empty => new StagePasswordArgs();
    }

    public sealed class StagePasswordState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("allowShowPassword")]
        public Input<bool>? AllowShowPassword { get; set; }

        [Input("backends")]
        private InputList<string>? _backends;
        public InputList<string> Backends
        {
            get => _backends ?? (_backends = new InputList<string>());
            set => _backends = value;
        }

        [Input("configureFlow")]
        public Input<string>? ConfigureFlow { get; set; }

        /// <summary>
        /// Defaults to `5`.
        /// </summary>
        [Input("failedAttemptsBeforeCancel")]
        public Input<double>? FailedAttemptsBeforeCancel { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("stagePasswordId")]
        public Input<string>? StagePasswordId { get; set; }

        public StagePasswordState()
        {
        }
        public static new StagePasswordState Empty => new StagePasswordState();
    }
}
