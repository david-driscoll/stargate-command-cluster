---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.2.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app iptv-proxy
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  interval: 1h
  timeout: 10m
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: 7
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 7
      strategy: rollback
  rollback:
    force: false # true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        runAsGroup: 568
        runAsNonRoot: true
        runAsUser: 568
        seccompProfile:
          type: RuntimeDefault
      shareProcessNamespace: true
    controllers:
      host:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          host:
            image:
              repository: ghcr.io/pierre-emmanuelj/iptv-proxy/iptv-proxy
              tag: v3.7.0@sha256:627be7f4d9947821438d0eef360f80fabc43665055430fdf02179020c8973810
              pullPolicy: IfNotPresent
            env:
              M3U_URL:
                secretKeyRef:
                  name: tivi-secret
                  key: M3U_URL
              PORT: &host 8080
              HOSTNAME: "iptv.${ROOT_DOMAIN}"
              GIN_MODE: release
              HTTPS: 1
              ADVERTISED_PORT: 443
              USER:
                secretKeyRef:
                  name: iptv-proxy-secret
                  key: PROXY_USERNAME
              PASSWORD:
                secretKeyRef:
                  name: iptv-proxy-secret
                  key: PROXY_PASSWORD
            resources:
              requests:
                cpu: 50m
                memory: 2Gi
              limits:
                cpu: 1
                memory: 6Gi
      sync-cache:
        annotations:
          reloader.stakater.com/auto: "true"
        cronjob:
          backoffLimit: 6
          concurrencyPolicy: Forbid
          failedJobsHistory: 2
          schedule: "*/10 * * * *"
          startingDeadlineSeconds: 30
          successfulJobsHistory: 3
          suspend: false
        type: cronjob
        containers:
          main: &job
            image:
              repository: minio/mc
              tag: RELEASE.2025-05-21T01-59-54Z.hotfix.e98f1ead@sha256:cf700affaa5cddcea9371fd4c961521fff2baff4b90333c4bda2df61bf5e6692
              pullPolicy: IfNotPresent
            command:
              - sh
              - -c
              - |
                /resources/minio-fetch-config.sh
            env:
              PUID: 568
              PGID: 568
              UMASK: 002
              TZ: "${TIMEZONE}"
            envFrom:
              - secretRef:
                  name: ${APP}-minio
              - secretRef:
                  name: ${APP}-tivi
            resources:
              requests:
                cpu: 10m
                memory: 32Mi
      fetch-cache:
        annotations:
          reloader.stakater.com/auto: "true"
        type: job
        job:
          backoffLimit: 6
          activeDeadlineSeconds: 3600
          ttlSecondsAfterFinished: 3600
          parallelism: 1
          completions: 1
        containers:
          main:
            <<: *job
    service:
      host:
        controller: host
        ports:
          host:
            port: *host

    persistence:
      config:
        existingClaim: ${APP}
        globalMounts:
          - path: /cache
      tmp:
        type: emptyDir
      resources:
        type: configMap
        name: iptv-cache-script
        defaultMode: 493
        globalMounts:
          - path: /resources/minio-fetch-config.sh
            subPath: minio-fetch-config.sh

    route:
      internal:
        parentRefs:
          - name: internal
            namespace: network
            kind: Gateway
        hostnames:
          - "iptv.${ROOT_DOMAIN}"
        kind: HTTPRoute
        rules:
          - backendRefs:
              - identifier: host
                port: host
