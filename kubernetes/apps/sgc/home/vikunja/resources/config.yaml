service:
  JWTSecret: "{{ .user_secret }}"
  rootpath: "/data/"
  # maxitemsperpage: 50
  # Set the motd message, available from the /info endpoint
  motd: "Hello there!"
  enablelinksharing: true
  enableregistration: true
  enabletaskattachments: true
  timezone: "${TIMEZONE}"
  enabletaskcomments: true
  # If enabled, Vikunja will send an email to everyone who is either assigned to a task or created it when a task reminder
  # is due.
  enableemailreminders: false
  allowiconchanges: true
  # Allow using a custom logo via external URL.
  customlogourl: ""
  # Enables the public team feature. If enabled, it is possible to configure teams to be public, which makes them
  # discoverable when sharing a project, therefore not only showing teams the user is member of.
  enablepublicteams: true
  # If enabled, users will only find other users who are part of an existing team when they are searching for a user by their partial name. The other existing team may be created from openid. It is still possible to add users to teams with their exact email address even when this is enabled.
  enableopenidteamusersearch: true

database:
  # Database type to use. Supported values are mysql, postgres and sqlite. Vikunja is able to run with MySQL 8.0+, Mariadb 10.2+, PostgreSQL 12+, and sqlite.
  type: "postgres"
  # Database user which is used to connect to the database.
  user: "{{ .postgres_username }}"
  # Database password
  password: "{{ .postgres_password }}"
  # Database host
  host: "{{ .postgres_host }}"
  # Database to use
  database: "{{ .postgres_database }}"

typesense:
  # Whether to enable the Typesense integration. If true, all tasks will be synced to the configured Typesense
  # instance and all search and filtering will run through Typesense instead of only through the database.
  # Typesense allows fast fulltext search including fuzzy matching support. It may return different results than
  # what you'd get with a database-only search.
  enabled: false
  # The url to the Typesense instance you want to use. Can be hosted locally or in Typesense Cloud as long as Vikunja is able to reach it. Must be a http(s) url.
  url: ""
  # The Typesense API key you want to use.
  apikey: ""
#
redis:
  # Whether to enable redis or not
  enabled: true
  # The host of the redis server including its port.
  host: "redis.database.svc.cluster.local:6379"
  # 0 means default database
  db: 7
#
cors:
  # Whether to enable or disable cors headers.
  # By default, this is enabled only for requests from the desktop application running on localhost.
  # Note: If you want to put the frontend and the api on separate domains or ports, you will need to adjust this setting accordingly.
  enable: true
  # A list of origins which may access the api. These need to include the protocol (`http://` or `https://`) and port, if any.
  origins:
    - "https://${APP}.${ROOT_DOMAIN}"
    - "https://vikunja.${ROOT_DOMAIN}"
    # - "http://127.0.0.1:*"
    # - "http://localhost:*"
#
mailer:
  # Whether to enable the mailer or not. If it is disabled, all users are enabled right away and password reset is not possible.
  enabled: false
  # SMTP Host
  host: ""
  # SMTP Host port.
  # **NOTE:** If you're unable to send mail and the only error you see in the logs is an `EOF`, try setting the port to `25`.
  port: 587
  # SMTP Auth Type. Can be either `plain`, `login` or `cram-md5`.
  authtype: "plain"
  # SMTP username
  username: "user"
  # SMTP password
  password: ""
  # Whether to skip verification of the tls certificate on the server
  skiptlsverify: false
  # The default from address when sending emails
  fromemail: "mail@vikunja"
  # The length of the mail queue.
  queuelength: 100
  # The timeout in seconds after which the current open connection to the mailserver will be closed.
  queuetimeout: 30
  # By default, Vikunja will try to connect with starttls, use this option to force it to use ssl.
  forcessl: false
#
log:
  # Whether to show any logging at all or none
  enabled: true
  # Where the normal log should go. Possible values are stdout, stderr, file or off to disable standard logging.
  standard: "stdout"
  # Change the log level. Possible values (case-insensitive) are CRITICAL, ERROR, WARNING, NOTICE, INFO, DEBUG.
  level: "INFO"
  database: "stdout"
  databaselevel: "INFO"
  http: "off"
  echo: "stdout"
  events: "true"
  eventslevel: "INFO"
  mail: "off"
  maillevel: "INFO"

files:
  basepath: "/data/files/"
  maxsize: "50MB"

avatar:
  # When using gravatar, this is the duration in seconds until a cached gravatar user avatar expires
  gravatarexpiration: 3600
#
backgrounds:
  # Whether to enable backgrounds for projects at all.
  enabled: true
  providers:
    upload:
      # Whether to enable uploaded project backgrounds
      enabled: true
    #
    unsplash:
      # Whether to enable setting backgrounds from unsplash as project backgrounds
      enabled: false
      # You need to create an application for your installation at https://unsplash.com/oauth/applications/new
      # and set the access token below.
      accesstoken: ""
      # The unsplash application id is only used for pingback and required as per their api guidelines.
      # You can find the Application ID in the dashboard for your API application. It should be a numeric ID.
      # It will only show in the UI if your application has been approved for Enterprise usage, therefore if
      # youâ€™re in Demo mode, you can also find the ID in the URL at the end: https://unsplash.com/oauth/applications/:application_id
      applicationid: ""
    #
  #

keyvalue:
  type: "redis"

auth:
  local:
    enabled: false
  openid:
    enabled: true
    redirecturl: https://${APP}.${ROOT_DOMAIN}/auth/openid/
    providers:
      authentik:
        name: "Authentik"
        authurl: "${OIDC_ISSUER}/application/o/vikunja/"
        logouturl: "${OIDC_ISSUER}/application/o/vikunja/end-session/"
        clientid: "{{ .oidc_username }}"
        clientsecret: "{{ .oidc_credential }}"
        scope: "openid email profile vikunja_scope"
        usernamefallback: true
        emailfallback: true
        forceuserinfo: true

metrics:
  # If set to true, enables a /metrics endpoint for prometheus to collect metrics about Vikunja. You can query it from `/api/v1/metrics`.
  enabled: true

defaultsettings:
  avatar_provider: "gravatar"
  avatar_file_id: 0
  # If set to true users will get task reminders via email.
  email_reminders_enabled: false
  discoverable_by_name: true
  discoverable_by_email: true
  # If set to true will send an email every day with all overdue tasks at a configured time.
  overdue_tasks_reminders_enabled: false
  # When to send the overdue task reminder email.
  overdue_tasks_reminders_time: "9:00"
  # The id of the default project. Make sure users actually have access to this project when setting this value.
  default_project_id: 0
  # Start of the week for the user. `0` is sunday, `1` is monday and so on.
  week_start: 0
  # The language of the user interface. Must be an ISO 639-1 language code followed by an ISO 3166-1 alpha-2 country code. Check https://kolaente.dev/vikunja/vikunja/frontend/src/branch/main/src/i18n/lang for a list of possible languages. Will default to the browser language the user uses when signing up.
  language: "EN"
  # The time zone of each individual user. This will affect when users get reminders and overdue task emails.
  timezone: "${TIMEZONE}"
#
webhooks:
  # Whether to enable support for webhooks
  enabled: true
  # The timeout in seconds until a webhook request fails when no response has been received.
  timeoutseconds: 30
