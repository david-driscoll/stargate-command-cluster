// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Unifi.Inputs
{

    public sealed class SettingIpsDnsFilterArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowedSites")]
        private InputList<string>? _allowedSites;

        /// <summary>
        /// List of allowed sites for this DNS filter. These domains will always be accessible regardless of other filtering rules. Each entry should be a valid domain name (e.g., `example.com`).
        /// </summary>
        public InputList<string> AllowedSites
        {
            get => _allowedSites ?? (_allowedSites = new InputList<string>());
            set => _allowedSites = value;
        }

        [Input("blockedSites")]
        private InputList<string>? _blockedSites;

        /// <summary>
        /// List of blocked sites for this DNS filter. These domains will be blocked regardless of other filtering rules. Each entry should be a valid domain name (e.g., `example.com`).
        /// </summary>
        public InputList<string> BlockedSites
        {
            get => _blockedSites ?? (_blockedSites = new InputList<string>());
            set => _blockedSites = value;
        }

        [Input("blockedTlds")]
        private InputList<string>? _blockedTlds;

        /// <summary>
        /// List of blocked top-level domains (TLDs) for this DNS filter. All domains with these TLDs will be blocked. Each entry should be a valid TLD without the dot prefix (e.g., `xyz`, `info`).
        /// </summary>
        public InputList<string> BlockedTlds
        {
            get => _blockedTlds ?? (_blockedTlds = new InputList<string>());
            set => _blockedTlds = value;
        }

        /// <summary>
        /// Description of the DNS filter. This is used for documentation purposes only and does not affect functionality.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Filter type that determines the predefined filtering level. Valid values are:
        ///   * `none` - No predefined filtering
        ///   * `work` - Work-appropriate filtering that blocks adult content
        ///   * `family` - Family-friendly filtering that blocks adult content and other inappropriate sites
        /// </summary>
        [Input("filter", required: true)]
        public Input<string> Filter { get; set; } = null!;

        /// <summary>
        /// Name of the DNS filter. This is used to identify the filter in the UniFi interface.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Network ID this filter applies to. This should be a valid network ID from your UniFi configuration.
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        public SettingIpsDnsFilterArgs()
        {
        }
        public static new SettingIpsDnsFilterArgs Empty => new SettingIpsDnsFilterArgs();
    }
}
