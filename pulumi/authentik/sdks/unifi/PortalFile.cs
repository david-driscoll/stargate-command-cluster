// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Unifi
{
    [UnifiResourceType("unifi:index/portalFile:PortalFile")]
    public partial class PortalFile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// MIME type of the file.
        /// </summary>
        [Output("contentType")]
        public Output<string> ContentType { get; private set; } = null!;

        /// <summary>
        /// Path to the file on the local filesystem to upload to the UniFi controller. The file must exist and be readable.
        /// </summary>
        [Output("filePath")]
        public Output<string> FilePath { get; private set; } = null!;

        /// <summary>
        /// Size of the file in bytes.
        /// </summary>
        [Output("fileSize")]
        public Output<double> FileSize { get; private set; } = null!;

        /// <summary>
        /// Name of the file as stored in the UniFi controller.
        /// </summary>
        [Output("filename")]
        public Output<string> Filename { get; private set; } = null!;

        /// <summary>
        /// Timestamp when the file was last modified.
        /// </summary>
        [Output("lastModified")]
        public Output<double> LastModified { get; private set; } = null!;

        /// <summary>
        /// MD5 hash of the file content.
        /// </summary>
        [Output("md5")]
        public Output<string> Md5 { get; private set; } = null!;

        /// <summary>
        /// The name of the UniFi site where this resource should be applied. If not specified, the default site will be used.
        /// </summary>
        [Output("site")]
        public Output<string> Site { get; private set; } = null!;

        /// <summary>
        /// URL where the file can be accessed on the UniFi controller.
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a PortalFile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PortalFile(string name, PortalFileArgs args, CustomResourceOptions? options = null)
            : base("unifi:index/portalFile:PortalFile", name, args ?? new PortalFileArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private PortalFile(string name, Input<string> id, PortalFileState? state = null, CustomResourceOptions? options = null)
            : base("unifi:index/portalFile:PortalFile", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PortalFile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PortalFile Get(string name, Input<string> id, PortalFileState? state = null, CustomResourceOptions? options = null)
        {
            return new PortalFile(name, id, state, options);
        }
    }

    public sealed class PortalFileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Path to the file on the local filesystem to upload to the UniFi controller. The file must exist and be readable.
        /// </summary>
        [Input("filePath", required: true)]
        public Input<string> FilePath { get; set; } = null!;

        /// <summary>
        /// The name of the UniFi site where this resource should be applied. If not specified, the default site will be used.
        /// </summary>
        [Input("site")]
        public Input<string>? Site { get; set; }

        public PortalFileArgs()
        {
        }
        public static new PortalFileArgs Empty => new PortalFileArgs();
    }

    public sealed class PortalFileState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// MIME type of the file.
        /// </summary>
        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        /// <summary>
        /// Path to the file on the local filesystem to upload to the UniFi controller. The file must exist and be readable.
        /// </summary>
        [Input("filePath")]
        public Input<string>? FilePath { get; set; }

        /// <summary>
        /// Size of the file in bytes.
        /// </summary>
        [Input("fileSize")]
        public Input<double>? FileSize { get; set; }

        /// <summary>
        /// Name of the file as stored in the UniFi controller.
        /// </summary>
        [Input("filename")]
        public Input<string>? Filename { get; set; }

        /// <summary>
        /// Timestamp when the file was last modified.
        /// </summary>
        [Input("lastModified")]
        public Input<double>? LastModified { get; set; }

        /// <summary>
        /// MD5 hash of the file content.
        /// </summary>
        [Input("md5")]
        public Input<string>? Md5 { get; set; }

        /// <summary>
        /// The name of the UniFi site where this resource should be applied. If not specified, the default site will be used.
        /// </summary>
        [Input("site")]
        public Input<string>? Site { get; set; }

        /// <summary>
        /// URL where the file can be accessed on the UniFi controller.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public PortalFileState()
        {
        }
        public static new PortalFileState Empty => new PortalFileState();
    }
}
