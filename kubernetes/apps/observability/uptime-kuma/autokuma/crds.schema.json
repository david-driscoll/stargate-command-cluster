{
  "$schema": "http://json-schema.org/draft-07/schema#",

  "description": "Cluster is the Schema for the PostgreSQL API",
  "required": ["metadata", "spec"],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "config": {
          "type": "object",
          "oneOf": [
            {
              "properties": {
                "type": { "const": "http" },
                "url": { "type": "string" },
                "method": {
                  "type": "string",
                  "enum": [
                    "GET",
                    "POST",
                    "PUT",
                    "PATCH",
                    "DELETE",
                    "HEAD",
                    "OPTIONS"
                  ]
                },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" },
                "interval": { "type": "integer" },
                "max_redirects": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "proxy_id": { "type": "string" },
                "resend_interval": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "timeout": { "type": "integer" },
                "upside_down": { "type": "boolean" },
                "tls_ca": { "type": "string" },
                "tls_cert": { "type": "string" },
                "tls_key": { "type": "string" },
                "ignore_tls": { "type": "boolean" },
                "expiry_notification": { "type": "boolean" },
                "http_body_encoding": {
                  "type": "string",
                  "enum": ["none", "base64", "utf8"]
                },
                "body": { "type": "string" },
                "auth_domain": { "type": "string" },
                "authMethod": {
                  "type": "string",
                  "enum": ["basic", "oauth", "none"]
                },
                "auth_workstation": { "type": "string" },
                "basic_auth_user": { "type": "string" },
                "basic_auth_pass": { "type": "string" },
                "oauth_auth_method": {
                  "type": "string",
                  "enum": ["client_credentials", "password", "none"]
                },
                "oauth_client_id": { "type": "string" },
                "oauth_client_secret": { "type": "string" },
                "oauth_scopes": { "type": "string" },
                "oauth_token_url": { "type": "string" }
              }
            },
            {
              "properties": {
                "type": { "const": "ping" },
                "hostname": { "type": "string" },
                "packet_size": { "type": "integer" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" },
                "interval": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "upside_down": { "type": "boolean" }
              }
            },
            {
              "properties": {
                "type": { "const": "docker" },
                "docker_container": { "type": "string" },
                "docker_host": { "type": "string" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" },
                "interval": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "upside_down": { "type": "boolean" }
              }
            },
            {
              "properties": {
                "type": { "const": "dns" },
                "hostname": { "type": "string" },
                "dns_resolve_server": { "type": "string" },
                "dns_resolve_type": {
                  "type": "string",
                  "enum": [
                    "A",
                    "AAAA",
                    "CNAME",
                    "MX",
                    "TXT",
                    "SRV",
                    "PTR",
                    "SOA",
                    "NS"
                  ]
                },
                "port": { "type": "integer" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" },
                "interval": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "upside_down": { "type": "boolean" }
              }
            },
            {
              "properties": {
                "type": { "const": "gamedig" },
                "game": { "type": "string" },
                "gamedig_given_port_only": { "type": "boolean" },
                "hostname": { "type": "string" },
                "interval": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "port": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "upside_down": { "type": "boolean" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" }
              }
            },
            {
              "properties": {
                "type": { "const": "group" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" },
                "interval": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "upside_down": { "type": "boolean" }
              }
            },
            {
              "properties": {
                "type": { "const": "grpc-keyword" },
                "grpc_body": { "type": "string" },
                "grpc_enable_tls": { "type": "boolean" },
                "grpc_metadata": { "type": "string" },
                "grpc_method": { "type": "string" },
                "grpc_protobuf": { "type": "string" },
                "grpc_service_name": { "type": "string" },
                "grpc_url": { "type": "string" },
                "interval": { "type": "integer" },
                "invert_keyword": { "type": "boolean" },
                "keyword": { "type": "string" },
                "max_retries": { "type": "integer" },
                "max_redirects": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "upside_down": { "type": "boolean" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" }
              }
            },
            {
              "properties": {
                "type": { "const": "json-query" },
                "url": { "type": "string" },
                "json_path": { "type": "string" },
                "expected_value": { "type": "string" },
                "method": { "type": "string" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "auth_domain": { "type": "string" },
                "authMethod": { "type": "string" },
                "auth_workstation": { "type": "string" },
                "basic_auth_user": { "type": "string" },
                "basic_auth_pass": { "type": "string" },
                "body": { "type": "string" },
                "description": { "type": "string" },
                "expiry_notification": { "type": "boolean" },
                "http_body_encoding": { "type": "string" },
                "ignore_tls": { "type": "boolean" },
                "interval": { "type": "integer" },
                "max_redirects": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "oauth_auth_method": { "type": "string" },
                "oauth_client_id": { "type": "string" },
                "oauth_client_secret": { "type": "string" },
                "oauth_scopes": { "type": "string" },
                "oauth_token_url": { "type": "string" },
                "parent": { "type": "integer" },
                "proxy_id": { "type": "string" },
                "resend_interval": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "timeout": { "type": "integer" },
                "tls_ca": { "type": "string" },
                "tls_cert": { "type": "string" },
                "tls_key": { "type": "string" },
                "upside_down": { "type": "boolean" }
              }
            },
            {
              "properties": {
                "type": { "const": "kafka-producer" },
                "kafka_producer_sasl_options_mechanism": {
                  "type": "string",
                  "enum": ["plain", "scram-sha-256", "scram-sha-512"]
                },
                "kafka_producer_ssl": { "type": "boolean" },
                "kafka_producer_brokers": { "type": "string" },
                "kafka_producer_topic": { "type": "string" },
                "kafka_producer_message": { "type": "string" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" },
                "interval": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "upside_down": { "type": "boolean" }
              }
            },
            {
              "properties": {
                "type": { "const": "keyword" },
                "url": { "type": "string" },
                "keyword": { "type": "string" },
                "invert_keyword": { "type": "boolean" },
                "method": { "type": "string" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "auth_domain": { "type": "string" },
                "authMethod": { "type": "string" },
                "auth_workstation": { "type": "string" },
                "basic_auth_user": { "type": "string" },
                "basic_auth_pass": { "type": "string" },
                "body": { "type": "string" },
                "description": { "type": "string" },
                "expiry_notification": { "type": "boolean" },
                "http_body_encoding": { "type": "string" },
                "ignore_tls": { "type": "boolean" },
                "interval": { "type": "integer" },
                "max_redirects": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "oauth_auth_method": { "type": "string" },
                "oauth_client_id": { "type": "string" },
                "oauth_client_secret": { "type": "string" },
                "oauth_scopes": { "type": "string" },
                "oauth_token_url": { "type": "string" },
                "parent": { "type": "integer" },
                "proxy_id": { "type": "string" },
                "resend_interval": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "timeout": { "type": "integer" },
                "tls_ca": { "type": "string" },
                "tls_cert": { "type": "string" },
                "tls_key": { "type": "string" },
                "upside_down": { "type": "boolean" }
              }
            },
            {
              "properties": {
                "type": { "const": "mongodb" },
                "database_connection_string": { "type": "string" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" },
                "interval": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "upside_down": { "type": "boolean" }
              }
            },
            {
              "properties": {
                "type": { "const": "mqtt" },
                "mqtt_check_type": {
                  "type": "string",
                  "enum": ["connect", "publish", "subscribe"]
                },
                "mqtt_username": { "type": "string" },
                "mqtt_password": { "type": "string" },
                "mqtt_topic": { "type": "string" },
                "mqtt_success_message": { "type": "string" },
                "hostname": { "type": "string" },
                "port": { "type": "integer" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" },
                "interval": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "upside_down": { "type": "boolean" }
              }
            },
            {
              "properties": {
                "type": { "const": "mysql" },
                "database_connection_string": { "type": "string" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" },
                "interval": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "radius_password": { "type": "string" },
                "retry_interval": { "type": "integer" },
                "upside_down": { "type": "boolean" }
              }
            },
            {
              "properties": {
                "type": { "const": "port" },
                "hostname": { "type": "string" },
                "port": { "type": "integer" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" },
                "interval": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "upside_down": { "type": "boolean" }
              }
            },
            {
              "properties": {
                "type": { "const": "postgres" },
                "database_connection_string": { "type": "string" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" },
                "interval": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "upside_down": { "type": "boolean" }
              }
            },
            {
              "properties": {
                "type": { "const": "push" },
                "push_token": { "type": "string" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" },
                "interval": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "upside_down": { "type": "boolean" }
              }
            },
            {
              "properties": {
                "type": { "const": "radius" },
                "hostname": { "type": "string" },
                "port": { "type": "integer" },
                "radius_called_station_id": { "type": "string" },
                "radius_calling_station_id": { "type": "string" },
                "radius_password": { "type": "string" },
                "radius_secret": { "type": "string" },
                "radius_username": { "type": "string" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" },
                "interval": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "upside_down": { "type": "boolean" }
              }
            },
            {
              "properties": {
                "type": { "const": "real-browser" },
                "remote_browser": { "type": "string" },
                "remote_browsers_toggle": { "type": "boolean" },
                "url": { "type": "string" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" },
                "interval": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "upside_down": { "type": "boolean" }
              }
            },
            {
              "properties": {
                "type": { "const": "redis" },
                "database_connection_string": { "type": "string" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" },
                "interval": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "upside_down": { "type": "boolean" }
              }
            },
            {
              "properties": {
                "type": { "const": "steam" },
                "hostname": { "type": "string" },
                "port": { "type": "integer" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" },
                "interval": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "upside_down": { "type": "boolean" }
              }
            },
            {
              "properties": {
                "type": { "const": "sqlserver" },
                "database_connection_string": { "type": "string" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" },
                "interval": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "upside_down": { "type": "boolean" }
              }
            },
            {
              "properties": {
                "type": { "const": "tailscale-ping" },
                "hostname": { "type": "string" },
                "accepted_statuscodes": { "type": "string" },
                "active": { "type": "boolean" },
                "description": { "type": "string" },
                "interval": { "type": "integer" },
                "max_retries": { "type": "integer" },
                "name": { "type": "string" },
                "parent": { "type": "integer" },
                "retry_interval": { "type": "integer" },
                "upside_down": { "type": "boolean" }
              }
            }
          ]
        }
      },
      "type": "object"
    }
  }
}
