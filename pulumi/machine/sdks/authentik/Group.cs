// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Authentik
{
    [AuthentikResourceType("authentik:index/group:Group")]
    public partial class Group : global::Pulumi.CustomResource
    {
        /// <summary>
        /// JSON format expected. Use `jsonencode()` to pass objects. Defaults to `{}`.
        /// </summary>
        [Output("attributes")]
        public Output<string?> Attributes { get; private set; } = null!;

        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Output("isSuperuser")]
        public Output<bool?> IsSuperuser { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("parent")]
        public Output<string?> Parent { get; private set; } = null!;

        [Output("roles")]
        public Output<ImmutableArray<string>> Roles { get; private set; } = null!;

        /// <summary>
        /// Generated.
        /// </summary>
        [Output("users")]
        public Output<ImmutableArray<double>> Users { get; private set; } = null!;


        /// <summary>
        /// Create a Group resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Group(string name, GroupArgs? args = null, CustomResourceOptions? options = null)
            : base("authentik:index/group:Group", name, args ?? new GroupArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private Group(string name, Input<string> id, GroupState? state = null, CustomResourceOptions? options = null)
            : base("authentik:index/group:Group", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Group resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Group Get(string name, Input<string> id, GroupState? state = null, CustomResourceOptions? options = null)
        {
            return new Group(name, id, state, options);
        }
    }

    public sealed class GroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// JSON format expected. Use `jsonencode()` to pass objects. Defaults to `{}`.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("isSuperuser")]
        public Input<bool>? IsSuperuser { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parent")]
        public Input<string>? Parent { get; set; }

        [Input("roles")]
        private InputList<string>? _roles;
        public InputList<string> Roles
        {
            get => _roles ?? (_roles = new InputList<string>());
            set => _roles = value;
        }

        [Input("users")]
        private InputList<double>? _users;

        /// <summary>
        /// Generated.
        /// </summary>
        public InputList<double> Users
        {
            get => _users ?? (_users = new InputList<double>());
            set => _users = value;
        }

        public GroupArgs()
        {
        }
        public static new GroupArgs Empty => new GroupArgs();
    }

    public sealed class GroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// JSON format expected. Use `jsonencode()` to pass objects. Defaults to `{}`.
        /// </summary>
        [Input("attributes")]
        public Input<string>? Attributes { get; set; }

        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("isSuperuser")]
        public Input<bool>? IsSuperuser { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parent")]
        public Input<string>? Parent { get; set; }

        [Input("roles")]
        private InputList<string>? _roles;
        public InputList<string> Roles
        {
            get => _roles ?? (_roles = new InputList<string>());
            set => _roles = value;
        }

        [Input("users")]
        private InputList<double>? _users;

        /// <summary>
        /// Generated.
        /// </summary>
        public InputList<double> Users
        {
            get => _users ?? (_users = new InputList<double>());
            set => _users = value;
        }

        public GroupState()
        {
        }
        public static new GroupState Empty => new GroupState();
    }
}
