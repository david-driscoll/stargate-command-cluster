# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.2.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app tailscale-authkey
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  interval: 1h
  timeout: 5m
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: 7
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 7
      strategy: rollback
  rollback:
    force: false # true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  dependsOn:
    - name: onepassword-connect
      namespace: kube-system
    - name: external-secrets
      namespace: kube-system
  values:
    controllers:
      *app :
        serviceAccount:
          name: tailscale-secret-manager
        annotations:
          reloader.stakater.com/auto: "true"
        cronjob:
          backoffLimit: 6
          concurrencyPolicy: Forbid
          failedJobsHistory: 2
          schedule: "0 4 * * *"
          startingDeadlineSeconds: 30
          successfulJobsHistory: 3
          suspend: false
        type: cronjob
        containers:
          main: &job
            securityContext:
              allowPrivilegeEscalation: true
            image:
              repository: golang
              tag: 1.25.0-bookworm@sha256:81dc45d05a7444ead8c92a389621fafabc8e40f8fd1a19d7e5df14e61e98bc1a
              pullPolicy: IfNotPresent
            env:
              TS_API_CLIENT_ID:
                valueFrom:
                  secretKeyRef:
                    name: tailscale-oauth
                    key: username
              TS_API_CLIENT_SECRET:
                valueFrom:
                  secretKeyRef:
                    name: tailscale-oauth
                    key: credential
            command:
              - /scripts/tailscale.sh

            # resources:
            #   requests:
            #     memory: 128Mi
            #     cpu: 10m
            #   limits:
            #     memory: 256Mi
            #     cpu: 20m
      init:
        serviceAccount:
          name: tailscale-secret-manager
        annotations:
          reloader.stakater.com/auto: "true"
        type: job
        job:
          backoffLimit: 6
          activeDeadlineSeconds: 3600
          ttlSecondsAfterFinished: 3600
          parallelism: 1
          completions: 1
        containers:
          main:
            <<: *job

    defaultPodOptions:
      securityContext:
        fsGroup: 0
        fsGroupChangePolicy: "OnRootMismatch"
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      shareProcessNamespace: true

    persistence:
      script:
        type: configMap
        name: tailscale-script
        defaultMode: 493
        globalMounts:
          - path: /scripts/tailscale.sh
            subPath: tailscale.sh

    serviceAccount:
      tailscale-secret-manager:
        forceRename: tailscale-secret-manager
    rbac:
      roles:
        tailscale-secret-manager:
          forceRename: tailscale-secret-manager
          type: Role
          rules:
            - apiGroups: [""]
              resources: ["pods"]
              verbs: ["get", "list", "watch"]
            - apiGroups: [""]
              resources: ["secrets"]
              verbs: ["get", "create", "update", "patch"]
            - apiGroups: [""]
              resources: ["configmaps"]
              verbs: ["get", "create", "update", "patch"]
      bindings:
        tailscale-secret-manager:
          type: RoleBinding
          forceRename: tailscale-secret-manager
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: Role
            name: tailscale-secret-manager
          subjects:
            - kind: ServiceAccount
              name: tailscale-secret-manager
              namespace: ${NAMESPACE}
