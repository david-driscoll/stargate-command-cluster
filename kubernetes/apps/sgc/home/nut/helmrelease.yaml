# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.2.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app nut

spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  interval: 15m
  timeout: 10m
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: 7
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 7
      strategy: rollback
  rollback:
    force: false # true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  dependsOn: []
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          main:
            image:
              repository: docker.io/nodered/node-red
              tag: 4.1.0@sha256:da6ac47cce14ed8df7ceddc8a15c8f4c0a41e0836c4d6e68e7a6a82329305a6b
            env:
              TZ: "${TIMEZONE}"
              NODE_RED_ENABLE_PROJECTS: "true"
              NODE_RED_ENABLE_SAFE_MODE: "false"
            resources:
              requests:
                memory: 350Mi
                cpu: 25m
              limits:
                memory: 500Mi

    defaultPodOptions:
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        runAsGroup: 568
        runAsNonRoot: true
        runAsUser: 568
        seccompProfile:
          type: RuntimeDefault
      shareProcessNamespace: true

    persistence:
      data:
        existingClaim: ${APP}

    service:
      app:
        controller: *app
        type: ClusterIP
        ports:
          http:
            port: &port 1880

    route:
      internal:
        parentRefs:
          - name: internal
            namespace: network
            kind: Gateway
        hostnames:
          - "${APP}.${ROOT_DOMAIN}"
        kind: HTTPRoute
        rules:
          - backendRefs:
              - identifier: app
                port: http
