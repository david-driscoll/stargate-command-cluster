---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/source.toolkit.fluxcd.io/ocirepository_v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: OCIRepository
metadata:
  name: unifi-dns
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 1.16.1
  url: oci://ghcr.io/home-operations/charts-mirror/external-dns
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app unifi-dns
spec:
  interval: 30m
  chart:
    spec:
      chart: external-dns
      version: 1.16.1
      sourceRef:
        kind: HelmRepository
        name: external-dns
        namespace: flux-system
  install:
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: onepassword-connect
      namespace: kube-system
  values:
    fullnameOverride: *app
    logLevel: debug
    interval: 1m
    policy: sync
    provider:
      name: webhook
      webhook:
        image:
          repository: ghcr.io/kashalls/external-dns-unifi-webhook
          tag: v0.6.0@sha256:dd71adb88b64174b158481fb359dfe985d8bea1cad8cefba36209c8fc9eb03d3
        env:
          - name: UNIFI_HOST
            value: "https://${DISCORD_DOMAIN}"
          - name: UNIFI_API_KEY
            valueFrom:
              secretKeyRef:
                name: unifi-dns-secret
                key: credential
        livenessProbe:
          httpGet:
            path: /healthz
            port: http-webhook
          initialDelaySeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /readyz
            port: http-webhook
          initialDelaySeconds: 10
          timeoutSeconds: 5
    triggerLoopOnEvent: true
    extraArgs:
      - --traefik-disable-legacy
    sources:
      - "traefik-proxy"
      - "crd"
      - "ingress"
      - "service"
    txtOwnerId: "${CLUSTER_CNAME}"
    txtPrefix: "k8s.${CLUSTER_CNAME}."
    domainFilters:
      - "${ROOT_DOMAIN}"
      - "${TAILSCALE_DOMAIN}"
    serviceMonitor:
      enabled: true
    podAnnotations:
      reloader.stakater.com/reload: "true"
