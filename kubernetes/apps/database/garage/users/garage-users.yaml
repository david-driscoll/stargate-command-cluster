---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.1.2/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: garage-users
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  interval: 1h
  timeout: 5m
  install:
    createNamespace: true
    replace: true
    remediation:
      retries: 7
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 7
      strategy: rollback
  rollback:
    force: true
    cleanupOnFail: true
    recreate: true
  uninstall:
    keepHistory: false
  dependsOn:
  - name: garage
  values:
    controllers:
      job:
        serviceAccount:
          name: garage-users
        type: job
        job:
          backoffLimit: 100
          suspend: false
          ttlSecondsAfterFinished: 600
        containers: &job
          job:
            image:
              repository: alpine/k8s
              tag: 1.33.2@sha256:329cf13af9ee678e3afd71b6af44447029f119f713bec278db2fb53571e857f5
              pullPolicy: IfNotPresent
            securityContext:
              readOnlyRootFilesystem: false
            command:
            - /bin/sh
            - -c
            - /scripts/init-users.sh
            env:
              G_ALIAS: ${CLUSTER_CNAME}
              GARAGE_RPC_HOST: "${GARAGE_NODE_ID}@garage-0.garage.database.svc.cluster.local:3901"
              GARAGE_RPC_SECRET:
                valueFrom:
                  secretKeyRef:
                    name: garage-rpc-secret
                    key: rpcSecret
              PUID: 568
              PGID: 568
              UMASK: 002
              TZ: "${TIMEZONE}"
              GARAGE_USER_CLUSTER_USER:
                valueFrom:
                  secretKeyRef:
                    name: garage-cluster-user
                    key: username
              GARAGE_PASSWORD_CLUSTER_USER:
                valueFrom:
                  secretKeyRef:
                    name: garage-cluster-user
                    key: password
              GARAGE_USER_AUTHENTIK:
                valueFrom:
                  secretKeyRef:
                    name: authentik-garage-access-key
                    key: username
              GARAGE_PASSWORD_AUTHENTIK:
                valueFrom:
                  secretKeyRef:
                    name: authentik-garage-access-key
                    key: password
              GARAGE_USER_POSTGRES_SGC:
                valueFrom:
                  secretKeyRef:
                    name: postgres-sgc-garage-access-key
                    key: username
              GARAGE_PASSWORD_POSTGRES_SGC:
                valueFrom:
                  secretKeyRef:
                    name: postgres-sgc-garage-access-key
                    key: password
              GARAGE_USER_TIVI_SYNC:
                valueFrom:
                  secretKeyRef:
                    name: tivi-sync-garage-access-key
                    key: username
              GARAGE_PASSWORD_TIVI_SYNC:
                valueFrom:
                  secretKeyRef:
                    name: tivi-sync-garage-access-key
                    key: password
            resources:
              requests:
                cpu: 10m
                memory: 32Mi
      cron:
        cronjob:
          backoffLimit: 6
          concurrencyPolicy: Forbid
          failedJobsHistory: 2
          schedule: "*/10 * * * *"
          startingDeadlineSeconds: 30
          successfulJobsHistory: 3
          suspend: false
        type: cronjob
        containers: *job
    defaultPodOptions:
      securityContext:
        runAsUser: 0
        runAsNonRoot: false
        runAsGroup: 0
    persistence:
      tmp:
        type: emptyDir
      data:
        type: emptyDir
      scripts:
        type: configMap
        name: ${APP}-scripts
        defaultMode: 493
        globalMounts:
        - path: /scripts/init-users.sh
          subPath: init-users.sh
    serviceAccount:
      garage-users: {}
    rbac:
      bindings:
        garage-users:
          type: RoleBinding
          subjects:
          - kind: ServiceAccount
            name: garage-users
            namespace: garage
          roleRef:
            kind: Role
            name: garage-users
      roles:
        garage-users:
          type: Role
          rules:
          - apiGroups: [""]
            resources: ["pods/exec"]
            verbs: ["create", "get"]
          - apiGroups: [""]
            resources: ["pods"]
            verbs: ["get", "list"]
