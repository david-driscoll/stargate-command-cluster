// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Truenas
{
    public static class GetCronjob
    {
        public static Task<GetCronjobResult> InvokeAsync(GetCronjobArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCronjobResult>("truenas:index/getCronjob:getCronjob", args ?? new GetCronjobArgs(), options.WithDefaults(), Utilities.PackageParameterization());

        public static Output<GetCronjobResult> Invoke(GetCronjobInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCronjobResult>("truenas:index/getCronjob:getCronjob", args ?? new GetCronjobInvokeArgs(), options.WithDefaults());

        public static Output<GetCronjobResult> Invoke(GetCronjobInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCronjobResult>("truenas:index/getCronjob:getCronjob", args ?? new GetCronjobInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCronjobArgs : global::Pulumi.InvokeArgs
    {
        [Input("cronjobId", required: true)]
        public string CronjobId { get; set; } = null!;

        [Input("id")]
        public string? Id { get; set; }

        public GetCronjobArgs()
        {
        }
        public static new GetCronjobArgs Empty => new GetCronjobArgs();
    }

    public sealed class GetCronjobInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("cronjobId", required: true)]
        public Input<string> CronjobId { get; set; } = null!;

        [Input("id")]
        public Input<string>? Id { get; set; }

        public GetCronjobInvokeArgs()
        {
        }
        public static new GetCronjobInvokeArgs Empty => new GetCronjobInvokeArgs();
    }


    [OutputType]
    public sealed class GetCronjobResult
    {
        public readonly string Command;
        public readonly string CronjobId;
        public readonly string Description;
        public readonly bool Enabled;
        public readonly bool HideStderr;
        public readonly bool HideStdout;
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetCronjobScheduleResult> Schedules;
        public readonly string User;

        [OutputConstructor]
        private GetCronjobResult(
            string command,

            string cronjobId,

            string description,

            bool enabled,

            bool hideStderr,

            bool hideStdout,

            string id,

            ImmutableArray<Outputs.GetCronjobScheduleResult> schedules,

            string user)
        {
            Command = command;
            CronjobId = cronjobId;
            Description = description;
            Enabled = enabled;
            HideStderr = hideStderr;
            HideStdout = hideStdout;
            Id = id;
            Schedules = schedules;
            User = user;
        }
    }
}
