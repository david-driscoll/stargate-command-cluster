// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Unifi.Inputs
{

    public sealed class SettingIpsSuppressionWhitelistArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Direction for whitelist. Valid values are:
        ///   * `src` - Whitelist by source address
        ///   * `dst` - Whitelist by destination address
        ///   * `both` - Whitelist by both source and destination addresses
        /// </summary>
        [Input("direction", required: true)]
        public Input<string> Direction { get; set; } = null!;

        /// <summary>
        /// Mode for whitelist. Valid values are:
        ///   * `ip` - Whitelist by individual IP address
        ///   * `subnet` - Whitelist by subnet
        ///   * `network` - Whitelist by network ID
        /// </summary>
        [Input("mode", required: true)]
        public Input<string> Mode { get; set; } = null!;

        /// <summary>
        /// Value for whitelist. The meaning depends on the mode:
        ///   * For `ip` mode: An IP address (e.g., `192.168.1.100`)
        ///   * For `subnet` mode: A CIDR notation subnet (e.g., `192.168.1.0/24`)
        ///   * For `network` mode: A network ID from your UniFi configuration
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public SettingIpsSuppressionWhitelistArgs()
        {
        }
        public static new SettingIpsSuppressionWhitelistArgs Empty => new SettingIpsSuppressionWhitelistArgs();
    }
}
