// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Unifi.Inputs
{

    public sealed class SettingUsgUpnpGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable NAT-PMP (NAT Port Mapping Protocol) support alongside UPNP. NAT-PMP is Apple's alternative to UPNP, providing similar automatic port mapping capabilities. When enabled, Apple devices like Macs, iPhones, and iPads can automatically configure port forwarding for services like AirPlay, FaceTime, iMessage, and other Apple services. Defaults to `false`.
        /// </summary>
        [Input("natPmpEnabled")]
        public Input<bool>? NatPmpEnabled { get; set; }

        /// <summary>
        /// Enable secure mode for UPNP. In secure mode, the gateway only forwards ports to the device that specifically requested them, enhancing security. This prevents malicious applications from redirecting ports to different devices than intended. It's strongly recommended to enable this setting when using UPNP to minimize security risks. Defaults to `false`.
        /// </summary>
        [Input("secureMode")]
        public Input<bool>? SecureMode { get; set; }

        /// <summary>
        /// Specify which WAN interface to use for UPNP service. Valid values are:
        ///   * `WAN` (default) - Use the primary WAN interface for UPNP port forwarding
        ///   * `WAN2` - Use the secondary WAN interface for UPNP port forwarding (if available)
        /// 
        /// This setting is particularly relevant for dual-WAN setups where you may want to direct UPNP traffic through a specific WAN connection. If your gateway only has a single WAN interface, use the default `WAN` setting.
        /// </summary>
        [Input("wanInterface")]
        public Input<string>? WanInterface { get; set; }

        public SettingUsgUpnpGetArgs()
        {
        }
        public static new SettingUsgUpnpGetArgs Empty => new SettingUsgUpnpGetArgs();
    }
}
