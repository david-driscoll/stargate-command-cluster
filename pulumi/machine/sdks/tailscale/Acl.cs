// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tailscale
{
    [TailscaleResourceType("tailscale:index/acl:Acl")]
    public partial class Acl : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The policy that defines which devices and users are allowed to connect in your network. Can be either a JSON or a HuJSON
        /// string.
        /// </summary>
        [Output("acl")]
        public Output<string> Acl { get; private set; } = null!;

        [Output("aclId")]
        public Output<string> AclId { get; private set; } = null!;

        /// <summary>
        /// If true, will skip requirement to import acl before allowing changes. Be careful, can cause ACL to be overwritten
        /// </summary>
        [Output("overwriteExistingContent")]
        public Output<bool?> OverwriteExistingContent { get; private set; } = null!;

        /// <summary>
        /// If true, will reset the ACL for the Tailnet to the default when this resource is destroyed
        /// </summary>
        [Output("resetAclOnDestroy")]
        public Output<bool?> ResetAclOnDestroy { get; private set; } = null!;


        /// <summary>
        /// Create a Acl resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Acl(string name, AclArgs args, CustomResourceOptions? options = null)
            : base("tailscale:index/acl:Acl", name, args ?? new AclArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private Acl(string name, Input<string> id, AclState? state = null, CustomResourceOptions? options = null)
            : base("tailscale:index/acl:Acl", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Acl resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Acl Get(string name, Input<string> id, AclState? state = null, CustomResourceOptions? options = null)
        {
            return new Acl(name, id, state, options);
        }
    }

    public sealed class AclArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The policy that defines which devices and users are allowed to connect in your network. Can be either a JSON or a HuJSON
        /// string.
        /// </summary>
        [Input("acl", required: true)]
        public Input<string> Acl { get; set; } = null!;

        [Input("aclId")]
        public Input<string>? AclId { get; set; }

        /// <summary>
        /// If true, will skip requirement to import acl before allowing changes. Be careful, can cause ACL to be overwritten
        /// </summary>
        [Input("overwriteExistingContent")]
        public Input<bool>? OverwriteExistingContent { get; set; }

        /// <summary>
        /// If true, will reset the ACL for the Tailnet to the default when this resource is destroyed
        /// </summary>
        [Input("resetAclOnDestroy")]
        public Input<bool>? ResetAclOnDestroy { get; set; }

        public AclArgs()
        {
        }
        public static new AclArgs Empty => new AclArgs();
    }

    public sealed class AclState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The policy that defines which devices and users are allowed to connect in your network. Can be either a JSON or a HuJSON
        /// string.
        /// </summary>
        [Input("acl")]
        public Input<string>? Acl { get; set; }

        [Input("aclId")]
        public Input<string>? AclId { get; set; }

        /// <summary>
        /// If true, will skip requirement to import acl before allowing changes. Be careful, can cause ACL to be overwritten
        /// </summary>
        [Input("overwriteExistingContent")]
        public Input<bool>? OverwriteExistingContent { get; set; }

        /// <summary>
        /// If true, will reset the ACL for the Tailnet to the default when this resource is destroyed
        /// </summary>
        [Input("resetAclOnDestroy")]
        public Input<bool>? ResetAclOnDestroy { get; set; }

        public AclState()
        {
        }
        public static new AclState Empty => new AclState();
    }
}
